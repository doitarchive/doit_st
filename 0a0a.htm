<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.05.2004 -->
<html>
<head>
<title>
DOIT_ST - Tips u. Tricks zur Atari Serie: PAK
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="doit@doitarchive.de">
<link rev=made href="mailto:doit@doitarchive.de" title="E-Mail">
<link rel=home href="doitst1h.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0a.htm" target="UDOcon"><img src="udo_up.gif" alt="Beschleuniger" border=0 width="24" height="24"></a>
<a href="0a09.htm" target="UDOcon"><img src="udo_lf.gif" alt="HBS640xx" border=0 width="24" height="24"></a>
<a href="0a0b.htm" target="UDOcon"><img src="udo_rg.gif" alt="Hypercache" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="PAK">10.10 PAK</a></h1>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p><tt> PAK/68-3 - Informationen </tt>
<br>
<br>
</p>
<p><img src="image/deutsch.gif" border=0 width="35" height="22"></p><br>
<p>Mit zunehmender Verbreitung der PAK/68-3 haeufen sich insbesondere
im Mausnetz Anfragen nach eine FAQ zu dieser Beschleunigerkarte. Damit
kann ich leider nicht dienen, allerdings habe ich die wichtigsten und
interessantesten postings zur PAK-3, seit den ersten Geruechten,
gesammelt und moechte sie hiermit allen Interessenten zugaenglich
machen.
<br>
</p>
<p>Diese Sammlung entstand zunaechst aus purem Eigennutz, denn ich
habe mir die PAK-3 gleich nach der Veroeffentlichung des Projektes in
den c't's 10,11/91 und nach Erscheinen der Platine selbst aufgebaut.
Den zahlreichen 'Tips und Tricks' aus maus.sys.atari.hardware habe ich
es zu verdanken, dass ich jetzt stolzer Besitzer einer perfekt
funktionierenden 50 MHz PAK-3 incl. FPU bin, die ich nicht mehr missen
moechte.
<br>
</p>
<p>Ich hatte es mal vor, aus diesem ganzen Sammelsurium einen besser
sortierten und lesbareren Extrakt, also eine echte FAQ, zu machen, in
die auch meine eigenen Erfahrungen mit diesem Projekt eingeflossen
waeren, aber leider fehlt mir inzwischen die Zeit hierzu. Das ist auch
der Grund dafuer, dass ich diese Sammlung jetzt veroeffentliche, denn
vielleich setzt sich ja ein anderer PAK-Fan daran.
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/pak68_1.gif" border=0 width="320" height="165"></p><br>
<div align=center><tt> Abbildung 1 - Pak 68k <a href="0a.htm" target="UDOcon">Beschleuniger</a> </tt>
<br>
</div>
<p>
<br>
<br>
</p>
<p>Ueberfluessige, falsche oder doppelte postings habe ich nach
Moeglichkeit nicht abgelegt, aber da ich nicht den ganzen Inhalt im
Kopf habe, kann der Text doch eine Menge Redundanz enthalten. Der aus
den beteiligten newsgroups bekannte &quot;Rauschlevel&quot; an nicht
verwertbaren Informationen spiegelt sich auch in dieser Sammlung
wieder.
<br>
</p>
<p>Waehrend meiner PAK-3-Bastelei ist uebrigens das Programm
&quot;FPU-Check&quot; entstanden, das ich allen PAK+FPU-Besitzern
empfehle, die Probleme mit dem FPU-Betrieb haben oder vermuten, und
auch denen, die versuchen durch Tuning immer noch mehr aus dieser
Hardware herauszuholen.
<br>
<br>Stefan Krey (sk@lumumba.shnet.org)
<br>
</p>
<p>
<br>
<br><b> PAK Benchmarks </b>
<br>
</p>
<pre>
*
* NVDI GEM-Test V1.02  (c) 1990, 1991 by Sven &amp; Wilfried Behne
*
* <a href="0901.htm" target="UDOcon">Betriebssystem</a>   : KAOS 1.42 vom 08.03.1991
* Referenzsystem   : TOS 1.04
* <a href="080108.htm" target="UDOcon">CPU</a>              : M68020
* <a href="080104.htm" target="UDOcon">Blitter</a>          : nicht vorhanden
*
Textausgabe        : 3565 %
Linien             : 991 %
Rechtecke          : 804 %
Polygone           : 869 %
Kreise/Ellipsen    : 1660 %
Rasteroperationen  : 894 %
Attributfunktionen : 961 %
Auskunftsfunktionen: 748 %
ESCAPES            : 835 %
BIOS-Ausgabe       : 472 %
GEMDOS-Ausgabe     : 2150 %
AES-Objekt-Ausgabe : 2246 %

</pre>
<p>Modula Dhrystone ergab: ca. 3200 (leider den exakten Wert nicht
aufgeschrieben)
<br>Modula Juliamenge ergab: 1514 sec.
<br>
</p>
<p>Die Werte entsprechen in etwa, den Werten, die die neue PAK 68/3
schaffen wird bei 32 MHz auf einem normalen 8 MHz Atari. Die obigen
Werte (schon bei 24 MHz) verdankt die PAK dem besseren
&quot;Datendurchsatz&quot; auf die Hauptplatine. Obige Werte
entsprechen fast schon TT Performance! Hierzu vielleicht noch ein Wert
als Vergleich: Die Vektorisierung eines kleinen Gem-Image auf dem TT
mit Avant dauert 19 Minuten. Das Vektorisieren mit obiger
Konstellation dauerte 22 Minuten (0,86-facher TT).
<br>
</p>
<p>
<br>
</p>
<p>Wie versprochen hier die Werte von der PAK 68/2 mit second level
Cache:
<br>Mainboard: 12 MHz
<br>PAK : 24 MHz
<br>
</p>
<p>An den Timing der PAK, die der neuen PAK entspricht, wurde noch
ein wenig gefeilt. Die Werte sehen jetzt noch ein wenig besser aus,
als beim letzten posting.
<br>
</p>
<p>
<br>
</p>
<pre>Tex-Lauf mit LKurz: _2 min 38 sec_

Q-Index Version 2.1: (KAOS auf der PAK; NVDI)
<a href="080108.htm" target="UDOcon">CPU</a> memory  : 495
    register: 614
    divide  : 762
    shifts  :2628
TOS text    : 778
    string  :4218
    scroll  : 331
    dialog  :2159

* NVDI GEM-Test V1.02  (c) 1990, 1991 by Sven &amp; Wilfried Behne
*
* <a href="0901.htm" target="UDOcon">Betriebssystem</a>   : KAOS 1.42 vom 08.03.1991
* Referenzsystem   : TOS 1.04
* <a href="080108.htm" target="UDOcon">CPU</a>              : M68020
* <a href="080104.htm" target="UDOcon">Blitter</a>          : nicht vorhanden
*
Textausgabe        : 4001 %
Linien             : 1099 %
Rechtecke          : 1063 %
Polygone           : 984 %
Kreise/Ellipsen    : 1863 %
Rasteroperationen  : 1076 %
Attributfunktionen : 1116 %
Auskunftsfunktionen: 893 %
ESCAPES            : 940 %
BIOS-Ausgabe       : 578 %
GEMDOS-Ausgabe     : 2332 %
AES-Objekt-Ausgabe : 3150 %


Modula Dhrystone: 3944
Modula Juliamenge: 1350 sec.

</pre>
<p>...und w&auml;hrend die Leute in Villariba noch vor ihrem
orginalen ST die Tastatur schruppen feiern die Leute in Villabacho
schon dank der Fettl&ouml;se...&auml;h...Bitl&ouml;sekraft der PAK...
:-)
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> GAL-Listing aus der c't </b>
<br>
</p>
<p>- Das Listing war f&uuml;r ein 22V10, bei dem Pin15 im Gegensatz
zum 20V8 als Eingang benutzt werden kann. Leider sind 22V10 recht
teuer und mit den verbreiteten Low-Cost-Brennern nicht zu
programmieren
<br>
<br>- In den c't-Gleichungen waren zwei Fehler. Es scheint bisher
keinem auf- gefallen zu sein, offensichtlich hat so gut wie keiner
SRAM auf der PAK.
<br>
</p>
<p>
<br>Hier nun mein GAL-Listing (f&uuml;r ein 20V8!), das Max zu
funktionierendem SRAM auf der PAK 68/2 verholfen hat:
<br>
<br>
</p>
<pre>
PAK12_2d  PAK 68/2:  Addressdekoder SRAM   Holger Zimmermann-Baedecker @ PE

Im Original ist ein 22V10 vorgesehen. Diese Gleichungen sind so ge&auml;ndert
worden, da&szlig; ein 20V8 verwendet werden kann. Pin16 des 20V8 so wegbiegen,
da&szlig; er an der Fassung vorbei ins Leere ragt, und mit Pin15 verbinden
(Drahtbr&uuml;cke o.&auml;.).

09-04-92              aus P20_20.PDS zusammengestellt (war f&uuml;r 22V10)
10-04-92              entwanzt
17-08-92   PAK12_2a   512kB ab $D0.0000
01-10-92   PAK12_2b   f&uuml;r 128kB (4* 32k*8)
08-04-93   PAK12_2c   512kB ab $0100.0000 (oberhalb 16MB, a24 statt a29)
11-06-93   PAK12_2d   512kb ab $E0.0000
                       ___  ___
                      |   \/   |
               !as_20 |1     24| VCC
    (cpuspace)   !csp |2     23| a17
                 siz0 |3     22| !dsack0
                 siz1 |4     21| !dsack1
                  a18 |5     20| !cs3     (!cs f&uuml;r U8)
                  a19 |6     19| !cs2     (!cs f&uuml;r U9)
                  a20 |7     18| !cs2     (!cs f&uuml;r U10)
                  a21 |8     17| !cs0     (!cs f&uuml;r U11)
                  a22 |9     16| a0       (war a16, jetzt mit Pin15 verbinden)
                  a23 |10    15| a0x      (hier liegt a0 an, aber Pin15 kann
                  a29 |11    14| a1        nicht als Input benutzt werden)
                  GND |12    13| a30
                      |________|
%ID
      PAK12_2d
%TYP
      GAL20V8A
%PINS
      !as_20  !csp  siz0  siz1  a18  a19  a20  a21  a22  a23  a29
      a30  a1  a0x  a0  !cs0  !cs1  !cs2  !cs3  !dsack1  !dsack0  a17
%LOGIC

 a0x.OE = GND;

 a0.OE  = GND;

 cs0  = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a0 * !a1;

 cs1  = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a1 * siz1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * a0 * !a1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a1 * !siz0;
                                                '(war: !a1 * siz0)'

 cs2  = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * a0 * !a1 * !siz0
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a1 * siz0 * siz1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a1 * !siz0 * !siz1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !a0 * a1;
                                                '(war: !a0 * !a1)'

 cs3  = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * a1 * siz1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * a0 * a1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * !siz0 * !siz1
      + !csp * as_20 * a23 * a22 * a21 * !a20 * !a19 * a0 * siz0 * siz1;

 dsack0.OE = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19;
 dsack0    = a23
           + !a23;

 dsack1.OE = !csp * as_20 * a23 * a22 * a21 * !a20 * !a19;
 dsack1    = a23
           + !a23;

%END
</pre>
<p>
<br>
<br>
</p>
<p><b> PAK12_20 Addressdekoder SRAM auf der PAK 68/2 </b>
<br>
</p>
<p>Im Original ist ein 22V10 vorgesehen. Diese Gleichungen sind so
ge&auml;ndert worden, da&szlig; ein 20V8 verwendet werden kann. Pin16
des 20V8 so wegbiegen, da&szlig; er an der Fassung vorbei ins Leere
ragt, und mit Pin15 verbinden (Drahtbr&uuml;cke o.&auml;.).
<br>
</p>
<p>
<br>
</p>
<pre>
09-04-92              aus P20_20.PDS zusammengestellt (war f&uuml;r 22V10)
10-04-92              entwanzt
17-08-92   PAK12_2a   512kB ab $D0.0000
01-10-92   PAK12_2b   f&uuml;r 128kB (4* 32k*8)
08-04-93   PAK12_2c   512kB ab $0100.0000 (oberhalb 16MB, a24 statt a29)
07-06-93   PAK12_2d   512kb ab $E0.0000
                       ___  ___
                      |   \/   |
               !as_20 |1     24| VCC
    (cpuspace)   !csp |2     23| a17      (nicht benutzt)
                 siz0 |3     22| !dsack0
                 siz1 |4     21| !dsack1
                  a18 |5     20| !cs3     (!cs f&uuml;r U8)
                  a19 |6     19| !cs2     (!cs f&uuml;r U9)
                  a20 |7     18| !cs2     (!cs f&uuml;r U10)
                  a21 |8     17| !cs0     (!cs f&uuml;r U11)
                  a22 |9     16| a0       (war a16, jetzt mit Pin15 verbinden)
                  a23 |10    15| a0x      (hier liegt a0 an, aber Pin15 kann
    (war a29)     a24 |11    14| a1        nicht als Input benutzt werden)
                  GND |12    13| a30
                      |________|
%ID
      PAK12_2d
%TYP
      GAL20V8A
%PINS
      !as_20  !csp  siz0  siz1  a18  a19  a20  a21  a22  a23  a24
      a30  a1  a0x  a0  !cs0  !cs1  !cs2  !cs3  !dsack1  !dsack0  a17
%LOGIC

 a0x.OE = GND;

 a0.OE  = GND;

 cs0  = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a0 * !a1;

 cs1  = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a1 * siz1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * a0 * !a1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a1 * !siz0;
                                                     '(war: !a1 * siz0)'

 cs2  = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * a0 * !a1 * !siz0
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a1 * siz0 * siz1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a1 * !siz0 * !siz1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !a0 * a1;
                                                   '(war: !a0 * !a1)'

 cs3  = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * a1 * siz1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * a0 * a1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * !siz0 * !siz1
      + as_20 * !csp * a23 * a22 * a21 * !a20 * !a19 * a0 * siz0 * siz1;

 dsack0.OE = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19;
 dsack0    = a23
           + !a23;

 dsack1.OE = as_20 * !csp * a23 * a22 * a21 * !a20 * !a19;
 dsack1    = a23
           + !a23;

%END

</pre>
<p>Tja, die Gleichung in ein 20V8 brennen lassen und ausprobieren,
das war schnell getan! Und jetzt l&auml;uft also TOS 2.06. Das TOS
ger&auml;t etwa nach folgendem Schema beim Booten ins RAM:
<br>
</p>
<p>Auf der PAK befindet sich ein freier Platz f&uuml;r ein
zus&auml;tzliches GAL womit z.B. die PAK und ein zus&auml;tzlicher
68000 umgeschaltet werden k&ouml;nnen (vergl. hierzu den entspr.
Artikel aus der CT Stichwort: PUK auf der PAK).
<br>
</p>
<p>Auf der PAK hast Du die M&ouml;glichkeit mit Hilfe eines
Umschalt-GAL anstelle der PAK einen 68000er anzusprechen. Diese
Umschaltung gab es schon f&uuml;r die alte PAK und nennt sich PUK
(vergl. hierzu den entspr. Artikel aus der CT). Damit l&auml;uft dann
auch das Fossil Signum.
<br>
</p>
<p>
<br>Programm im AUTO-Ordner Programm
<br>
</p>
<p>
<br>IF TOS 2.06 nicht vorhanden
<br>lade TOS_2_06.IMG in ST-RAM
<br>kopiere in einer Schleife den TOS Code ins PAK-RAM
<br>springe direkt ins PAK-RAM /* -&gt; Reset, ins TOS 2.06 */
<br>ELSE
<br>lade Grafiktreiber ins PAK(Fast)-RAM
<br>/* hier experimentiere ich noch... */
<br>ENDIF
<br>
<br>
<br>
</p>
<p><b> Zwei Versionen </b>
<br>
</p>
<p>Es soll zwei Versionen geben, PAK V20 und V30 mit 32kB Cache (oder
war es V020 &amp; V030 ?). Variabler Takt, 3 bzw 5 GALs, Ausma&szlig;e
etwa PAK2. Geschwindigkeit &gt; TT (die Version mit dem 68030 32 Mhz).
<br>
</p>
<p>Der Bausatz w&uuml;rde sich ohne <a href="080108.htm" target="UDOcon">CPU</a> und FPU etwa auf 150,- DM
belaufen.
<br>
</p>
<p>Man nehme die aktuellen Preise f&uuml;r 1 * neue Platine PAK3 (so
etwa, wie der Preis der alten Platine (Angabe ohne Gew&auml;hr))
<br>
</p>
<p>1 * 68020 oder 030 (je nach Platinenversion)
<br>1 * Copro (optionsweise)
<br>2 * 74F541
<br>4 * SRAM 8K*8 DIL28.3
<br>2 * TAG-RAM DIL 28.3
<br>5 * GAls mit entsprechenden Gleichungen :-)
<br>...und noch diversen Kleinschei&szlig; (haupts&auml;chlich
SIL-Streifen)
<br>
</p>
<p>Die abgedruckten GAL-Gleichungen sind nicht identisch mit den
&uuml;ber Mailbox verbreiteten Files! Teilweise sind sogar Pins
vertauscht (Q1 und DSACK von U4).
<br>
</p>
<p>Selbst wenn die richtigen Gleichungen vorhanden sind, ist es mit
der Maxon-Galprommer-Software nahezu unm&ouml;glich, daraus
funktionsf&auml;hige Jedecfiles zu machen.
<br>Es sollten deshalb unbedingt direkt die Jedecfiles von Holger
Zimmermann benutzt werden. F&uuml;r eine 030er PAK mit 32MHz habe ich
diese unter PAK3_JED.ZIP in die AC3 geladen.
<br>
</p>
<p>Probleme gab es nach dem Zusammenbau eigentlich nur mit der
richtigen Jumpereinstellung (Was soll blo&szlig; &quot;J11 Cache
Control... 2-3 Umschaltung &uuml;ber Schreibzugriff auf das ROM&quot;
bedeuten?). Es kam zu &auml;u&szlig;erst merkw&uuml;rdigen Fehlern
(vor allem beim DMA), wenn einer der Caches eingeschaltet war, die <a href="080105.htm" target="UDOcon">MMU</a>
aber nicht aktiviert wurde. Deshalb unten noch die Jumperbelegung, so
wie es bei mir jetzt l&auml;uft.
<br>
</p>
<p>Das QINDEX 1.5 (die letzte PD-Version) st&uuml;rzt manchmal ab.
Dies liegt an dem Programm, nicht an der PAK! Unbedingt eine neuere
Version verwenden...
<br>
</p>
<p>Nach anf&auml;nglichen Schwierigkeiten l&auml;uft die PAK jetzt
erstaunlich problemlos und fantastisch schnell, inzwischen mit dem
gepatchten TOS 3.06 und mit einem 36MHz Oszillator, was offenbar noch
keine Probleme macht.
<br>
</p>
<p>Dank an Holger Zimmermann, der auch noch mitten in der Nacht
Jedec-Files verschickt und an Steffen Engel f&uuml;r den 3.06-Support.
<br>
</p>
<p>Die abgedruckte St&uuml;ckliste und auch der <a href="190d.htm" target="UDOcon">Schaltplan</a> sind nicht
ganz vollst&auml;ndig, deshalb hier noch einige Korrekturen bzw.
Erg&auml;nzungen (sicher noch nicht vollst&auml;ndig):
<br>
<br>
</p>
<p>- R27 existiert im Layout nicht
<br>- R42 10 KOhm
<br>- C41, C42 22pF
<br>- C16 100nF
<br>
<br>Die im <a href="190d.htm" target="UDOcon">Schaltplan</a> freien Pins von Con 1 sind teilweise doch
angeschlossen.
<br>
</p>
<p>Pin 1 von J11 ist mit /CIOUT des Prozessors verbunden.
<br>
</p>
<p>Und die Jumperbelegung bei meiner PAK (&Auml;nderungen
vorbehalten...):
<br>
</p>
<p>J1 offen
<br>J2 offen
<br>J3 offen
<br>J4 offen
<br>J5 gesteckt
<br>J6 gesteckt
<br>J7 1-2
<br>J8 2-3
<br>J9 1-2
<br>J10 offen (FPU nicht vorhanden)
<br>J11 1-2
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/pak68_2.gif" border=0 width="550" height="319"></p><br>
<div align=center><tt> Abbildung 2 - Pak 68k <a href="0a.htm" target="UDOcon">Beschleuniger</a> </tt>
<br>
</div>
<p>
<br>
<br>
</p>
<p>
<br>
<br><b> Kann man da die &uuml;bliche TT Software benutzen. </b>
<br>
</p>
<p>Ja, das geht.
<br>
</p>
<p>Man mu&szlig; f&uuml;r TOS 2.06 vorher nur die <a href="080105.htm" target="UDOcon">MMU</a> initialisieren
wie es TOS 3.06 macht, um die virtuellen Treiber auf den ihnen
bekannten Zustand zu bringen.
<br>
</p>
<p>Wir arbeiten an den n&ouml;tigen
Patches/Zusatzprogrammen/Dokumentationen
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> PAK und externe ROMs </b>
<br>
</p>
<p>Die PAK l&auml;uft sehr wohl mit ROMs, die nicht auf der PAK
selbst sitzen. Also ganz normal: wenn eine TOS-Karte f&uuml;r ein 2.06
eingebaut ist, l&auml;uft die PAK damit.
<br>
</p>
<p>TOS 3.06 gibt es unter anderem bei Hard und Soft auf 4 Eproms
25V010, soll allerdings 149.- DM kosten. Bei dem derzeitigen Preisen
f&uuml;r Megabit-Eproms schon fast Interessant.
<br>
</p>
<p>Es gibt auch ein TOSPatch3.06V10 (oder so) liegt auch in der Maus
Berlin, damit kann man dann SEIN (und nicht das eines Freundes -
w&auml;hre ja <a href="0901.htm" target="UDOcon">Betriebssystem</a> Raubkopie!) TOS auslesen, patchen und
auch splitten. Nur das Splitten nach 4 Eproms habe ich noch nicht
hingekriegt, aber einige gute Tips aus dem Muasnetz die ich bei etwas
&uuml;briger Zeit dann ausprobieren werde.
<br>
</p>
<p>Beim Betrieb mit TOS 2.06-Karten gab es erhebliche
Startschwierigkeiten. Liegt an der K&uuml;rze des Resetimpulses der
Beschleunigerkarte. Und hier mache ich der Herstellerfirma auch die
gr&ouml;&szlig;ten Vorw&uuml;rfe, entgegen ihrer sonstigen guten
Firmenpolitik mit der hei&szlig;en Nadel gestrickt zu haben. Die Karte
ist meines Erachtens NICHT ausgereift. Ein Gespr&auml;ch mit Herrn
Neumann ergab, das H&amp;N in den n&auml;chsten Wochen einen, na
nennen wir die Hardware mal Resetmanager, auf den Markt bringen
wollen, der mit den diversen Resetproblemem aufr&auml;umt und noch
einige zus&auml;tzliche Features enthalten soll.
<br>
</p>
<p>In Ger&auml;ten ohne besondere Einbauten l&auml;uft der HBS 640/28
zufriedenstellend und sicher.
<br>
</p>
<p>Beim Betrieb mit der RAM-Erweiterung von M.Wevelsieb gibt es keine
RAM-Probleme (hier wurde die 10MB-Erweiterung in einem normalen ST
betrieben).
<br>
</p>
<p>TOS 2.06 initialisiert die PMMU nicht. Damit ist es leider nicht
m&ouml;glich, Treiber f&uuml;r virtuelles RAM zu benutzen. Ein
Patch-Programm f&uuml;r den Auto-Ordner, das die <a href="080105.htm" target="UDOcon">MMU</a>-Initialisierung
nachholt, behebt dieses Manko, f&uuml;hrt aber zu einem Problem: ein
Kaltstart f&uuml;hrt zum Systemstillstand, da beim L&ouml;schen des
Speichers der <a href="080105.htm" target="UDOcon">MMU</a> die Tabelle entzogen wird.
<br>
</p>
<p>Desweiteren ist in TOS 2.06 keine vollst&auml;ndige
Unterst&uuml;tzung von FAST-RAM drin. Mit einem gepatchten TOS 3.06
ist dies jedoch kein Problem.
<br>
</p>
<p>&Uuml;brigens werden die Infos zu 3.06 auf der PAK nicht in der
n&auml;chsten c't befinden, da wir lieber noch etwas l&auml;nger
Erfahrung sammeln wollen. Ein Schnellschu&szlig; mit den
<a href="0901.htm" target="UDOcon">Betriebssystem</a>-Patches, wie in der c't 9/92 m&ouml;chte ich nicht
machen.
<br>
</p>
<p>Ich gehe aber davon aus, da&szlig; f&uuml;r Heft 1/94 das ganze
komplett gekl&auml;rt ist.
<br>
</p>
<p>BTW: ich suche Interessierte, die die Patches testen. Willkommen
sind alle Besitzer von 030-Karten (PAK/3, ProVME) die auch wirklich
mitarbeiten.
<br>
</p>
<p>Betasauger ('haben will, nie etwas melden') sind _absolut_
unerw&uuml;nscht (einen freundlichen Gru&szlig; an alle meine
Betatester)
<br>
</p>
<p>Ciao, Steffen Engel
<br>
</p>
<p>
<br>
<br>Es reicht eigentlich, wenn &uuml;berhaupt ein TOS auf der
Hauptplatine ist.
</p>
<p>Das ganze funktioniert so:
<br>
</p>
<p>Die ersten 8 Bytes des ROM der Hauptplatine werden vom ST auf
Adresse 0 eingeblendet.
<br>
</p>
<p>Diese Einblendung kann nat&uuml;rlich nicht die ersten Bytes der
ROMs auf der PAK einblenden.
<br>
</p>
<p>In diesen ersten Bytes stehen der Stack-Pointer und die
Reset-Adresse, die der Prozessor zur Initialisierung anspringen soll.
<br>
</p>
<p>Dabei gibt es zwei M&ouml;glichkeiten:
<br>
</p>
<p>
<br>- Auf der Hauptplatine liegt ein TOS der Adresse $E00000 (TOS
2.06) Damit wird der PC mit E00030 geladen und das TOS auf der PAK ist
aktiv, da es von der PAK dort eingeblendet wird.
<br>
</p>
<p>
<br>- Auf der Hauptplatine liegt ein TOS der Adresse $FC0000 (TOS 1.04
oder KAOS). Der PC wird mit $FC0030 geladen. Durch die Logik der PAK
wird der Zugriff auf FC0030 auf E40030 abgebildet, wo bei der
Verwendung von 512kB-ROMs eine Spiegelung des TOS liegt.
<br>
</p>
<p>
<br>
</p>
<p>Wenn man nun auf der PAK EPROMs mit 1 MBit benutzt, so findet sich
auf E40000 keine Spiegelung des TOS, was nat&uuml;rlich dazu
f&uuml;hrt, da&szlig; der Rechner nicht hochkommt.
<br>
<br>ABHILFE:
<br>Bei Megabit-ROMs auf der Adresse E40030 ein JMP $E00000
($4EF900E00000) einpatchen, damit korrekt zum ungespiegelten TOS
gesprungen wird.
</p>
<p>
<br>
<br><b> HBS 640T28/36 / PAK </b>
<br>
</p>
<p>Die PAK kann zum ersten so betrieben werden, soda&szlig; sie der
alten PAK entspricht, d.h. man braucht (um upgraten zu k&ouml;nnen)
sich nur die neue Platine f&uuml;r den 68020 zu kaufen.
<br>
</p>
<p>Wenn das einem dann auf die Dauer zu langsam wird, kann man mit
Hilfe von 4 SRAMs sowie 2 TAG-RAMs die PAK mit einem Cache ausstatten.
Wer dann, in beiden obigen Ausbaustufen zus&auml;tzlich einen Copro
braucht, dem steht auch nichts entgegen. Selbiges h&auml;ngt nur vom
Geldbeutel des einzelnen ab. Wem das immer noch zu langsam ist, der
kann ja sein Mainboard auf 12 MHz hochfahren mit Hilfe der
Umbauanleitung aus der <a href="1604.htm" target="UDOcon">ST-Computer</a> 9/92 bzw. 10/92. Die PAK
funktioniert einwandfrei auf 24 MHz auf einem 12 MHz Board. Ob das
auch bei der HBS so ist, mag ich bezweifeln.
<br>Auf der PAK kann optionsweise (falls notwendig oder gewollt) ein
68000er untergebracht werden auf den alternativ zur PAK zugegriffen
werden kann.
<br>
</p>
<p>Ich finde die PAK wesentlich modularer. Und wer weis, vielleicht
wird es ja noch die eine oder andere Erweiterung f&uuml;r dieses
wunderbar modulare System geben. :-))
<br>
</p>
<p>c't 11/93 enth&auml;lt auf Seite 222 ist der Bericht
&quot;Doppel-PAK&quot; Beim ersten fluechtigem Lesen ist mir jedoch
der 32Kilobyte grosse Second-Level-Cache ins Auge gefallen.
<br>
</p>
<p>Laut Ankuendigung kommt in der naechsten Ausgabe nur noch etwas
ueber die Umschaltung 68000/68030.
<br>
</p>
<p>
<br>
<br><b> PAK und VoFa </b>
<br>
</p>
<p>Soeben haben wir hier eine PAK/3 mit 68020-32 und eine
Volksfarben-Grafikkarte laufen gehabt und es war einfach genial! Die
Geschwindigkeit bei Grafikausgabe ist sehr gut, sie liegt nur knapp
unter dem Niveau eines TT mit FastRAM.
<br>
</p>
<p>Zum Thema Einbau: die VoFa kommt genau wie bei der alten PAK
entweder in den MegaBus oder in den Prozessorslot der PAK und es muss
noch ein Widerstand von ca. 300 Ohm (heftig, aber wahr) zwischen R/!W
des Prozessors und 5 Volt gesetzt werden. Dann funkt alles klaglos.
<br>
</p>
<p>Der Turm in einem Mega ST bei Anschluss der VoFa per MegaBus wird
dann zwar langsam aber sicher ziemlich schwindelerregend, aber ich
glaube, da laesst sich dann auch noch was machen, wenn man ein
VoFa-Adapter mit Prozessor-Sockel verwendet.
<br>
</p>
<p>Allerdings ist noch etwas negativ aufgefallen: Mag!X 2.0 wollte
nicht mit der VoFa und der PAK/3 gleichzeitig arbeiten. Warum, weiss
der Geier. Eine entsprechende Mail an Wilfried Behne ist natuerlich
unterwegs.
<br>
</p>
<p>So, nun zu den Benchmarks:
<br>
</p>
<pre>
GEM Bench v3.10             &#189; Ofir Gal 5.8.93
============================================
ST  TOS 2.06, MiNT not present
<a href="080104.htm" target="UDOcon">Blitter</a> not present, NVDI 2.50 present
<a href="12.htm" target="UDOcon">Video</a> Mode = 1024 * 768 * 256 Colours
LineF FPU installed
Run and Malloc from STRAM
Reference = ST, No <a href="080104.htm" target="UDOcon">Blitter</a> + FPU
PAK/3 mit 68020/32  und VoFa
============================================
GEM Dialog Box:            1.640    515%
VDI Text:                  1.150   1165%
VDI Text Effects:          2.025   1160%
VDI Small Text:            0.920   1083%
VDI Graphics:              3.575    724%
GEM Window:                1.255    311%
Integer Division:          0.775   1160%
Float Math:                0.120    320%
RAM Access:                0.375    841%
ROM Access:                0.455    693%
Blitting:                  7.145    163%
VDI Scroll:               11.025    119%
Justified Text:            4.050    339%
VDI Enquire:               0.520    510%
============================================
Average:                             650%
Graphics:                            608%
<a href="080108.htm" target="UDOcon">CPU</a>:                                 753%

</pre>
<p>
<br>
</p>
<p>wir haben jetzt auch eine PAK3 hier und mal angefangen ein wenig
zu spielen...
<br>
</p>
<p>Dazu nun unsere ersten Erkenntnisse:
<br>
</p>
<p>a) Bei manchen Leuten ist ein 330Ohm Pullup an r/w n&ouml;tig.
<br>
<br>
</p>
<p>b) Mit ausgeschaltetem Cache l&auml;uft es miesest -&gt; Cache
einschalten.
<br>
</p>
<p>
<br>
</p>
<p>c) Wie auch schon im READ-ME erw&auml;hnt: Dran denken, beim
Bausatz bzw. der Leerplatine die Leitung von GAL B Pin 5 die im Moment
an BG liegt aufzutrennen und an BGACK zu legen.
<br>
<br>
</p>
<p>d) Eine gro&szlig;e Hilfe war auch der Tip von Andreas Richter @
H:
<br>
</p>
<p>e) Anscheindend h&auml;ngt es auch noch vom Betreibssystem ab :-(
Warum wei&szlig; keiner. Aber anscheinend sind die Ergebnisse mit
TOS3.06 recht gut... Kann &uuml;brigens mal einer einen Patch machen,
da&szlig; das TOS3.06 den Quarter-Screen- Buffer dynamisch anlegt? Das
Teil fri&szlig;t unter 256 Farben Speicher bis zum abwinken... Bei
TOS1.04 war das noch nicht so schlimm...
<br>
<br>LG1 wird normalerweise vom GAL B erzeugt.
<br>
</p>
<p>f) Wenn mal GAL A (!) um folgendes erweitert:
<br>
</p>
<p>
<br>
</p>
<pre>
*PINS

 LG1    15,

*BOOLEAN-EQUATIONS

/lg1= /lds &amp; uds &amp; a23 &amp; a22 &amp; /a21 &amp;  a20 &amp; /a19 &amp; /a18 &amp; /a17 &amp; /a16 +
      /lds &amp; uds &amp; a23 &amp; a22 &amp; /a21 &amp; /a20;

</pre>
<p>
<br>
</p>
<p>Dann geht es um einiges besser... Natr&uuml;lich mu&szlig; die
Leitung von GAL B zum LG1 umgelegt werden.
<br>
</p>
<p>Das ist nicht die 100% L&ouml;sung... Aber es ist vor allem ein
recht einfacher Patch, der sich auch schon an vorhandener Hardware
vollziehen l&auml;&szlig;t.
<br>
</p>
<p>Wir sind an v&ouml;llig anderen Gleichungen dran, welche viel mehr
synchron machen und deshalb stabiler laufen werden, aber auch
gleichzeitig mehr Waits reinhaun (Damit werden wir halt leben
m&uuml;ssen). Die &Auml;nderung wird jedoch so heftig sein, da&szlig;
dies dann gleich in Verbindung mit einer neuen Platine geschieht und
das kann noch ein bis zwei Monate dauern...
<br>
</p>
<p>
<br>
<br><b> Leistungsangabe von MW-Electronic </b>
<br>
</p>
<p>Gerade habe ich von mw-electronic einen Prospekt zur PAK 68/3 mit
einem Leistungsvergleich zum TT und Falcon erhalten. Laut Angaben
wurden nachfolgende Werte mit GEM Bench v3.10 ermittelt.
</p>
<pre>-------------------------------------------------------------------------

Rechner:                  1.      2.      3.      4.      5.
-------------------------------------------------------------------------
GEM Dialog Box:         167%    200%    141%    168%    625%
VDI Text:               115%    146%    144%    127%   1230%
VDI Text Effects:       181%    229%    178%    201%   1607%
VDI Small Text:         160%    208%    143%    148%   1484%
VDI Graphics:           297%    360%    256%    392%   1770%
GEM Window:             122%    127%    107%    157%    310%
Integer Division:       582%   1168%    582%   1168%   1303%
Float Math:             213%    334%      0%    427%    366%
RAM Access:             453%    819%    293%    485%    956%
ROM Access:             463%    779%    277%    453%    888%
Blitting:                52%     72%    160%    107%    129%
VDI Scroll:             103%    137%    151%    149%    290%
Justified Text:         114%    132%    150%    134%    350%
VDI Enquire:            213%    279%    157%    244%    610%
--------------------------------------------------------------------------
Average:                231%    356%    210%    311%    851%
Graphics:               152%    189%    158%    182%    840%
<a href="080108.htm" target="UDOcon">CPU</a>:                    427%    775%    384%    633%    878%

1. PAK68/3-020 mit 68020-16MHz und 68882-16MHz
2. PAK68/3-030 mit 68030-32MHz und 68882-32MHz
3. Falcon 030
4. TT 030
5. PAK68/3-030 mit 68030-36MHz, 68882-36MHz und NVDI 2.5

Als Referenz dient in allen F&auml;llen ein Mega ST mit <a href="080104.htm" target="UDOcon">Blitter</a> und FPU in der
ST-Hoch-Aufl&ouml;sung.

</pre>
<p>Interessant w&auml;ren in diesem Zusammenhang noch die
entsprechenden Werte f&uuml;r die Medusa und dem Eagle (sofern hier
schon ein Prototyp existiert).
<br>
</p>
<p>Meine PAK 68/3 mit einem 68020 ist schneller als ein TT, der
ebenfalls nur mit ST-RAM ausger&uuml;stet ist. Um allen Fragen
vorzubeugen: Die PAK ist gleich schnell zu einem TT mit ST-RAM auf
einem 8 MHz ST und vierfachen Boardtakt, also 32 MHz. Bei einem 12 MHz
Board und 48 MHz auf der PAK ist die PAK eindeutig schneller als ein
TT mit ST-RAM. Dies gilt sowohl f&uuml;r eine PAK mit 68020 als auch
f&uuml;r eine PAK mit 68030. Das ist das eine!
<br>
</p>
<p>Wenn man aber jetzt einen TT mit Fast-RAM mit der PAK vergleicht,
dann sollte man aber auch von einer PAK mit 68030 ausgehen.
Zus&auml;tzlich sollte die PAK dann ebenfalls Fast-RAM haben. Sonst
wird der Vergleich unfair! Da das aber noch nicht spruchreif ist,
schweige ich zu diesem Vergleich! Wenn einer hier was sagen sollte,
dann sicher nicht ich, sondern in erster Linie ein f&auml;higer Mensch
mit den Initialen S.E. oder ein noch f&auml;higerer seiner Gattung
n&auml;mlich H.Z.!
<br>
</p>
<p>Du mu&szlig;t Dir erstmal dar&uuml;ber klar werden, da&szlig; die
Tatsache allein, da&szlig; ein Prozessor einen 32-Bit breiten
Adressbus hat, nicht bedeutet, da&szlig; er auch einen 32-Bit breiten
Adressraum anspricht. Ich habe gerade mal die GAL- Gleichungen der
PAK/2 &uuml;berflogen, und so wie ich das sehe, hat die z.B. nur einen
Adressraum von 16 MB, d.h. 24-Bit. Damit funktioniert TOS 2.06 prima,
genauso wie mit jedem anderen Speeder-Board, da&szlig; einen
Adressraum von 16 MB hat.
<br>
</p>
<p>Sobald es aber dar&uuml;ber hinaus geht, wird es kritisch! Man
werfe einen Blick auf die Exception-Vektoren und stelle fest,
da&szlig; dort z.B. f&uuml;r den BUS-ERROR die Adresse 0x02E010E2
steht. Huch? Aber mein TOS liegt doch im Bereich 0x00Exxxxx, oder?
Genau! Aber TOS 2.06 &uuml;bergibt im obersten Byte der Adresse die
Anzahl der Bomben, die es zeichnen soll. Bei einen 16 MB-Adressraum
ist das soweit ok, aber wehe man hat mehr!
<br>
</p>
<p>Wenn das nicht bedeutet, da&szlig; TOS 2.06 _nicht_ 32-Bit fest
ist, was bedeutet es dann?
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> Vergleichsliste f&uuml;r Rechnerbenchmarks: </b>
<br>
</p>
<p>Die Tests wurden mit GemBench durchgef&uuml;hrt, als
Referenzsystem wurde ein ST mit 8 MHz ohne <a href="080104.htm" target="UDOcon">Blitter</a> und FPU angegeben.
Die Referenzaufl&ouml;sung ist 640 mal 400 in zwei Farben. Bei den
Farbtests ist nat&uuml;rlich eine andere Aufl&ouml;sung eingestellt,
diese ist aber (mit Ausnahme des Falcons meines Wissens nach) nicht
relevant, da GemBench ja eh in einem Fenster abl&auml;uft. Ich hoffe,
beim Zusammenfassen der Tests keine Fehler gemacht zu haben, falls
doch -&gt; Mail an mich...
<br>
</p>
<p>Wer meint, da&szlig; noch Rechner fehlen, kann mir ja seinen Bench
- wenns geht schon in dieses Format gebracht - schicken. Als
Referenzsystem bitte auf jeden Fall einen ST ohne FPU und <a href="080104.htm" target="UDOcon">Blitter</a>
w&auml;hlen, da wir sonst nichts vergleichen k&ouml;nnen! Interessant
sidn vor allem noch Grafikkarten mit anderen Treibern als NVDI. Tests
von Rechnern ohne Grafikkarte und ohne NVDI halte ich eher f&uuml;r
nutzlos, da sie keine Vergleiche mit Rechnern mit Karten erlauben...
<br>
<br>
</p>
<pre>
Rechner mit Grafikkarte in 640*400*2 Farben:

Rechner:                Medusa      PAK/2      PAK/2
Prozessor:               68040      68020      68020
Takt:                   64 MHz     16 MHz     16 MHz
<a href="0901.htm" target="UDOcon">Betriebssystem</a>:        TOS2.06       n.n.   Magix2.0
<a href="080104.htm" target="UDOcon">Blitter</a>:                keiner     keiner     keiner
VGA-Karte:              ET4000     ET4000     ET4000
Treiber:               NVDI2.5    NVDI2.5    NVDI2.5
Quelle:                Stephan    Andreas    Andreas
                      Skrodzki      Fries      Fries
====================================================
GEM Dialog Box:          2414%       797%       625%
VDI Text:                7245%      1836%      1823%
VDI Text Effects:        6911%      1482%      1464%
VDI Small Text:          1993%      1038%      1022%
VDI Graphics:            2490%       778%       774%
GEM Window:              1087%       407%       188%
Integer Division:        1913%       574%       560%
Float Math:               350%       145%       142%
RAM Access:               852%       213%       213%
ROM Access:               852%       394%       213%
Blitting:                 871%       424%       419%
VDI Scroll:               755%       598%       591%
Justified Text:          1635%       486%       481%
VDI Enquire:             3540%       229%       225%
====================================================
Average:                 2330%       671%       624%
Graphics:                2894%       807%       761%
<a href="080108.htm" target="UDOcon">CPU</a>:                      991%       331%       282%

Rechner mit 256 Farben:

Rechner:                Medusa
Prozessor:               68040
Takt:                   64 MHz
<a href="0901.htm" target="UDOcon">Betriebssystem</a>:        TOS2.06
<a href="080104.htm" target="UDOcon">Blitter</a>:                keiner
VGA-Karte:              ET4000
Treiber:               NVDI2.5
Quelle:                Stephan
                      Skrodzki
==============================
GEM Dialog Box:           884%
VDI Text:                1729%
VDI Text Effects:        1966%
VDI Small Text:          2693%
VDI Graphics:            1042%
GEM Window:               525%
Integer Division:        1913%
Float Math:               350%
RAM Access:               852%
ROM Access:               841%
Blitting:                 257%
VDI Scroll:               155%
Justified Text:           493%
VDI Enquire:             3792%
==============================
Average:                 1249%
Graphics:                1353%
<a href="080108.htm" target="UDOcon">CPU</a>:                      989%

Rechner ohne Grafikkarte, aber mit NVDI:

Rechner:                Medusa      TT030      TT030      PAK/3     Falcon
Prozessor:               68040      68030      68030      68030      68030
Takt:                n.n.(50?)     32 MHz     32 Mhz     36 MHz     16 MHz
<a href="0901.htm" target="UDOcon">Betriebssystem</a>:        TOS2.06   Magix2.0    TOS3.06       n.n.    TOS4.01
<a href="080104.htm" target="UDOcon">Blitter</a>:                keiner       n.n.       n.n.       n.n.         ja
VGA-Karte:               keine      keine      keine      keine      keine
Treiber:              NVDI2.03    NVDI2.5    NVDI2.5    NVDI2.5    NVDI2.5
Quelle:               Thorsten    Michael    Michael    Michael     Martin
                        Floeck      Thurm      Thurm      Thurm    Bartsch
==========================================================================
GEM Dialog Box:          1550%      1527%      1122%       625%       443%
VDI Text:                7245%      1876%      1876%       230%      1495%
VDI Text Effects:        5662%      2424%      2404%       607%      1479%
VDI Small Text:          3558%      1622%      1502%       484%      1193%
VDI Graphics:            2097%      1700%      1629%       770%      1006%
GEM Window:               807%       576%       340%       310%       209%
Integer Division:        1913%      1168%      1168%       303%       580%
Float Math:               350%       427%       427%       366%      3237%
RAM Access:               830%       344%       344%       956%       293%
ROM Access:               830%       489%       492%       888%       277%
Blitting:                 890%       150%       151%       129%       203%
VDI Scroll:               885%       465%       465%       290%       375%
Justified Text:          1327%       455%       442%       350%       312%
VDI Enquire:             2794%       596%       663%       610%       390%
==========================================================================
Average:                 2195%       987%       930%       851%       820%
Graphics:                2681%      1139%      1059%       840%       710%
<a href="080108.htm" target="UDOcon">CPU</a>:                      980%       607%       607%       878%      1096%

Rechner ohne Grafikkarte und NVDI:

Rechner:                 PAK/3      TT030      PAK/3     Falcon
Prozessor:               68030      68030      68020      68030
Takt:                   32 MHz     32 MHz     16 MHz     16 MHz
<a href="0901.htm" target="UDOcon">Betriebssystem</a>:           n.n.       n.n.       n.n.       n.n.
<a href="080104.htm" target="UDOcon">Blitter</a>:                  n.n.       n.n.       n.n.         ja
VGA-Karte:               keine      keine      keine      keine
Treiber:                keiner     keiner     keiner     keiner
Quelle:                Michael     G&uuml;nter    Michael     G&uuml;nter
                         Thurm   Bramsche      Thurm   Bramsche
===============================================================
GEM Dialog Box:           200%       168%       167%       141%
VDI Text:                 146%       127%       115%       144%
VDI Text Effects:         229%       201%       181%       178%
VDI Small Text:           208%       148%       160%       143%
VDI Graphics:             360%       392%       297%       256%
GEM Window:               127%       157%       122%       107%
Integer Division:        1168%      1168%       582%       582%
Float Math:               334%       427%       213%         0%
RAM Access:               819%       485%       453%       293%
ROM Access:               779%       453%       463%       277%
Blitting:                  72%       107%        52%       160%
VDI Scroll:               137%       149%       103%       151%
Justified Text:           132%       134%       114%       150%
VDI Enquire:              279%       244%       213%       157%
===============================================================
Average:                  356%       311%       231%       210%
Graphics:                 189%       182%       152%       158%
<a href="080108.htm" target="UDOcon">CPU</a>:                      775%       633%       427%       384%

</pre>
<p>
<br>
<br><b> FPU Waitstates </b>
<br>
</p>
<p>Wie ich schon geschrieben hatte: die FPU auf der PAK wird derzeit
leider noch mit Waitstates betrieben - warum auch immer.
<br>
</p>
<p>Schon klar, da&szlig; Du das meintest, nur ist das Problem ganz
einfach:
<br>
</p>
<p>-abgesehen von Blitting und Raster-Fills ist der <a href="080104.htm" target="UDOcon">Blitter</a> langsamer
als die PAK
<br>-Die 36 MHz-PAK ist bei Blitting schneller als der <a href="080104.htm" target="UDOcon">Blitter</a>
<br>-Das Nadel&ouml;hr zum 8MHz-68000-Bus ist dominant, da kannst Du
noch soviel Rechenpower reinstopfen.
<br>
</p>
<p>
<br>
<br><b> Second Level Cache </b>
<br>
</p>
<p>Moment mal, w&uuml;rde da nicht der Second-Level-Cache ganz
f&uuml;rchterlich zuschlagen? Ich habe da noch zwei andere Theorien
anzubieten:
<br>
</p>
<p>1. Das GAL f&uuml;r die CS-Berechnung ist zu langsam (ist zwar bei
15ns unwahrscheinlich, aber ein Versuch mit nem 12er oder 10 Gal
w&auml;re es mir Wert (wenn ich denn ne PAK hier h&auml;tte)
<br>
</p>
<p>2. Der Takt f&uuml;r die <a href="080108.htm" target="UDOcon">CPU</a> wird beim TT durch ein Logikgatter
gejagt. Dadurch entstehen leichte Verz&ouml;gerungen, die u.U. das
Timing zur FPU verbessern k&ouml;nnen (wenn die FPU normalerweise eine
Idee zu sp&auml;t das Ergebniss liefert, so da&szlig; die <a href="080108.htm" target="UDOcon">CPU</a> erst
einen Zyclus sp&auml;ter auf das Ergebniss zugreifen kann, kann die
Verz&ouml;gerung hier hilfreich sein). Man k&ouml;nnte Versuchen, den
Takt zwischen FPU und <a href="080108.htm" target="UDOcon">CPU</a> auf der PAK zu invertieren. Da die FPU
asynchron eingebunden ist, d&uuml;rfte das an der Lauff&auml;higkeit
der PAK nichts &auml;ndern. Wohl aber am timing zwischen FPU und <a href="080108.htm" target="UDOcon">CPU</a>.
Entweder wird es g&uuml;nstiger, oder schlechter. Da ich keine
Timingdiagramme der IC's habe, kann ich keine worst-case Betrachtung
durchf&uuml;hren, sondern das Ergebniss nur empirisch ermitteln, wenn
denn die PAK endlich den Weg in meinen Rechner gefunden hat!
<br>
</p>
<p>Wie gesagt, beides sind nur Theorien. Da k&ouml;nnten allenfalls
die Entwickler der PAK etwas zu sagen!
<br>
</p>
<p>
<br>
<br><b> <a href="190d.htm" target="UDOcon">Schaltplan</a> </b>
<br>
</p>
<p>Da der <a href="190d.htm" target="UDOcon">Schaltplan</a> in der c't 11/93 abgedruckt ist (S.228), kann
man ja eigentlich sehen, ob die FPU memory-mapped oder per LineF
eingebunden ist:
<br>
</p>
<p>Da ist an der FPU die Leitung /CS = Chip-Select. Diese Leitung
f&uuml;hrt auf der SFP-004 von ATARI (soweit ich mich entsinne) an ein
paar TTL-Chips, die daf&uuml;r sorgen, da&szlig; bei der Adresse
$FFFA40 und den darauffolgenden auf die Steuerregister der FPU
zugegriffen wird.
<br>
</p>
<p>Auf der PAK ist das anders! Das /CS-Signal wird als /FPUCS
bezeichnet und in GAL 6 (U6) abgehandelt. Die GAL-Gleichung von U6
(<a href="0305.htm" target="UDOcon">Atari ST</a>) ist auf S. 226 zu finden: /FPUCS geht auf LOW, wenn a19,
a18, a16 Low und a17 High ist. Au&szlig;erdem mu&szlig; J3 gesetzt
sein, damit die Leitung nicht &uuml;ber RN1(2) auf High geht.
Au&szlig;erdem m&uuml;ssen fc1 und fc0 Low sein.
<br>
</p>
<p>
<br>
<br><b> Die PAK l&auml;uft im Mega STE </b>
<br>
</p>
<p>Nun zu den interressanten Sachen. Der Einbau erfolgte relativ
problemlos. Adapterplatine rein, PAK drauf und fertig. Leider reicht
der Platz f&uuml;rs <a href="10.htm" target="UDOcon">Netzteil</a> dann nicht mehr. Bei einer entsprechenden
Bauweise des SCC-DIL-Adapters sollte es aber m&ouml;glich sein das
<a href="10.htm" target="UDOcon">Netzteil</a> mit im Geh&auml;use unterzubringen. Eine Taktung von 32 MHz
verkraftete der Rechner in dem 2-3 Stunden Test ohne Bombemw&uuml;rfe.
Mit 40 MHz startete er nicht mehr vern&uuml;nftig durch und blieb
schon in der Bootphase h&auml;ngen. Vielleicht w&auml;ren durch
geringe &Auml;nderungen am Mainboard auch dieses zu beseitigen.
Vorhandener Rechner ist ein Mega STE mit <a href="10.htm" target="UDOcon">Netzteil</a> -001, 4MB Speicher,
<a href="0f0302.htm" target="UDOcon">RSVE</a> auf MODEM 1. Bei den GEMBENCH Tests waren nur der AHDI V6.061 und
NVDI V2.5 im Speicher. Bei den TeXl&auml;ufen und Modemtests habe ich
meine t&auml;gliche Konfiguration benutzt ( ca. 1 MB an Autoprogs und
ACC). Teilweise sind auch Systembremser dabei wie z.B. DCF-Time V1.2.
<br>
</p>
<p>
<br>
<br><b> Festplatte.. </b>
<br>
</p>
<p>Ich habe anscheinend ziemlich heftige Probleme bei
Plattenzugriffen. Jedenfalls h&auml;ngt sich der Rechner dauernd beim
Booten und Starten von Programmen auf, wenn die VoFa drin ist.
Au&szlig;erdem kommt manchmal folgende Meldung &quot;Ihr Ausgabemedium
nimmt keine Daten an&quot;, oder so &auml;hnlich. Die Platte hat dann
die Diode auf Daueranzeige geschaltet und h&auml;ngt, w&auml;hrend ich
auf dem Rechner dauernd diesen Alert bekomme.
<br>
</p>
<p>Wei&szlig; vielleicht jemand, was ich hier noch ausprobieren
k&ouml;nnte, um die Sache ans Laufen zu bringen? Austauschen der
Bustreiber hat nichts gebracht, weder F, noch ALS, noch HCT-Typen
bringen eine Verbesserung. Auch ein Austausch des DMA-Chips hat mich
noch nicht weitergebracht, allerdings konnte ich nur zwei verschiedene
IMP-Typen testen.
<br>
</p>
<p>Aber ansonsten mu&szlig; ich mich meinen Vorrednern
anschlie&szlig;en, die PAK ist einfach wahnsinnig schnell, obwohl sie
bei mir &quot;nur&quot; mit den originalen 32 MHz l&auml;uft. Da macht
das Arbeiten wieder richtig Spa&szlig;.
<br>
</p>
<p>1. Ab und zu meint mein <a href="10.htm" target="UDOcon">Netzteil</a> sich verabschieden zu
m&uuml;ssen: Symptome: L&uuml;fter bleibt stehen, Tastatur-LED geht
aus, Monitor wird schwarz, ich tippe auf einen Spannungszusammenbruch
der entg&uuml;ltigen Art ;-). Nur: Warum? Jedenfalls gibt das <a href="10.htm" target="UDOcon">Netzteil</a>
vorher kurze Pfeift&ouml;ne von sich, ein Kurzer konnte nicht gemessen
werden. Kontaktschw&auml;che (Leerlauf)? Dann sollte ich mal das
<a href="10.htm" target="UDOcon">Netzteil</a> wechseln!
<br>
</p>
<p>2. Die PAK rennt nicht auf 32 MHz. Weder mit der TOS
Extension-Karte von Artifex, noch mit selbsgebrannten (von PINATUBO
gesplittetem) TOS auf der PAK. Da ich ein 150 ns EPROM zwischen den
120ern habe, ist J6 auf 1-2 gejumpert!
<br>
</p>
<p>Ab und an spinnt auch mein <a href="0f0302.htm" target="UDOcon">RSVE</a>, aber das werde ich wohl mit einem
Abschirmk&auml;fig (oder einem anderen Ort) beheben k&ouml;nnen! Das
ist reproduzierbar. Punkt 1 ist ein reiner Zufallsgenerator.
<br>
</p>
<p>Ach ja, manchmal Bootet die PAK auch nicht unter 16MHz, das ist
aber seltener und durch l&auml;ngeres Warten zu beheben!
<br>
</p>
<p>Jetzt mal meine aktuelle Konfig:
<br>
</p>
<p>J1 geschlossen
<br>J2 offen
<br>J3 geschlossen
<br>J4 offen
<br>J5 geschlossen
<br>J6 geschlossen
<br>J7 1-2
<br>J8 1-2
<br>J9 2-3
<br>J10 1-2
<br>J11 1-2
<br>
</p>
<p>Jetzt kann ich nat&uuml;rlich auch experimentieren, aber
vielleicht hat einer ne Idee, was hier falsch l&auml;uft?
</p>
<p>Ach ja, ich habe TOS 2.06 mit ein paar Patches auf der PAK und
ohne Patches auf der Artifex-Karte im Rechner. Der Proz wird etwa 40
Grad warm!
</p>
<p>Antworten vielleicht besser als PM, da sie 1. Untergehen
k&ouml;nnten (ich habe im Moment nicht so furchtbar viel Zeit), 2.
Nicht von allgemeinem Interesse sein d&uuml;rften. Ich poste dann den
Gewinner, dessen Idee meine PAK zu 32 MHz verhilft!
</p>
<p>Ach ja, die Bustreiber sind selbstverst&auml;ndlich 'F'-Typen...
<br>
</p>
<p>
<br>
<br>Einige Harddisktreiber haben Probleme, wenn sie auf einem 68030
mit nicht initialisierter <a href="080105.htm" target="UDOcon">MMU</a> laufen. TOS 2.06 kennt keine <a href="080105.htm" target="UDOcon">MMU</a>, erst
3.06 k&uuml;mmert sich darum.
<br>
</p>
<p>Typisches <a href="030d.htm" target="UDOcon">Symtom</a>: Plattenzugriffe werden qu&auml;lend langsam,
nach dem Zugriff bleibt die Busy-LED der Festplatte an.
</p>
<p>Abhilfe: AHDI 5.xx oder 6.xx benutzen, die laufen problemlos. Oder
auf TOS 3.06 f&uuml;r die PAK warten.
<br>
</p>
<p>Mittlerweile AHDI 6.06, da der HuSHI Probleme machte (wurde
langsam, bootete gar nicht, erkannte die Platte nicht, usw.).
Allerdings brachte erst der Wechsel des DMA-Chips eine endg&uuml;ltige
Verbesserung, leider erst nachdem ich mir meine Bootpartition und
einige Programme hoffnungslos zersemmelt habe. Was mich nur wundert,
ist, da&szlig; sowohl VoFa als auch PAK alleine wunderbar mit dem
alten IMP-DMA-Controller arbeiten.
<br>
<br>
</p>
<p>ICD Advantage Plus.
<br>Eine Fujitsu M2624F (520 MByte, SCSI), terminiert, auf SCSI 0.
<br>
</p>
<p>Das habe ich gemerkt. HuSHI lief definitiv nicht, ICD lief bei mir
nur manchmal (das kann aber auch an dem alten DMA-Chip gelegen haben)
und AHDI l&auml;uft mittlerweile super.
<br>
</p>
<p>Typisches <a href="030d.htm" target="UDOcon">Symtom</a>: Plattenzugriffe werden qu&auml;lend langsam,
nach dem Zugriff bleibt die Busy-LED der Festplatte an.
<br>
</p>
<p>Genau das ist bei mir auch anfangs mit dem AHDI vorgekommen,
zusammen mit dem Alert &quot;Ihr Ausgabeger&auml;t empf&auml;ngt keine
Daten&quot;. Beseitigung nur durch Austausch des schon mehrfach
erw&auml;hnten DMA-Chips.
<br>
</p>
<p>
<br>
<br><b> Problem mit PAK </b>
<br>
</p>
<dl>
<dt><b>Symptom:</b></dt><dd> Mein Rechner (260er) lief mit 68K einwandfrei, aber mit PAK wurde
noch nicht mal der SM124 &quot;angeschmissen&quot;. Das einzige, was
ich beobachten konnte (au&szlig;er dem wei&szlig;en Schirm in ST-Low)
war, da&szlig; die Zugriffs-LED der Wechselplatte dauernd blinkte
(macht sie immer beim Reset, allerdings nicht dauernd ;-) ).
<br>&nbsp;
<dt><b>Diagnose:</b></dt><dd> Der Rechner wurde immer wieder resetet (kann man an Pin 18 des
68K-Sockels auf der PAK nachmessen)
<br>&nbsp;
<dt><b>Ursache:</b></dt><dd> Unglaublich ;-), aber wahr: Ich habe mir ein
_Tastaturverl&auml;ngerungskabel_ an den Rechner gebastelt
<br>&nbsp;
<dt><b>Abhilfe:</b></dt><dd> Tastaturverl&auml;ngerungskabel entfernen (naja) oder
1K-Widerstand zwischen /RESET und +5V oder Treiber/Puffer an das Kabel
basteln (nicht getestet)
<br>&nbsp;
</dl>
<p>
<br>
<br><b> Problem mit der FPU </b>
<br>
</p>
<p>Nachdem die PAK 3 seit nunmehr einigen Tagen ziemlich ordentlich
l&auml;uft (welch eine Geschwindigkeit) hat sich nun doch ein kleines
Problem herauskristalli- siert, vielleicht kann einer von Euch etwas
damit anfangen und mich auf die richtige Spur bringen:
<br>
</p>
<p>Es kommt bei Benutzung der FPU h&auml;ufiger vor, da&szlig; ein
Programm (passiert mit allen Programmen, die die FPU nutzen) mit 11
Bomben (Line F Protocol Error) abst&uuml;rzt. Dasselbe Programm
l&auml;uft aber mitunter auch einwandfrei durch, es l&auml;&szlig;t
sich keine Systematik (thermische Abh&auml;ngingkeit,
Softwareumgebung) feststellen.
<br>
</p>
<p>Daten: PAK3/30 auf 32 MHz, Prozessoren sind XC68030RC50B und
XC68882RC50A. Sind bei diesen Masken Probleme bekannt? Das System
l&auml;uft z.Z. unter TOS 2.06 / MagiX! 2.0.
<br>
</p>
<p>Ansonsten arbeitet das System absolut einwandfrei. Die FPU lief
auf der PAK2 im &uuml;brigen auch ohne Fehler mit 40 MHz.
<br>
</p>
<p>
<br>
<br><b> massive Probleme mit der PAK </b>
<br>
</p>
<p>Ersten habe ich einen Fehler im Adressdekoder GAL (V6_STC1)
gefunden. Dort wird der Bereich ab $E40000 nach $FC0000 eingeblendet
und nicht, wie es sich gehoert, der TOS-Anfang ab $E00000. Als Folge
dessen bootet meine PAK nicht mit den auf der PAK vorhandenen TOS 2.06
(512kB lang) Eproms. Zweitens scheint die PAK trotz der in der c't
12/93 beschriebenen Modifikationen nicht mit der 12MHz-Erweiterung
zusammenzulaufen. Wenn ich den L2-Cache allerdings abschalte laeuft es
einigermassen. Drittens scheint die PAK Schwierigkeiten mit 48MHz zu
haben, selbst wenn ich den L2-Cache abschalte laeuft die PAK instabil.
Insbesondere hat die PAK bei aktivierter 12MHz-Erweiterung
Schwierigkeiten.
<br>
</p>
<p>Zu erstens wuerde es mich freuen, wenn in naechster Zeit
diesbezueglich korrigierte GAL-Jedecfiles erscheinen koennten (mit dem
LCI-Format kann ich nichts anfangen). Zu zweitens waere es schn, wenn
man mit anderen PAK-Usern mal Erfahrungen austauschen koennte. Da ich
in keinen Netzen vertreten bin, wuerde es mich freuen, wenn hier
Erfahrungsberichte, Tips etc. diesbezueglich veroeffentlich werden
koennten.
<br>
</p>
<p>
<br>
</p>
<p>Danke fuer die Nachricht. Der zustaendige Redakteur, Carsten
Meyer, ist allerdings bis zum 3. 1. in Urlaub. Ich kann daher nur sehr
oberflaechlich antworten:
<br>
</p>
<p>Die wichtigste <a href="0205.htm" target="UDOcon">Information</a> haben Sie vergessen: In welchem Rechner
betreiben Sie die PAK, mit welchem Chipsatz (Baujahr, IMP-Chips,
Modell)?
<br>
</p>
<p>Wir haben einige Hinweise von Atari-Anwendern, wonach die PAK
einwandfrei laeuft, aber auch Gegenteiliges in folgendem Punkt: In
aelteren 520 ST und 260 ST soll das TOS 2.06 auf der PAK nur gebootet
haben, wenn als GAL P4 ein 20-ns-Typ eingesetzt worden ist. Weder 15
ns noch 25 ns soll funktioniert haben. Das deutet wieder mal auf ein
miserables Timing-Problem hin. Zugleich scheint es mir aber ein Beleg
dafuer zu sein, dass Ihre Fehleranalyse nicht zutreffen kann. cm wird
das nach seiner Rueckkehr ueberpruefen.
<br>
</p>
<p>Uebrigens ist der <a href="0201.htm" target="UDOcon">Autor</a> der 12-MHz-Modifikation auch unter den
PAK-Anwendern, diesbezuegliche Probleme sind also sicher loesbar. Ob
sie allerdings tatsaechlich 48 MHz schafft, moechte ich bezweifeln.
Waere 24 MHz nicht auch schon ganz nett...?
<br>
</p>
<p>Selbstverstaendlich veroeffentlichen wir eventuelle Ergaenzungen +
Berichtichtigungen in der entsprechenden Rubrik. Zur Aufnahme von
Kontakten mit &quot;Leidensgenossen&quot; bieten wir schon seit langem
unsere Club-Rubrik an. Bitte senden Sie uns einen entsprechend
formulierten Text, der Abdruck ist natuerlich kostenlos.
<br>
</p>
<p>Gruss
<br>Christian Persson
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> Pak/3 Takt &gt; 32MHz </b>
<br>
</p>
<p>Da in Berlin 3 Paks mit jeweils 48(<a href="080108.htm" target="UDOcon">CPU</a> 50MHz), 50(<a href="080108.htm" target="UDOcon">CPU</a> 33MHz mit
KK) und 56.6MHz(50 MHz) laufen, und mich einige PMs bez&uuml;glich des
Umbaus erreichten, werde ich nicht jede PM einzeln beantworten.
<br>
</p>
<p>Alle diese Rechner laufen mit 12MHz auf dem Mainboard. Es hat sich
erwiesen, die Terminierung der Leitungen, wie sie im 12MHz Umbau
beschrieben war, zu &uuml;bernehmen. N&auml;heres kann man aus der St
Computer &uuml;bernehmen. In meinem Rechner sind die 244 und 373 als F
Typen und in den anderen Rechnern als ACT. Eine allgemeing&uuml;ltige
Aussage, wann welcher Typ l&auml;uft, kann man nicht sagen, sondern
nur ausprobieren. Sobald die <a href="080108.htm" target="UDOcon">CPU</a> schneller als 32MHz wird, l&auml;uft
die FPU mit keinem h&ouml;heren Takt mehr. Es gibt 11 Bomben. Dieses
Problem wird aber wahrscheilnlich diese Woche noch gel&ouml;st. Die
Gals sind 10ns Typen, die Tags 20ns Typen von Segor und die Srams sind
12ns Typen. Roms habe ich nicht auf dem Board, da ich mit Mag!x
arbeite. Die von Robert angesprochenen Probleme bez&uuml;glich des <a href="080108.htm" target="UDOcon">CPU</a>
Caches konnte ich leicht nachvollziehen und wahrscheinlich beseitigen.
<br>
</p>
<p>Am Anfang hatte ich eine leere Partition genommen und mit Kobold,
so ca 1500 Dateien kopiert und mit Treechk verglichen. Es kam zu ca
10% Fehlern. Diese Tests liefen unter 2.06. Als ich ein PMMU Init
Programm gestartet hatte, das die entsprechenden Bereiche als nicht
&quot;cachebar&quot; markierte, so gab es bei mir keine DMA Probleme
mehr. Das Gleiche ist auch unter Mag!x, da dort auch die PMMU
initialisiert wird. Wenn man nun schon den 12MHz Umbau hat, so kann
mon den Takt von dem 48MHz Quarz abnehmen und &uuml;ber eim 74AC14 der
Pak zuf&uuml;hren. Weitere Einzelheiten bez&uuml;glich der FPU kommen
im laufe der Woche.
<br>
</p>
<p>Ach je, Sysinfo bei 56.6MHz zeigt 1000% <a href="080108.htm" target="UDOcon">CPU</a> Speed und bei 50MHz
immerhin noch 835%. Man kann mit arbeiten. :-) Unter Winx kann man die
Fenster in Echtzeit aufziehen, ohne das es flackert.
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> PAK FPU bei 56.66MHz </b>
<br>
</p>
<p>Wie gesagt, Cache-Rams 15ns, Tag-Rams 20ns, Epromms (noch) 120ns
KAOS 1.42, alle GALs 10ns. TTLs auf der PAK ACT541 und auf dem Board
ACT244 und ACT373. Bis hier lief die <a href="080108.htm" target="UDOcon">CPU</a> schon mit 56.66 MHz! Nur eben
nicht mit der FPU. :-( Lag der <a href="080108.htm" target="UDOcon">CPU</a> Takt unter 36MHz lief die FPU, egal
mit welchem Takt (56.66MHz). Mit einer anderen cs_fpu Gleichung in GAL
U6 ging es auch nicht! So, Pull-ups an D16-D31! Geht nicht! (D0-D15
sind schon, da 12MHz Board!) c't 2.Teil &quot;Bustreiber k&ouml;nnen
dazwischenfunken.&quot; Pull-up (3k3) an FE vom ACT373 (pin 1)! 40MHz
mit FPU laufen! :-) Wer ist schuld? die <a href="080105.htm" target="UDOcon">MMU</a>! Andere <a href="080105.htm" target="UDOcon">MMU</a>! 56.66MHz!!
FPU l&auml;uft!!!
<br>
</p>
<p>
<br>
<br><b> TOS 3.06 mit der PAK/3 </b>
<br>
</p>
<pre>
  +---------+---------------+----------------+---------+-------------------+
  | Pak-TOS | Speicher 4..7 | E00004..E00007 | l&auml;ufts? |Pak-TOS bei FCxxxx |
  +---------+---------------+----------------+---------+-------------------+
  |  2.06   | 00 FC 00 20   | 00 E0 00 30    |   Ja    |  Ja               |
  |  2.06   | 00 FC 00 30   | 00 E0 00 30    |   Ja    |  Ja               |
  |  3.06   | 00 FC 00 20   | 00 E0 00 30    |   Nein  |                   |
  |  3.06   | 00 FC 00 30   | 00 E0 00 30    |   Ja    | Nein (nach booten)|
  +---------+---------------+----------------+---------+-------------------+

!d e00020 e0005e

!,00E00020 ORI.B    #$66,D0
!,         ORI.B    #$BB,D0
!,         ORI.B    #$1E,D0
!,         ORI.B    #$00,D0
!,00E00030 MOVE.W   #$2700,SR
!,         RESET
!,         MOVE.B   #$0A,$FFFF8001.W
!,         LEA      $000007FC.L,A7
!,         CMPI.L   #$FA52235F,$00FA0000.L        D0 wurde
!,         BNE.B    $00E00058                        nirgendwo
!,         LEA      $00E00058(PC),A6                 benutzt
!,         JMP      $00FA0004.L
!,00E00058 MOVE.L   #$00000808,D0                 D0 wird beschrieben


</pre>
<p>
<br>
</p>
<p>Die Frage ist nun, warum funktioniert TOS-3.06 nicht wenn man es
an FC0020 loslaufen l&auml;sst. Das (FCxxxx) != (E0xxxx) nach dem
booten kann ja nur durch die PMMU bewirkt werden ... also wenn das
System schon l&auml;uft. Das TOS-3.06 ab FC0030 l&auml;uft beweist,
da&szlig; diese PMMU Initialisierung erst nach dem Sprung nach Ewxyz
stattfindet. Da die (einfache) Umschaltung zum 68000 davon
abh&auml;ngt nun folgender Anreiz: der erste, der's versteht (und mir
erkl&auml;rt) hat ein Freibier im Karlsruher Stammtisch bei mir gut.
<br>
</p>
<p>Um das Pak-TOS bei FC0030 anstatt bei FC0020 loslaufen zu lassen
ist &uuml;brigens nicht unbedingt ein neues Eprom auf der Hauptplatine
n&ouml;tig. Das Aushebeln von Pin 16-U7 gen&uuml;gt um aus 20 ein 30
zu machen (HeavyPatch :-) ).
<br>
</p>
<p>In GAL U6 wird das Signal &quot;rom&quot; erzeugt. Dieses ist
aktiv bei Adressen im Bereich $FC0000..$FEFFFF und au&szlig;erdem im
Bereich $E00000..$E7FFFF und wird indirekt (&uuml;ber U1) als
Chipselect f&uuml;r die EPROMs verwendet. Wird ein 512K gro&szlig;es
<a href="0901.htm" target="UDOcon">Betriebssystem</a> (TOS3.06) eingesetzt, so findet sich dieses im
Adressbereich $E00000..$E7FFFF; au&szlig;erdem wird die _zweite_
H&auml;lfte des Betriebssystems, also der Teil, der ab $E40000.. zu
finden ist, bei $FC0000.. eingeblendet, da die Adre&szlig;leitung A18
beim Zugriff auf $FC0000.. High ist.
<br>
</p>
<p>Beim Reset wird der Resetvector aus den ROMs auf der Hauptplatine
gelesen, dann wird zur Adresse $FC0020 bzw. $FC0030 verzweigt. Im TOS
3.06 befindet sich clevererweise bei der Adresse $E40030 ein
Sprungbefehl zur Adresse $E00030. Dies ist m&ouml;glich, da sich dort
zuf&auml;llig ein nicht ben&ouml;tigter Teil der <a href="0903.htm" target="UDOcon">Desktop</a>-Resource
befindet, welcher (soweit ich dies verstanden habe) sowieso ins RAM
kopiert und neu initialisiert wird (??). Dieser Sprungbefehl verzweigt
dann zum richtigen Eintrittspunkt. Befindet sich im ROM auf der
Hauptplatine ein Reset-Vector $FC0020, so wird das auszuf&uuml;hrende
Programm von Adresse $E40020 genommen, und dort steht kein
Sprungbefehl.
<br>
</p>
<p>Der Reset bei der PAK l&auml;uft also mit TOS 1.02/1.04 auf der
Hauptplatine folgenderma&szlig;en ab:
<br>
</p>
<pre>
Zugriff auf   ROM              Adresse im Rom (rel.)     Inhalt
$000004       Hauptplatine     $000004                   $FC0030
$FC0030       PAK              $040030                   JMP $E00030
$E00030       PAK              $000030                   TOS-Start

</pre>
<p>
<br>
</p>
<p>Endlich ist es soweit, auf der PAK werkelt jetzt das TOS 3.06 mit
den Patches aus den c't-Files.
<br>
</p>
<p>Dazu ein paar Fragen.
<br>
</p>
<p>Wie erkennt die PAK mit 3.06 ob ein Warm- oder Kaltstart erfolgt
ist? Wenn der Rechner l&auml;uft und dann ausgeschaltet wird mu&szlig;
ich teilweise bis zu einer Minute warten bis ich ihn wieder
einschalten kann.
<br>
</p>
<p>Denn sonst startet die PAK gleich durcht. Will hei&szlig;en ohne
Speichertest und Wartezeit und &uuml;berf&auml;hrt damit die
Festplatte. Wenn der Rechner 'l&auml;ngerer Zeit' aus war kommt wie
gewohnt der Speichertest.
<br>
</p>
<p>Mit dem TOS 2.06 (nicht auf der PAK) dagegen reicht es schon wenn
der Rechner ca. 5 Sekunden ausgeschaltet gewesen ist.
<br>
</p>
<p>Warm- bzw. Kaltstart &uuml;ber die Tastatur dagegen wird
einwandfrei erkannt.
<br>
</p>
<p>Auch l&auml;uft nach dem Einschalten der Speichertest wesentlich
schneller ab als unter 2.06. Wird der Test im Cache durchgef&uuml;hrt
oder ist die Routine im 3.06 einfach nur schneller?
<br>
</p>
<p>Eine Frage &uuml;ber die ich schon lange nachgedacht habe, warum
wird das ROM nicht gecached?
<br>
</p>
<p>Wenn ich das TOS (2.06) ins RAM lade l&auml;ufts genauso
problemlos wie im ROM, nur eben etwas schneller da dort der Cache
aktiv ist.
<br>
</p>
<p>Gibt's eine M&ouml;glichkeit das 3.06 im RAM zu fahren?
<br>
</p>
<p>Leider funktioniert die automatische Overscanumschaltung nicht
obwohl in den Readme's zu <a href="1212.htm" target="UDOcon">Overscan</a> von einer Unterst&uuml;tzung des
3.06 die Rede ist. <a href="1212.htm" target="UDOcon">Overscan</a> selber l&auml;uft, nur die Umschaltung
eben nicht. Kann das an den Patches liegen oder l&auml;uft die
automatische Umschaltung beim Starten von Programmen generell nicht
mit 3.06?
<br>
</p>
<p>Da die <a href="080105.htm" target="UDOcon">MMU</a> jetzt richtig initialisiert wird sind jetzt auch ein
paar Probleme verschwunden die damit scheinbar zusammen hingen.
<br>
</p>
<p>Mit TOS 2.06 kam beim Kopiern auf HD-<a href="0b04.htm" target="UDOcon">Disketten</a> gelegentlich
_w&auml;hrend_ des Kopierens die Meldung da&szlig; die Diskette
schreibgesch&uuml;tzt sein. Dies und andere kleine Probleme sind jetzt
verschwunden. So laufen jetzt auch wieder die anderen
Festplattentreiber einwandfrei.
<br>
</p>
<p>Auch CoNnect l&auml;uft, obwohls nur auf 2.06 registriert ist.
Liegt wahrscheinlich daran da&szlig; das 2.06er noch im Rechner ist
und daher die ersten 8 Bytes vom 2.06 ab Adresse 0 eingeblendet
werden.
<br>
</p>
<p>Wenn jemand bis hierhin mitgelesen hat und zu der einen oder
anderen Frage eine Antwort hat w&uuml;rde mich das freuen.
<br>
</p>
<p>
<br>
<br><b> Caches/PAK3/HUSHI/Quantum </b>
<br>
</p>
<p>Habe gerade die PAK3 auf einem MegaST2(4) zum Laufen gebracht und
bemerke so einige Effekte, die nun richtig zum Tragen kommen....
betreffs der Caches, als da w&auml;ren:
<br>
</p>
<p>interner Cache Quantum PS80 (in HUSHI bzw. SCSITOOLS eingestellt
unter Modus )
<br>
</p>
<p>HUSHI - READ-Cache eingerichtet
<br>
</p>
<p>2nd Level Cache der PAK3
<br>
</p>
<p>interner Cache des 68030
<br>
<br>
</p>
<p>z.B. wenn PMMU an und L2-Cache immer an, also nicht durch PMMU
gesteuert, dann treten folgende Effekte auf: wenn ich nun zum
erstenmal ein neues Programm starte, dann r&ouml;delt die Festplatte
sehr lange vor sich hin... (st&auml;ndiges Blinken der LED) bis dann
endlich das Programm erscheint... dies ist dann beim 2ten Mal nicht
mehr der Fall... zur Zeit schreibe ich hier im Editor und die LED der
Platte ist st&auml;ndig an! Wenn ich nun etwas mache und einen anderen
Zugriff auf Platte hervorrufe, dann l&auml;uft es weiter und die LED
erlischt.
<br>
</p>
<p>beim Start von SCSITOOL wurde manchmal nur eine und manchmal beide
Platten am ACSI BUS erkannt , wenn ich den internen Prozessorcache
ausschalte, dann klappt es richtig und beide Platten werden erkannt.
<br>
</p>
<p>Beim Booten gabs am Anfang auch ein paar Probleme, wobei ich aber
nicht einsch&auml;tzen kann ob es am RESET der Platte oder des
ACSI-Busses lag oder warum der HUSHI Treiber die Meldungen welche
Laufwerke erkannt wurden einfach hinten dran schreibt und nicht mehr
nach Platte geordnet untereinander...
<br>
</p>
<p>Wenn ich die PMMU einschalte und damit auch den Cache steuern
lasse, dann kann ich wahnsinnige Steigerung der
Zugriffsgeschwindigkeit beobachten :-))werde ich wohl erstmal so
belassen. w&uuml;rde mich freuen, wenn qualifizierte Antworten
k&auml;men :-))
<br>
</p>
<p>meine Konfig: MegaST2(4), TOS2.06CPU-Card,PAK3 mit gepatchtem
TOS3.06,<a href="1212.htm" target="UDOcon">Overscan</a>, <a href="0f0302.htm" target="UDOcon">RSVE</a>
</p>
<p>HUSHI-HD-Treiber,XBOOT3.0,NVDI2.5
<br>
</p>
<p>Michael Thomeczek @B
<br>
</p>
<p>
<br>
</p>
<p>Das Problem liegt eigentlich am L1-Cache, wenn die <a href="080105.htm" target="UDOcon">MMU</a> nicht aktiv
ist.
<br>
</p>
<p>Du solltest _unbedingt_ TOS 3.06 benutzen und die <a href="080105.htm" target="UDOcon">MMU</a> nicht per
Jumper deaktivieren. Dann sollte es keinen &Auml;rger geben.
<br>
</p>
<p>Die Ursache liegt &uuml;brigens im Prozessor:
<br>
</p>
<p>Wenn WA in der Cache-Maske gesetzt ist, werden Daten bei
Schreibzugriffen unter ignorieren von ciin in's Datencache
&uuml;bernommen. Ein folgender Lesezugriff auf die gleiche Adresse
wird dann aus dem Cache bedient.
<br>
</p>
<p>Das f&uuml;hrt zu Problemen mit HUSHI, wenn der DMA-Chip bedient
wird.
<br>
</p>
<p>WA kann beim 030 leider nicht abgeschaltet werden.
<br>
</p>
<p>In neueren Versionen hat HUSHI ein Workaround f&uuml;r das
Problem.
<br>
</p>
<p>Bitte nicht verwechseln: es ist weder ein Fehler in HUSHI noch in
der PAK, es ist die Natur des Prozessors. Daher liegt der Fehler
einfach darin, da&szlig; man die <a href="080105.htm" target="UDOcon">MMU</a> nicht korrekt anwendet (TOS 3.06
und <a href="080105.htm" target="UDOcon">MMU</a> nicht disabled)
<br>
</p>
<p>
<br>
<br><b> MegaUhr-Probleme mit PAK3 </b>
</p>
<p>Bei einem Bekannten von mir wird die gepufferte <a href="1413.htm" target="UDOcon">Uhr</a> nicht korrekt
bedient, wenn der Rechner mit TOS 3.06 auf der PAK betrieben wird.
<br>
</p>
<p>Kann ich best&auml;tigen, aber nur in Verbindung mit DCF_Time1.2
beim Stellen der <a href="1413.htm" target="UDOcon">Uhr</a> nach dem Abklemmen der Batterie !
<br>
</p>
<p>Also, wenn er kurz die Batterie raus hatte und seit dem nicht mehr
gestellt, dann mit TOPS2.06 booten (evt. mit PUK_GAL und normalem
68000) , dann die <a href="1413.htm" target="UDOcon">Uhr</a> wieder stellen und Batterie rein, dann mit
TOS3.06 und PAK3 booten und es ist wieder alles in Butter.
<br>
</p>
<p>Habe ich Durch Zufall gemerkt, als ich den Rechner &ouml;ffnete
und mal wieder der Draht zur Batterie abri&szlig;. :-))
<br>
</p>
<p>Entweder liegt es an DCF_TIME, falls er das benutzt, oder die
Uhrenroutine im gepatchten TOS3.06 hat noch ein Verhalten dieses
Uhrenbausteins (Batterie low) nicht ber&uuml;cksichtigt.
<br>
</p>
<p>Ralf Zimmermann (DCF_TIME) und STeffen Engel (TOS_Patches) wissen
von mir davon...
<br>
</p>
<p>evt. kann sich jemand, der die <a href="1413.htm" target="UDOcon">Uhr</a> und Ihr Verhalten (laut
Datenblatt) besser kennt, mal damit besch&auml;ftigen und evt.
herausfinden, woran es liegt.
<br>
</p>
<p>Es gibt ja Uhren, die erzeugen nach Spannungsausfall einen
zyklischen Interrupt... evt. ist das ja auch bei dieser <a href="1413.htm" target="UDOcon">Uhr</a> der Fall ?
Ich habe leider kein Datenblatt von der MegaST <a href="1413.htm" target="UDOcon">Uhr</a>.
<br>
</p>
<p>Die Routinen f&uuml;r die Mega-<a href="1413.htm" target="UDOcon">Uhr</a> sind vom Prinzip her aus dem
TOS 2.06 &uuml;bernommen, nur mit dem Unterschied, da&szlig; aus
Platzgr&uuml;nden 68020-Befehle f&uuml;r das zusammensetzen des Datums
verwendet werden.
</p>
<p>Der Zugriff auf die <a href="1413.htm" target="UDOcon">Uhr</a> ist jedoch identisch.
<br>
</p>
<p>Wenn man wieder auf KAOS (Hauptplatine) umsteigt, klappt auch
alles wieder. (Nicht immer: KAOS scheint bei einer chaotisch gesetzten
<a href="1413.htm" target="UDOcon">Uhr</a> manchmal beim Booten einfach h&auml;ngenzubleiben... da hift dann
meistens ein &quot;Uhren-Reset&quot; durch Entzug der Pufferspannung
am Chip).
<br>
</p>
<p>Stell man nun unter KAOS die <a href="1413.htm" target="UDOcon">Uhr</a>, so geht es genau so lange gut,
wie man nicht wieder auf TOS 3.06 umschaltet (auch die Pufferung beim
Ausschalten klappt).
<br>
</p>
<p>
<br>
<br><b> <a href="080106.htm" target="UDOcon">Shifter</a>/Bildsprung/Rand/&gt;10MHZ </b>
<br>
</p>
<p>Im Zusammenhang mit dem 10/12 MHz Projekt und der Pak haben einige
von Euch (ich auch) Schwierigkeiten mit dem Bild auf dem SM 124
bekommen. Dies &auml;u&szlig;erte sich (bei mir) wie folgt:
<br>
</p>
<p>Beim einschalten des Computix war der linke Rand des Bildes fast
immer versetzt. - Und was rechts zu viel war wurde dann links wieder
eingeschoben. Erst nach mehrmaligem, erneutem Einschalten (wenn mann
Gl&uuml;ck hatte) wurde ein sauberes Bild aufgebaut. (Leider verschob
sich dieses auch w&auml;hrend der Arbeit.) Das ist nat&uuml;rlich
f&uuml;r die Hardware pures Gift. (Das Einschalten) Tja, und bei
Frequenzen &gt;11,225MHz hatte ich immer ein &quot;Krisseln&quot; auf
dem Bildschirm. Und zwar in dem Bereich, der angeh&auml;ngt wurde.
<br>
</p>
<p>Auch der Tip von Rober Rohlfing mit einem 100nF Kondensator
zwischen PIN 1 (XTAL0) und PIN 40 (+5V) brachte (bei mir) nur bedingt
Besserung, aber &quot;inspirierte&quot;.
<br>
</p>
<p>Obwohl die RAM's, die Treiber und die restlichen IC's schnell
genug waren mu&szlig;te ich mit einem &quot;langsamen&quot; ST vorlieb
nehmen. :-( Auch diverse Versuche und Test's mit anderen Eprom-Daten
waren vergeblich.
<br>
</p>
<p>Nun habe ich eine L&ouml;sung gefunden, die (zumindest bei mir)
den gew&uuml;nschten Erfolg brachte. Mittlerweile fahre ich eine
Aufl&ouml;sung von 1024 X 480 (sichtbares Bild) auf einem SM 124 - mit
einem Boardtakt von 12,5MHz (50MHz Quarzoszillator) ohne
&quot;springen&quot; des Randes oder &quot;krisseln&quot; zu
beobachten. 60 MHz gingen (noch) nicht - aber ich werde es weiter
versuchen.
<br>
</p>
<p>Vorweg m&ouml;chte ich aber noch darauf hinweisen, das ich weder
Pistole noch Gewehr f&uuml;r (gegen) nix und niemanden &uuml;bernehme.
;-)
<br>
<br>Man suche sich:
<br>1 (bzw. 2) Kondensator(en) 100nF
<br>1 Widerstand 100 Ohm
<br>
</p>
<p>
<br>
</p>
<p>PIN 1 (XTAL0) wurde Urspr&uuml;nglich &uuml;ber ein Widerstand
(R144 im MEGA2 und Mega4 ST) mit 10kOhm auf Masse gezogen. Diesen
jetzt ausl&ouml;ten (entfernen) und erst mal zur Seite legen. (wird
noch gebraucht) In die freigewordenen L&ouml;tpunkte nun den
100nF-Kondensator einl&ouml;ten. Den ausgel&ouml;teten Widerstand
werden wir nun versetzen. Er bekommt sein neues Pl&auml;tzchen direkt
nebenan in die L&ouml;tpunkte die mit (R 145) bezeichnet sind. (er
kommt also zwischen (BLANK) und PIN 1 des Shifters) So, nun werden wir
noch den 2. Kondensator verbraten, falls dies noch nicht geschehen
(Tip von Robert! - siehe oben.). Er kommt zwischen PIN 1 des Shifters
(xtal0) und PIN 40 (+ 5V). Zum guten Schlu&szlig; noch den
100-&Ouml;hmer zwischen PIN 1 und Pin 2 des Shifters einl&ouml;ten. -
fertig
<br>
</p>
<p>Den 100 Ohm Widerstand und den 100nF Kondensator kann man am
besten auf die Platinenr&uuml;ckseite verfrachten. (aber bitte
aufpassen, das keine Schl&uuml;sse entstehen k&ouml;nnen.)
<br>
</p>
<p>So, wer es versuchen will -&gt; bitte nochmal PM an mich.
Schlie&szlig;lich will ich wissen, ob's bei Euch auch zum Erfolg
f&uuml;hrte oder jemand noch eine andere (bessere?) L&ouml;sung
gefunden hat.
<br>
</p>
<p>J&ouml;rg Nolte
<br>
</p>
<p>
<br>
<br><b> Pak -&gt; Screen verschoben </b>
<br>
</p>
<p>Bei mir hatte ich diesen Effekt besonders ausgepr&auml;gt, nachdem
ich mir die HBS640-36 eingebaut hatte (ich leide _nicht_ am
Manta-Syndrom !). Es trat so oft auf, da&szlig; es fast zum Auswachsen
war. Eine deutliche Verbesserung trat ein, nachdem ich einige 3u3
Folienkondensatoren als zus&auml;tzliche St&uuml;tz-C's im Rechner
eingesetzt hatte.
<br>
</p>
<p>Diese fanden ihren Platz in der N&auml;he des Shifters, <a href="080105.htm" target="UDOcon">MMU</a>,
DRAMS, <a href="080108.htm" target="UDOcon">CPU</a>. Der Einfachheit halber wurden sie &uuml;ber die eh' schon
vorhandenen St&uuml;tz-C's gel&ouml;tet. Im &Uuml;brigen kann ich
sagen, da&szlig; das Problem bei mir sowohl mit Original-Chipsatz als
auch mit IMP-Chips auftrat. Insgesamt habe ich so den Eindruck,
da&szlig; Atari es nicht immer ganz geschaft hat, die 5V-Versorgung
auf der Platine sauber zu halten. Seit dieser
&quot;Erg&auml;nzung&quot; l&auml;uft die Kiste bei mir recht ruhig.
Warum auch immer hat sich der Effekt mit zunehmender Betriebdauer der
HBS immer seltener gezeigt, so als wenn die neue Hardware ersteinmal
&quot;einlaufen&quot; m&uuml;&szlig;te (...???). Davon einmal
abgesehen, wer alzu genervt ist, sollte sich Autoswitch-<a href="1212.htm" target="UDOcon">Overscan</a>
einbauen. Die Treibersoftware dreht den Versatz wieder zur&uuml;ck (so
mein Eindruck). Dadurch st&ouml;rt die Schose eigentlich noch weniger
!
<br>
</p>
<p>
<br>
<br><b> Pak3/30 und Logic </b>
<br>
</p>
<p>Kann es sei das der Rom-Port nicht ueber den L2-Cache laeuft ?
<br>
<br>
</p>
<p>Der L2-Cache deckt ausschlie&szlig;lich den Adressbereich von 0 MB
bis 4 MB ab. Zugriffe auf den ROM-Port gehen immer am Cache vorbei.
<br>
</p>
<p>Anders beim <a href="080108.htm" target="UDOcon">CPU</a>-internen Cache, insbesondere beim 68030. Durch den
&quot;Write allocate Mode&quot; kommt der <a href="080108.htm" target="UDOcon">CPU</a>-Cache u.U. ins Spiel.
Abhilfe durch TOS 3.06, dort wird die <a href="080105.htm" target="UDOcon">MMU</a> in der <a href="080108.htm" target="UDOcon">CPU</a> entsprechend
programmiert.
<br>
</p>
<p>Jeder Zugriff der PAK auf den ROM-Port l&auml;uft genauso schnell
ab, wie mit einem 68000er. Nur die Zeit zwischen zwei Zugriffen kann
k&uuml;rzer werden. Und falls Daten in den <a href="080108.htm" target="UDOcon">CPU</a>-internen Cache geraten
sind (s.o.), werden diese nat&uuml;rlich ohne erneuten Zugriff auf den
ROM-Port aus dem Cache geholt.
<br>
</p>
<p>
<br>
<br><b> PAK Caches ein/aus </b>
<br>
</p>
<p>Die <a href="080108.htm" target="UDOcon">CPU</a>-internen Caches k&ouml;nnen &uuml;ber die &quot;Enable
Bits&quot; im CACR (Cache Control Register) ein- und ausgeschaltet
werden. Der L2-Cache kann (mit J11 auf 1-2) &uuml;ber das &quot;Cache
Inhibit Bit&quot; in der Adresstabelle in der <a href="080105.htm" target="UDOcon">MMU</a> ein- und
ausgeschaltet werden (die <a href="080108.htm" target="UDOcon">CPU</a>-Caches sind davon ebenfalls betroffen).
<br>
</p>
<p>Damit sind also alle Caches per Software schaltbar.
<br>
</p>
<p>Was das TOS nun tats&auml;chlich macht, wenn man am
Cache-Men&uuml;punkt herumspielt, k&ouml;nnen nur die Soft-Experten
beantworten.
<br>
</p>
<p>
<br>
<br><b> SM124 Problem an der PAK3 </b>
<br>
</p>
<p>Das Verzerrungsproblem unter TOS 2.06 oder TOS 3.06 im
Zusammenhang mit der PAK und/oder mit einem 12 MHz Board scheinen
mehrere Leute zu haben. Es scheint so zu sein, da&szlig; ein
bestimmter Boardtyp daran Schuld ist. Wer diese Probleme eklatant hat,
sollte mal folgendes nachschauen:
<br>
</p>
<p>Bei einigen Mainboards geht an Pin1 des Shifters das Blank Signal.
&Uuml;berpr&uuml;fen kann man dies indem man testet ob Pin1 des
Shifters mit Pin 36 der <a href="080107.htm" target="UDOcon">GLUE</a> Verbindung hat. Achtung: Nur bei Rechnern
mit Blank an Pin1 des Shifters den Umbau starten!
<br>
</p>
<p>Ist dies der Fall dann sollte der Rechner wie folgt umgebaut
werden: Die Zuleitung zu Pin1 des Shifters durchtrennen. Pin1 vom
<a href="080106.htm" target="UDOcon">Shifter</a> &uuml;ber 4,7 kOhm nach Masse. Evtl. noch einen 100nF
Kondensator nach Vcc. Von Pin21 Pin24 und Pin27 des Shifters jeweils
eine Diode L&ouml;ten. Die Anode (die ohne Balken) dabei an die oben
beschriebenen Pinne. Die Kathoden der drei Dioden (die mit dem dicken
schwarzen Balken) zusammen an das Blank Signal f&uuml;hren. Als Dioden
empfehle ich entweder Shottky Typen (z.B. BAT5 (hier kann man den
schwarzen Balken gut erkennen )) oder normale Typen wie 1N914 oder
1N1001 oder 1N1004 oder oder oder.....
<br>
</p>
<p>Ist dies nicht der Fall: Weis ich auch keinen Rat.
<br>
</p>
<p>Falls der oben beschriebene Umbau hilft, w&auml;re ich f&uuml;r
eine kleine PM dankbar. Falls der Umbau nicht funktioniert ebenso. Bei
zwei mir bekannten Rechnern erbrachte der Umbau den gew&uuml;nschten
Erfolg. Ich w&uuml;rde gerne wissen ob das immer so ist.
<br>
</p>
<p>
<br>
<br><b> PAK GALs </b>
<br>
</p>
<p>So, ein neues GAL U4 ist fertig, zumindest die Logikgleichungen.
Es ist alles einfacher und k&uuml;rzer geworden. Leider konnte ich es
in Ermangelung eines GAL-Brenners noch nicht testen, kommt aber noch.
<br>
</p>
<p>Beim St&ouml;bern im Listing von GAL U1 (V12_16a) fiel mir aber
etwas anderes auf: Bei einem Wortzugriff auf eine Adresse mit A1=0,
A0=0 wird stets ein 68000-Zykel initiiert, falls das n&auml;chste Wort
(A1=1, A0=0) nicht im Cache ist. Dabei spielt es keine Rolle, ob das
eigentlich gesuchte Wort (A1=0) selbst im Cache steht. Es wird zwar
durch den Zugriff dort hineingeschrieben, aber beim n&auml;chsten mal
wieder vom Mainboard geholt. Ich habe das durch ein kleines
Progr&auml;mmchen verifiziert (ich wollte den Rechner nicht
aufschrauben):
<br>
</p>
<pre>
org $200000
load $200000

start: move   sr,d7
       or.w   #$700,sr
       lea    $200090,a0            ; &lt;-- Adresse
       tst.l  $100090
       move.w #600,d1
       moveq  #-1,d0
loop:  tst.l  (a0)                  ; &lt;-- Zugriffsart
       dbra   d0,loop
       dbra   d1,loop
       move   d7,sr
       illegal

Heraus kommt folgende Tabelle (handgestoppt):

Adresse     Zugriffsart    Zeit   Zeit-15s (== nop-schleife)
-----------------------------------------------------------
$200092     tst.l (a0)      47s       32s
$200092     tst.w (a0)      25s       10s
$200090     tst.l (a0)      25s       10s
$200090     tst.w (a0)      31s       16s
$FF8240     tst.w (a0)      31s       16s

</pre>
<p>
<br>
</p>
<p>Man sieht, da&szlig; der Wortzugriff auf $200090 trotz Cache
genauso lange braucht wie der Zugriff auf eine Adresse, die sicher
nicht gecachet wird.
<br>
</p>
<p>Man k&ouml;nnte in den Gleichungen von PAL U1 Abhilfe schaffen,
indem auch die Signale siz1 und siz0 mit heranzieht. Leider liegen die
nicht am PAL an! Dort ist nur ein Pin frei, an dem man aber (siz0 xor
siz1) anlegen kann. Erlaubt man Wortzugriffe auf ungerade Adressen,
braucht man auch A0. Man k&ouml;nnte sich behelfen, indem man (!siz1 *
siz0 + !a0 * siz1 * !siz0) an bewu&szlig;tem Pin einspeist. Das
mu&szlig; man wohl diskret erzeugen?
</p>
<p>Hmm, es ist ja anscheinend nichts perfekt auf der Welt, nicht mal
die PAK. :-)
<br>
</p>
<p>Mir ist noch eine andere L&ouml;sung eingefallen, die v&ouml;llig
ohne Zusatzhardware auskommt. Man aktiviert im Falle (mat0 * !mat2 *
!a1) einfach DSACK1, l&auml;&szlig;t aber DSACK0 inaktiv. Dann geht
die <a href="080108.htm" target="UDOcon">CPU</a> von 16 Bit breitem Speicher aus und ignoriert die andere
Datenbush&auml;lfte, f&uuml;hrt evtl. sp&auml;ter weitere Zugriffe auf
fehlende Operandenteile aus.
<br>
</p>
<p>Im symmetrischen Fall (!mat0 * mat1 * a1) aktiviert man dagegen
beide und gaukelt so einen Langwortzugriff vor (obwohl die H&auml;lfte
des Langworts falsch ist). Das hat den Vorteil, da&szlig; die <a href="080108.htm" target="UDOcon">CPU</a> die
Daten dann automatisch aus dem Lo-Word liest, ansonsten (bei inaktivem
DSACK0) m&uuml;&szlig;te man das Wort extern &quot;hochkopieren&quot;,
was so mit der Hardware der PAK nicht geht. Dieser Fall wird aber
bislang schon so behandelt wie beschrieben, so da&szlig; es da keine
Probleme geben sollte.
<br>
</p>
<p>Falls jemand damit mal experimentiert, bitte ich um eine PM, auch
wenn sie bis September unbeantwortet bleiben wird. Die Entw&uuml;rfe
meiner modifizierten GAL-Listings stelle ich zur Verf&uuml;gung.
<br>
</p>
<p>Vorsicht! Es m&uuml;ssen lt. 68030 User's Manual immer alle
Datenbytes &uuml;ber die volle zur&uuml;ckgemeldete Datenbusbreite
g&uuml;ltig sein.
<br>
</p>
<p>Grund: Der 68030 &uuml;bernimmt auch die zun&auml;chst nicht
ben&ouml;tigten &quot;falschen&quot; Daten in den <a href="080108.htm" target="UDOcon">CPU</a>-internen Cache.
Falls dann sp&auml;ter ein Zugriff auf diese Adresse erfolgt, gibt es
eine &Uuml;beraschung!
<br>
</p>
<p>Der 68020 hat diese Beschr&auml;nkung nicht. Wirf mal einen Blick
in die GALs U1 f&uuml;r die PAK/3-020 (P12_xxx).
<br>
</p>
<p>Nachdem ich nun wieder im Lande bin und auch endlich einen
GAL-Brenner habe, kann ich berichten, wie ich bei meiner PAK durch
neue GAL-Gleichungen noch 10% Speed herausgeholt habe. Damit ist nicht
etwa die Integerdivision gemeint, sondern Sachen wie BitBlt und LKURZ.
Bislang war meine PAK, wenn alle Caches aus waren, langsamer als ein
68000 im gleichen Sockel. Das sollte sich nun ge&auml;ndert haben, ich
habe es aber dummerweise nicht gemessen, als der Rechner noch offen
war. :-)
<br>
</p>
<p>Gebohrt habe ich an drei Stellen, zwei befinden sich in GAL U1 und
eine in GAL U4. Meine Rechnerkonfiguration ist ein synchroner 68020 in
einem auf 10 MHz aufgebohrten Mega-ST, die drei Modifikationen lassen
sich aber vermutlich aber sinngem&auml;&szlig; auf andere
PAK-Konfigurationen &uuml;bertragen.
<br>
</p>
<p>Probleme hatte ich auch: Erstens ist die Optimier-Option in der
Maxon-Software offenbar im Ar***. Zweitens enthielt mein von MW
geliefertes GAL P12_16 den Inhalt von P12_32, weswegen meine Eproms
auf CS-Steuerung gejumpert waren. Meine auf P12_16 basierenden
Modifikationen konnten also nicht laufen. Drittens waren dsack0 und
dsack1 im urspr&uuml;nglichen GAL-Listing verwechselt, was dort aber
egal war. Viertens hatte ich nat&uuml;rlich noch meine eigenen Fehler
eingebaut. :-)
<br>
</p>
<p>Es ist wahrscheinlich am geschicktesten, wenn ich die
&Auml;nderungen hier einmal kurz beschreibe und die Listings in die
beiden Folgemails packe.
<br>
</p>
<p>(1) GAL U1: Man kann !cyc_00 minimal beschleunigen, was den
Automaten in U4 evtl. um einen CLK8-Zyklus beschleunigt, was
Ram-Zugriffe (&uuml;ber die MCU im ST) evtl. um drei weitere
CLK8-Zyklen beschleunigt.
<br>
</p>
<p>(2) GAL U1: Bislang wurden Zugriffe auf ein Wort an einer
Langwortadresse nicht aus dem Cache bedient, wenn das Folgewort nicht
im Cache war. Das Problem l&auml;&szlig;t sich in den Gleichungen
leicht l&ouml;sen, nur treten dabei zwei Probleme auf: zum einen kann
dsack1 nicht auf die Matrix zur&uuml;ckgef&uuml;hrt werden, zum
anderen braucht dsack1 mehr Zeilen als vorhanden sind. Ich habe das
Problem durch Zuhilfenahme eines unbenutzten Ausgangs gel&ouml;st.
68030-User aufgepa&szlig;t: der andere Fall (Zugriff auf
Langwortadresse+2) l&auml;&szlig;t sich nur beim 68020 so l&ouml;sen,
wie es in P12_16 gemacht wird.
<br>
</p>
<p>(3) GAL U4: Hier war die Statemachine doch sehr konfus (mit
pathologischen Zustands&uuml;berg&auml;ngen) und hat beim Schreiben,
glaube ich, sogar einen CLK8-Zyklus zuviel verbraucht, was die MCU im
Atari mit drei weiteren bestraft. Der neue Automat ist
&auml;sthetischer und jeweils einen CLK8-Zyklus schneller.
<br>
</p>
<p>Noch schnell ein paar Benchmarks: Dhrystone 1.1 meldet maximal
5165 und LKURZ.TEX wird in 2'29&quot; &uuml;bersetzt, was in der
LKURZ-Liste dem TT im Fastram entspricht.
<br>
</p>
<p>PS: &Uuml;brigens bietet Pollin-Elektronik in der neuesten
Sonderliste wieder 68020-16 f&uuml;r 28 Mark an, da kommt meiner auch
her.
<br>
</p>
<p>
<br>
</p>
<pre>
PAK 68/3, GAL 1:  <a href="080108.htm" target="UDOcon">CPU</a>-Clk State Machine f&uuml;r 68020 mit 16 MHz

22-09-94   V12_16  Martin Rogge @ KI

neu: Es werden halbvolle Cachelines korrekt behandelt.
                             ___  ___
                            |   \/   |
                  16m = CLK |1     24| VCC
                       mat2 |2     23| mat0
                        16m |3     22| !dsack1
                         a1 |4     21| !dsack0
                     !as_00 |5     20| !cyc_00
                      !tclr |6     19| !sterm
                        !wr |7     18| !as_22
                     !as_20 |8     17| !doe
                      !prom |9     16| !as_21
                     !csp19 |10    15| !roe
                   !dsack00 |11    14| !dram
                        GND |12    13| !OE auf VCC
                            |________|
%ID
      P12_16mr
%TYP
      GAL20V8A
%PINS
 CLK  mat2  16m  a1  !as_00  !tclr  !wr  !as_20  !prom  !csp19  g1p11
 !OE  !dram  !roe  !as_21  !doe  !as_22  !dsack11  !cyc_00  !dsack0
 !dsack1  mat0
%LOGIC

 as_21.OE  = VCC;
 as_21     = as_20 * 16m
           + as_21 * !16m
           + as_20 * as_21;

 as_22     = as_20 * as_21 * !16m
           + as_22 * !16m
           + as_20 * as_22;

 doe       = as_20 * !as_00 * dram * !tclr * !wr * as_22 * mat0 * mat2
           + as_20 * !as_00 * dram * !tclr * !wr * as_22 * mat0        * !a1
           + as_20 * !as_00 * dram * !tclr * !wr * as_22        * mat2 *  a1;

 !cyc_00   = !as_21 * !as_20
           + csp19
           + !as_00 * dram * !tclr * !wr * mat0 * mat2
           + !as_00 * dram * !tclr * !wr * mat0        * !a1
           + !as_00 * dram * !tclr * !wr        * mat2 *  a1
           + prom * !wr;

 dsack0.OE = as_21 * !cyc_00 * !csp19;
 dsack0    = as_20 * dram * !tclr * !wr * 16m     * mat0 * mat2
           + as_20 * dram * !tclr * !wr * 16m            * mat2 *  a1
           + as_20 * prom         * !wr * 16m
           + as_20 * dram * !tclr * !wr * dsack0 * mat0 * mat2
           + as_20 * dram * !tclr * !wr * dsack0        * mat2 *  a1
           + as_20 * prom         * !wr * dsack0;

 dsack1.OE = as_21 * !cyc_00 * !csp19;
 dsack1    = as_20 * dram * !tclr * !wr * dsack11  * mat0 * mat2
           + as_20 * dram * !tclr * !wr * dsack11  * mat0        * !a1
           + as_20 * dram * !tclr * !wr * dsack11         * mat2 *  a1
           + as_20 * prom         * !wr * dsack11;

 dsack11   = as_20 * dram * !tclr * !wr * 16m     * mat0 * mat2
           + as_20 * dram * !tclr * !wr * 16m     * mat0        * !a1
           + as_20 * dram * !tclr * !wr * 16m            * mat2 *  a1
           + as_20 * prom         * !wr * 16m
           + as_20 * dram * !tclr * !wr * dsack11
           + as_20 * prom         * !wr * dsack11;

 roe       = as_20 * prom * !wr * !OE;

%END



PAK 68/3, GAL U4:  State Machine 1 f&uuml;r 68000 Businterface, 16 MHz

22-09-94   V4_16  Martin Rogge @ KI
                       ___  ___
                      |   \/   |
                clk16 |1     24| VCC
                 clk8 |2     23| !dtack
                !from |3     22| !uds
              !cyc_00 |4     21| !lds
                   rd |5     20| q1
                   e2 |6     19| !as_00
                   e1 |7     18| !vma
                 siz1 |8     17| q0
               !as_20 |9     16| !dsack1
                !word |10    15| !dsack
                   a0 |11    14| siz0
                  GND |12    13| !OE
                      |________|
%ID
   P4_16mr
%TYP
   GAL20V8A
%PINS
   CLK  clk8  !from  !cyc_00  rd  e2  e1  siz1  !as_20  !word  a0
   !OE  siz0  !dsack  !dsack1  q0  !vma  !as_00  q1  !lds  !uds  !dtack
%LOGIC

    uds &lt;-   !uds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * rd * word
         +   !uds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * !a0
         +    uds * !dsack1       * !q0 *  as_20
         +    uds *  dsack1 * !q1       *  as_20
         +    uds           * !q1 *  q0 *  as_20;

    lds &lt;-   !lds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * rd * word
         +   !lds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * a0
         +   !lds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * !siz0
         +   !lds * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00 * siz1
         +    lds * !dsack1       * !q0 *  as_20
         +    lds *  dsack1 * !q1       *  as_20
         +    lds           * !q1 *  q0 *  as_20;

  as_00 &lt;- !as_00 * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00
         +  as_00 * !dsack1       * !q0 *  as_20
         +  as_00 *  dsack1 * !q1       *  as_20
         +  as_00           * !q1 *  q0 *  as_20;

 dsack1 &lt;-  as_00 * !dsack1 * !q1 * !q0 *  as_20 * !clk8 * rd *  dtack
         +  as_00 * !dsack1 * !q1 * !q0 *  as_20 * !clk8 * rd *  vma * !e1 * e2
         +           dsack1 * !q1 * !q0 *  as_20
         +  as_00           * !q1 *  q0 *  as_20
         +  as_00 *  dsack1 *  q1 *  q0 *  as_20;

     q1 &lt;- !as_00 * !dsack1 * !q1 * !q0 *  as_20 *  clk8 * cyc_00
         +  as_00 * !dsack1 * !q1 *  q0 *  as_20;

     q0 &lt;-  as_00 * !dsack1 * !q1 * !q0 *  as_20 * !clk8 * !rd *  dtack
         +  as_00 * !dsack1 * !q1 * !q0 *  as_20 * !clk8 * !rd *  vma * !e1 *
e2
         +  as_00           * !q1 *  q0 *  as_20
            as_00 *  dsack1 * !q1 * !q0 *  as_20;

    vma &lt;- !clk8 * !e1 * !e2
         + vma * !e2
         + vma * !e1
         + vma * clk8;

 dsack.OE = VCC;
 dsack    = as_20 * dsack1;

%END

</pre>
<p>
<br>
</p>
<p>F&uuml;r Leute, die immer noch Schwierigkeiten haben bei dem
Betrieb mit der PAK bei 50 MHz und zwar mit oder ohne Pufferplatine,
denen kann geholfen werden.
</p>
<p>Hierzu m&uuml;ssen einige &Auml;nderungen im ST durchgef&uuml;hrt
werden:
<br>
</p>
<p>1. Brennen eines GALs mit folgendem Inhalt:
<br>
</p>
<p>OE_1 Neugenerierung des Output-Enable der 373er beim RAM im ST
</p>
<pre>Robert Rohlfing
02-09-94   erster Entwurf
26-09-94   Pin&auml;nderung f&uuml;r L&ouml;tl&ouml;sung ohne Platine

                       ___  ___
                      |   \/   |
                  !oe |1     20| VCC
                      |2     19| !oe_neu
                      |3     18| hold
                      |4     17|
                      |5     16|
                      |6     15|
                      |7     14|
                      |8     13|
                      |9     12|
                  GND |10    11| latch
                      |________|
%ID
      OE_1
%TYP
      GAL16V8A
%PINS
      !oe   nc nc nc nc nc nc nc   nc
      latch nc nc nc nc nc nc hold !oe_neu

%LOGIC
      oe_neu = oe * !latch * !hold
             + oe *  latch *  hold;

      hold   = oe * latch
             + oe * !latch * hold;

%END

</pre>
<p>
<br>
</p>
<p>2. Die beiden 74373er im ST sind ausfindig zu machen, die zu den
RAMs gehen. Bei Mega-ST sind das U33 und U36, beim 260-ST und 520-ST
sind das U22 und U23, beim 1040-ST sind es U57 und U58.
<br>
<br>
</p>
<p>3. Die beiden Pin1 der 373er sind aus dem Mainboard zu entfernen.
<br>
<br>
</p>
<p>4. Vom GAL sind Pin 1 und Pin 19 nach oben zu biegen.
<br>
</p>
<p>5. Pin 2 bis 9 des GALs sowie Pin 12 bis 18 sind zu k&uuml;rzen
oder zu entfernen.
<br>
<br>
</p>
<p>6. Pin 1, 10 und 11 des GALs sind mit den gleichen Pins eines der
beiden 373er auf dem Board zu verbinden (Das GAL oben auf einen der
373 l&ouml;ten).
<br>
<br>
</p>
<p>7. An Pin 1 des GALs kommt der ehemalige Pin 1 der 373, also das
Signal vom Board.
<br>
<br>8. Pin 19 vom GAL wird mit beiden Pin 1 der beiden 373 &uuml;ber
ein kurzes St&uuml;ck Kabel verbunden.
<br>
<br>
</p>
<p>9. Pin 18 vom GAL bleibt unbeschaltet.
<br>
</p>
<p>
<br>
<br><b> PAK68/3 &amp; reSOLUTION </b>
<br>
</p>
<p>Ich habe mir die obengenannte Grafikkarte mal in meinen Rechner
eingebaut.
</p>
<p>Zus&auml;tzlich werkelt noch eine PAK68/3-30 mit 36 MHz vor sich
hin.
<br>
</p>
<p>Nun habe ich mit UMG4000 mir meine Aufl&ouml;sungen
zusammengestellt und ein NVDIVGA.INF abgespeichert. Klappte alles
hervorragend.
<br>
</p>
<p>Also NVDI-ET4000 V2.51 installiert, NVDIVGA.INF in den Autoordner
kopiert und einen Reset ausgef&uuml;hrt. Dann erschien auf dem
VGA-Moni die Auswahlbox f&uuml;r die diversen Aufl&ouml;sungen. Die
Auf&ouml;sung kann man noch w&auml;hlen, aber wehe man klickt auf den
OK-Button, dann erscheinen erst 2, dann 4 und zum guten Schlu&szlig;
11 Bomben auf dem SM124.
<br>
</p>
<p>Einen 330 Ohm Widerstand habe ich schon zwischen VCC und R/W.
</p>
<p>Eine Diode zwischen A23 und BGACK reduzierte die Bombenanzahl auf
drei.
<br>
</p>
<p>Und das &Auml;ndern der Taktfrequenz auf 32 MHz &auml;nderte
nichts an der Bombenstimmung.
<br>
</p>
<p>Bevor Jemand fragt, nein es ist nichts im Autoordner und es ist
kein ACC installiert.
</p>
<p>Hat da jemand schon eine L&ouml;sung? Ich glaube nicht, das das
Problem von der Software kommt.
<br>
</p>
<p>
<br>
<br><b> PAK-Cache &amp; Turbo-LED </b>
<br>
</p>
<p>Der L1-Cache wird aktiv, wenn folgende Bedingungen _alle_
erf&uuml;llt sind:
<br>
</p>
<dl>
<dt><b>1.</b></dt><dd> Das Enable-Bit im CACR ist gesetzt (Kann nur per Software gesetzt
und gelesen werden).
<br>&nbsp;
<dt><b>2.</b></dt><dd> Das /CDIS-Signal ist inaktiv (Jumper J2 offen, das ist leicht
hardware- m&auml;&szlig;ig feststellbar).
<br>&nbsp;
<dt><b>3.</b></dt><dd> Das /CIIN-Signal ist inaktiv (Macht die PAK-Hardware bei RAM- und
ROM- Zugriffen. Ist an Pin17 von U6 verf&uuml;gbar, H=on, L=off).
<br>&nbsp;
<dt><b>4.</b></dt><dd> Das /CIOUT-Signal ist inaktiv (Wird durch das CI-Bit in der
<a href="080105.htm" target="UDOcon">MMU</a>-Tabelle bestimmt. Kann per Software gesetzt und gelesen werden.
Das Signal ist hardwarem&auml;&szlig;ig an J11 Pin1 verf&uuml;gbar,
H=on, L=off. Gilt aber nur f&uuml;r den jeweils gerade laufenden
Buszyklus).
<br>&nbsp;
</dl>
<p>Der L2-Cache wird aktiv, wenn folgende Bedingungen _alle_
erf&uuml;llt sind:
<br>
</p>
<dl>
<dt><b>1.</b></dt><dd> Der Jumper J4 ist offen (Wer h&auml;tte das gedacht?).
<br>&nbsp;
<dt><b>2.</b></dt><dd> Falls irgendwann vorher J4 gesteckt gewesen sein sollte,
mu&szlig; danach bei offenem J4 mindestens ein DMA-Zugriff erfolgt
sein. Bis dahin bleibt der L2 noch ausgeschaltet (An Pin20 von U2
verf&uuml;gbar, H=L2 on, L=L2 off).
<br>&nbsp;
<dt><b>3.</b></dt><dd> Die aktuelle Zugriffsadresse liegt zwischen 0MB und 4MB (ST-RAM
halt, an Pin16 von U6 verf&uuml;gbar, L=ST-RAM, H=sonst).
<br>&nbsp;
<dt><b>4.</b></dt><dd> /CIIN wie oben unter 3.
<br>&nbsp;
<dt><b>5.</b></dt><dd> /CIOUT wie oben unter 4.
<br>&nbsp;
</dl>
<p>
<br>
</p>
<p>Wie willst Du da den Cache-Status hardwarem&auml;&szlig;ig
eindeutig erkennen? Man k&ouml;nnte vielleicht mit etwas Zusatzlogik
so eine Art Cache-Lichtorgel bauen, die um so heller flackert, je
heftiger die PAK im Cache w&uuml;hlt. Hatte nicht Silicon Graphics mal
so was an ihren bunten Maschinen?
<br>
</p>
<p>
<br>
<br><b> Tips zur FRAK30 </b>
<br>
</p>
<p>Am Samstag haben leider einige K&auml;ufer der FastRAmKarte keine
*Einbauanleitung* bekommen k&ouml;nnen, am Sonntag gab es die dazu. Um
Problemen vorzubeugen hier ein paar Sachen, die man beachten solle,
wenn man die FRAK einbaut.
<br>
</p>
<p>- Auf der PAK sind 4 zus&auml;tzliche Verbindungen nach CON1
herzustellen.
<br>- Ein eventuell zus&auml;tzlich eingebauter 50MHz-Takt-Treiber
(F02) am Quarz-Oszillator mu&szlig; wieder raus, denn der Takt kommt
jetzt von der FRAK.
<br>
</p>
<p>- Das GAL U6 auf der PAK gegen ein Neues tauschen, es wurde mit
der FRAK geliefert.
<br>
</p>
<p>- Auf der PAK mu&szlig; f&uuml;r U1 das GAL U13_50 Verwendung
finden, auch bei 32MHz-Betrieb.
<br>
</p>
<p>- TOS 3.06 mu&szlig; vorhanden sein, nur das erkennt das FastRAM.
<br>
</p>
<p>- Beim Aufstecken der FRAK auf die PAK aufpassen, da&szlig; _alle_
Pins unverletzt bleiben.
<br>
</p>
<p>Vier zus&auml;tzliche Verbindungen auf der *PAK* per
F&auml;deldraht herstellen:
<br>- /CSP19 von U6 Pin21 an CON1 Pin1
<br>- /CIIN von U6 Pin17 an CON1 Pin2
<br>- /STERM von U1 Pin19 an CON1 Pin3
<br>- CPUCLK von Jumper J9 Pin1 an CON1 Pin19
<br>
</p>
<p>
<br>
<br><b> PAK3/30 und Pufferplatine </b>
<br>
</p>
<p>Erfahrungen mit der PAK und der Pufferplatine
<br>
</p>
<p>Hardware: 1040STF-Mainboard (8 MHz Systemtakt), PAK3/30-40MHz, 4
MB RAM, c't-IDE-Interface mit SEAGATE 3122A, ICD Adscsi+ mit SEAGATE
4702N, HD-Modul,MegaClock,<a href="0f0302.htm" target="UDOcon">RSVE</a> und *Pufferplatine* ;-)
<br>
<br>
</p>
<p>Nach dem Einbau der Pufferplatine hatte ich zuerst Probleme mit
dem DMA-Transfer; meine SCSI-Platte wurde bei 32 MHz &uuml;berhaupt
nicht oder nicht vollst&auml;ndig erkannt. Probleml&ouml;sung:
Verringerung des Resetwiderstands auf 560 Ohm. Seither keine Probleme
mehr (zur Zeit bis 40 MHz getestet).
<br>
</p>
<p>Ohne Pufferplatine hatte ich Probleme mit dem c't-IDE-Interface.
Bei 32 MHz beendeten sich alle getesteten Original-Harddisk-Treiber
(AHDI, HDDRIVER, HUSHIJR, interner Treiber der DISKUS-Demo) mit einem
Busfehler. Erst vonmir gepatchte Versionen liefen ohne weitere
Probleme. Seit dem Einbau der Pufferplatine laufen alle genannten
Treiber selbst bei 40 MHz einwandfrei.
<br>
</p>
<p>Ein weiteres Kapitel zum Thema &quot;Die PAK und die <a href="1413.htm" target="UDOcon">Uhr</a>&quot;:
Vor dem Einbau der Pufferplatine konnte ich meine MegaClock nicht
benutzen, da bei jedem Neustart die <a href="1413.htm" target="UDOcon">Uhr</a> ins Jahr 2026 sprang. Nach dem
Einbau habe ich bisher keine Probleme mehr. Allerdings hatte ich
zwischenzeitlich auch einmal mit einem 68000er und TOS 2.06 die <a href="1413.htm" target="UDOcon">Uhr</a>
korrekt gestellt. Was auch immer die Ursache f&uuml;r den Fehler war,
jetzt ist er beseitigt.
<br>
</p>
<p>Da ich meinen 68030-33 mit 40 MHz &uuml;bertakte, w&uuml;rde ich
ihm gerne einen K&uuml;hlk&ouml;rper verpassen. Gibt es welche in
passender Gr&ouml;&szlig;e ? Wie sind die Erfahrungen, was hat sich
bew&auml;hrt ?
<br>
</p>
<p>
<br>
<br><b> PAK3 - Neue Platinenrevision </b>
<br>
</p>
<p>Hast Du den Zettel &quot;Hinweise zur neuen Platinenversion
PAK/3-030A&quot; nicht bekommen?
<br>
</p>
<p>OK, dann hier:
<br>
</p>
<p>*Hinweise zur neuen Platinenversion PAK/3-030A*
<br>
</p>
<p>Die neue Platinenversion erkennen Sie an dem Aufdruck PAK/3-030A
links unten auf der L&ouml;tseite. Folgende Neuerungen und
&Auml;nderungen sind bei diesem Layout in Bezug auf die erste PAK68/3
gemacht worden:
<br>
</p>
<p>- Neuer Widerstand R9 = 33 Ohm; mu&szlig; unbedingt best&uuml;ckt
werden.
<br>
<br>
</p>
<p>- Zwei zus&auml;tzliche Massepunkte und ein VCC-Anschlu&szlig; am
Platinenrand neben dem 68000er-Sockel.
<br>
<br>
</p>
<p>- Neuer Jumper J12; dient nur zu Testzwecken und braucht nicht
best&uuml;ckt zu werden.
<br>
<br>
</p>
<p>- Das GAL zur Prozessorumschaltung ist bereits vollst&auml;ndig
angeschlossen worden und braucht nun nicht mehr gef&auml;delt zu
werden. Allerdings hat sich die GAL-Belegung ge&auml;ndert, deshalb
hei&szlig;t die neue Version nun P3A_PUK.
<br>
<br>
</p>
<p>- Unter dem Quarzoszillator U23 l&auml;&szlig;t sich nun von der
L&ouml;tseite her optional ein 74F00 einsetzen. Dieser dient der
Pufferung des Takts, da sich gezeigt hat, da&szlig; die
Quarzoszillatoren in der Regel bei 50 MHz kein ausreichend starkes und
sauberes Taktsignal mehr liefern, was sich besonders bei
gleichzeitiger FPU-Benutzung st&ouml;rend bemerkbar machen kann. Wenn
Sie diese Taktpufferung einsetzen wollen, so sollten Sie die
Taktleitung auch entsprechend terminieren. Insgesamt m&uuml;ssen Sie
dazu folgendes beachten:
<br>
<br>
</p>
<p>1. 74F00 von der L&ouml;tseite best&uuml;cken.
<br>2. R47 wird von 47 Ohm auf 10 Ohm erniedrigt.
<br>3. R48 = 68 Ohm und C43 = 220 pF einsetzen.
<br>
<br>
</p>
<p>Wollen Sie die Quarzpufferung nicht einsetzen, so m&uuml;ssen Sie
die neue L&ouml;tbr&uuml;cke auf der L&ouml;tseite zwischen R47 und
dem Oszillator mit reichlich L&ouml;tzinn schlie&szlig;en.
<br>
</p>
<p>*Achtung:* Sollten Sie die FASTRAM-Karte (FRAK30) einsetzen, so
d&uuml;rfen Sie die Taktpufferung auf der PAK nicht benutzen (der Takt
wird dann auf der FASTRAM-Karte erzeugt und auch dort direkt
gepuffert), oder Sie m&uuml;ssen nachtr&auml;glich Pin 6 des 74F00
durchtrennen.
<br>
</p>
<p>Ich habe sofort R9 best&uuml;ckt und die PAK eingesetzt. Lief auf
Anhieb (40 MHz). Dann den 50 MHz Quarz rein, keine Probleme.
L&auml;uft absolut stabil. Ich benutze weder eine Pufferplatine, noch
die Taktpufferung. Auch die Stromversorgung l&auml;uft nur &uuml;ber
den Prozessorsockel. Daf&uuml;r sind bei mir alle Komponenten (GALs:
12 ns, Cache-RAMs: 15 ns) schneller als in der St&uuml;ckliste
angegeben. Die Prozessoren sind 50 MHz Typen und werden noch nicht mal
besonders hei&szlig;. Scheinbar bringt das mehr als alles andere. An
der Busterminierung habe ich nichts ge&auml;ndert, die Treiber hatte
ich allerdings vorher schon gegen F-Typen ausgetauscht. Was vielleicht
noch wichtig ist: Bei mir ist der 8 MHz Takt, der von der <a href="080105.htm" target="UDOcon">MMU</a> kommt,
mit einem 74F08 gepuffert. Au&szlig;erdem sind bei mir R23 - R27 auf
der PAK durch ein Versehen 2k2 Ohm Widerst&auml;nde.
</p>
<p>
<br>
</p>
<p>Und noch etwas: Das TOS 2.06 meines Rechners (Mega 2) steckt bei
mir auf einem H&amp;N MultiBoard (auf der PAK steckt nat&uuml;rlich
TOS 3.06). Daran angeschlossen ist au&szlig;erdem eine ET4000-Karte,
auf der ich im Moment eine Aufl&ouml;sung von 1024 mal 768 bei 256
Farben fahre. Das ganze auf einem 17&quot; Monitor mit NVDI ET4000 und
MagX :-). Zus&auml;tzliches RAM habe ich auf dem MultiBoard im Moment
leider noch nicht.
</p>
<p>
<br>
<br>
</p>
<p><b> Hinweise zum Betrieb der PAK/3 mit 40MHz und 50 MHz </b>
<br>
</p>
<p>Achtung:
<br>
</p>
<dl>
<dt><b>1. Neue GALs P2_50RST und P4_50</b></dt><dd>
<br>&nbsp;
<br>- Notwendig ab 40 MHz aufw&auml;rts, ersetzen P2_RST und P4_32
<br>- K&ouml;nnen auch bei 32 oder 36 MHz eingesetzt werden
<br>- Einziger Haken: P4_50 stellt etwas h&ouml;here Anforderungen an
die Zugriffszeit des Hauptspeichers. Mit P4_32 war man bei 120ns auf
der sicheren Seite, mit P4_50 sollten es mindestens 100ns sein.
Schnelle 373er Treiber auf dem Mainboard helfen da auch.
<br>&nbsp;
<dt><b>2. Neues GAL P13_50</b></dt><dd>
<br>&nbsp;
<br>- Notwendig ab 40 MHz aufw&auml;rts, ersetzt P13_32
<br>- Kann auch bei 32 oder 36 MHz eingesetzt werden, ist allerdings
einen Tick langsamer als P13_32
<br>- Gibt den Tag-RAMs 10ns mehr Zeit
<br>- Nur f&uuml;r 68030 (/STERM wird benutzt)
<br>&nbsp;
<dt><b>3 Was macht die Pufferplatine</b></dt><dd>
<br>&nbsp;
<br>- Adressbus voll gepuffert. Entlastet die <a href="080108.htm" target="UDOcon">CPU</a>, die bei 50 MHz auch
so schon warm genug wird.
<br>- Nach Beendigung eines Buszyklus bleiben Adressen, R/W und die
Daten zum Mainboard hin noch einen halben 8MHz-Takt nach /AS_00
g&uuml;ltig, wie beim 68000er. Die PAK alleine hat nach einem solchen
'langsamen' Buszyklus sofort wieder Gas gegeben (und tut es auch
weiterhin, also keine Geschwindigkeitseinbu&szlig;e).
<br>
<br>&nbsp;
<br>- Nach Beendigung eines Lesezyklus vom Mainboard k&ouml;nnen
dessen Treiber bei einem anschlie&szlig;enden 'lokalen' Zyklus auf der
PAK (Cache hit oder FPU) nicht mehr dazwischenfunken.
<br>&nbsp;
<dt><b>3.1 Wann sollte man die Pufferplatine einsetzen</b></dt><dd>
<br>&nbsp;
<br>- Ab 40MHz auf einem 8MHz Mainboard. (Geht manchmal auch ohne,
aber eben nur manchmal).
<br>
<br>&nbsp;
<br>- Wenn es bei mehr als 32MHz ohne Pufferplatine &ouml;fter
FPU-Fehler gibt.
<br>- Wenn es Timingprobleme bei Erweiterungen (z.B. Grafikkarten)
gibt. Hilft nicht immer, aber oft.
<br>- Bei Fast-RAM auf der PAK
<br>&nbsp;
<dt><b>4. Takterzeugung</b></dt><dd>
<br>&nbsp;
<br>Bei 50 MHz sieht das Taktsignal aus dem Quarzoszillator schon
verdammt &quot;rund&quot; aus, wie ein Sinus. Der 33 Ohm Widerstand
tut ein &uuml;briges, aber eine andere Art der Terminierung
l&auml;&szlig;t das geringe Fan-Out des Oszillators nicht zu.
<br>
<br>&nbsp;
<dt><b>4.1 'Kleine' L&ouml;sung</b></dt><dd>
<br>&nbsp;
<br>Die FPU bekommt ihren Takt &uuml;ber einen eigenen 33 Ohm
Widerstand:
<br>
<br>&nbsp;
<br>- Jumper f&uuml;r den FPU-Takt entfernen. Stattdessen auf der
L&ouml;tseite der PAK einen eigenen 33 Ohm Widerstand vom Ausgang des
Oszillators zu Pin2 des Jumpers J10 fliegend einl&ouml;ten.
<br>
<br>&nbsp;
<dt><b>4.2 'Gro&szlig;e' L&ouml;sung</b></dt><dd>
<br>&nbsp;
<br>Pufferung des Taktsignals durch einen 74F02. Dies ist die
sauberste L&ouml;sung, was leider etwas mehr 'Bastelaufwand' bedeutet:
<br>
<br>&nbsp;
<br>St&uuml;ckliste:
<br>
<br>&nbsp;
<br>1x 74F02
<br>1x Widerstand 10 Ohm
<br>1x Widerstand 68 Ohm (m&ouml;glichst SMD)
<br>1x Keram. Kondensator 220 pF (m&ouml;glichst SMD)
<br>
<br>&nbsp;
<br>Bauanleitung:
<br>
<br>&nbsp;
<br>1. Einen 74F02 wie folgt frisieren: Die Pins 2,3,4,5,6 und
11,12,13, dicht am Kunststoffgeh&auml;use abbrechen.
<br>
<br>&nbsp;
<br>2. Diesen 74F02 auf der L&ouml;tseite der PAK direkt unter den
Quarzoszillator setzen, so da&szlig; die Beinchen des 74F02 von der
Platine weg zeigen und Pin1 des 74F02 mit Pin1 des Quarzoszillators
&uuml;bereinstimmt.
<br>
<br>&nbsp;
<br>3. Die vier Eckpins 1,7,8,14 mit den entsprechenden Pins des
Qurzoszillators verl&ouml;ten.
<br>
<br>&nbsp;
<br>4. Mit einem kurzen Drahtst&uuml;ck Pin8 und Pin9 des 74F02
miteinander verbinden.
<br>
<br>&nbsp;
<br>An Pin10 des 74F02 steht somit das gepufferte Oszillatorsignal an.
Jetzt m&uuml;ssen wir noch die Taktleitung dort anschlie&szlig;en und
am Ende terminieren.
<br>
<br>&nbsp;
<br>5. Den Widerstand R47 (33 Ohm) in der Taktleitung ausl&ouml;ten.
<br>
<br>&nbsp;
<br>6. Falls die FPU vorher einen eigenen 33 Ohm Widerstand bekommen
hatte, diesen entfernen und die FPU wieder (wie im Original) parallel
zur <a href="080108.htm" target="UDOcon">CPU</a> anschlie&szlig;en.
<br>
<br>&nbsp;
<br>7. Auf der L&ouml;tseite der PAK einen 10 Ohm Widerstand von dem
L&ouml;tauge des R47, das zur Platinenmitte zeigt, an Pin10 des 74F02
fliegend einl&ouml;ten.
<br>
<br>&nbsp;
<br>8. Vom GAL U1 Pin1 zum GAL U5 Pin12 einen Reihenschaltung aus 68
Ohm / 220 pF einl&ouml;ten. Geht gut mit zwei SMDs, die ein
&quot;Dach&quot; bilden.
<br>
<br>&nbsp;
<br>Fertig!
<br>
<br>&nbsp;
<dt><b>Anmerkung:</b></dt><dd>
<br>&nbsp;
<br>In der neuen Platinenrevision sind der Treiberbaustein (74F00) und
die Terminierung des Taktsignals (68 Ohm / 220 pF) bereits vorgesehen.
Bei 32 MHz ist der ganze Zauber noch nicht notwendig, aber bei 50 MHz
tut man gut daran.
<br>
<br>&nbsp;
<br>Mit aufgesteckter FRAK kommt das Taktsignal von der FRAK und wird
dort bereits gepuffert. Auf der PAK darf dann kein Treiberbaustein
best&uuml;ckt sein! Die Terminierung ist auch zusammen mit der FRAK
von Vorteil.
<br>
<br>&nbsp;
</dl>
<p>
<br>Bilder von Bernd Maedicke
<br>
</p>
<p>
<br>
<br><b> Jumpereinstellung FRAK </b>
<br>
</p>
<p>Aus der Einbauanleitung FRAK30:
<br>
</p>
<p>J1: ohne Funktion
<br>
<br>J2: FASTRAM
<br>gesteckt: FASTRAM aktiviert, 32 Bit Adressraum. Das gepatchte TOS
3.06 erkennt beim Speichertest automatisch, wieviel TT-RAM vorhanden
ist. offen: FASTRAM ausgeschaltet, 24 Bit Adressraum. Verh&egrave;lt
sich wie eine &quot;gew&Uuml;hnliche&quot; PAK ohne FASTRAM.
<br>
<br>J3: Burst-Mode
<br>gesteckt: Burst-Modus eingeschaltet, bringt zus&egrave;tzlich ca.
5-10% Geschwindigkeitssteigerung. Falls die RAMs zu langsam sind, so
gibt es mit dem Burst-Mode Schwierigkeiten. offen: Burst-Modus
ausgeschaltet.
<br>
<br>Standardstellung: J2 und J3 gesteckt.
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de/">Robert Schaffner</a> (<a href="mailto:doit@doitarchive.de">doit@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Mai 2004</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0a.htm" target="UDOcon"><img src="udo_up.gif" alt="Beschleuniger" border=0 width="24" height="24"></a>
<a href="0a09.htm" target="UDOcon"><img src="udo_lf.gif" alt="HBS640xx" border=0 width="24" height="24"></a>
<a href="0a0b.htm" target="UDOcon"><img src="udo_rg.gif" alt="Hypercache" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>

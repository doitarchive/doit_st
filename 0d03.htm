<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.05.2004 -->
<html>
<head>
<title>
DOIT_ST - Tips u. Tricks zur Atari Serie: OMTI Billigl&ouml;sung
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="doit@doitarchive.de">
<link rev=made href="mailto:doit@doitarchive.de" title="E-Mail">
<link rel=home href="doitst1h.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0d.htm" target="UDOcon"><img src="udo_up.gif" alt="Festplatten / Wechselplatten" border=0 width="24" height="24"></a>
<a href="0d0206.htm" target="UDOcon"><img src="udo_lf.gif" alt="IDE Flash Drive" border=0 width="24" height="24"></a>
<a href="0d04.htm" target="UDOcon"><img src="udo_rg.gif" alt="MegaSTe Harddrive" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="OMTI_20Billigl_26ouml_3Bsung">13.3 OMTI Billigl&ouml;sung</a></h1>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p><tt> Die OMTI-Billigl&ouml;sung f&uuml;r den <a href="0305.htm" target="UDOcon">Atari ST</a> </tt>
</p>
<p>
<br>
<br>
</p>
<p>Ohne Handbremse
<br>Atari bootet mit OMTI
<br>
</p>
<p>Mit einer Festplatte und einem OMTI-Kontroller kann man sich viel
Leistung f&uuml;r den Atari erschlie&szlig;en. Und das f&uuml;r wenig
Geld. Doch was kostet ist der Bootvorgang. Nach jedem Reset ist wieder
warten angesagt, bis alle Accessories und Programme aus dem Autoordner
von der langsamen Diskette geladen wurden. Mit ein paar Programmen
kann der Atari sich aber auch alleine den Festplattentreiber von
derselbigen laden. (!n l)
</p>
<p>Das geschilderte Problem d&uuml;rfte eigentlich jedem Benutzer
einer Atari/Festplattenkombination bekannt sein. F&uuml;r einen
einzigen Systemstart am Tag ist die Handbremse in Form einer
Startdiskette kein sonderliches Manko. Die Bombenleger unter den
Assemblerprogrammierern werden aber f&uuml;r jeden der zahllosen
Totalabst&uuml;rze mit einem Diskettenboot nicht unter zwanzig
Sekunden bestraft, was sp&auml;testens ab dem dreizigsten Reset
langsam als nervig empfunden werden d&uuml;rfte.
<br>
</p>
<p>Eine L&ouml;sung f&uuml;r die Atari-Harddisk und &auml;hnliche war
schon vor gut einem halben Jahr in der c't zu finden [1]. F&uuml;r den
OMTI-Kontroller fehlt im TOS jedoch eine geeignete Routine um sich das
Treiberprogramm von selbst aus dem Sumpf, bzw. von der Festplatte zu
ziehen. Da die alte DMABOOT- Routine im ROM-TOS sowieso f&uuml;r die
&quot;Billigl&ouml;sung&quot; [3] nicht mehr ben&ouml;tigt wird, kann
sie problemlos durch eine neue ersetzt werden.
<br>
</p>
<p>Die neue Startbahn ...
<br>
<br>
</p>
<p>Der neue DMABOOT-Lader findet zweckm&auml;&szlig;igerweise sein
neues Zuhause, wo vorher die alte Routine zu finden war. Dies ist in
der deutschen ROM-TOS Version vom 6.2.86 der Bereich von $fc04a8 bis
$fc0575. Es war zwar etwas m&uuml;hsam das Programm in den
sp&auml;rlich vorhandenen Platz hinein zu zw&auml;ngen, doch lassen
sich durch die Benutzung aller Register mit Register- beziehungsweise
indirekter Adressierung etliche Bytes einsparen. Dadurch leidet
nat&uuml;rlich die &Uuml;bersichtlichkeit und Wartbarkeit der
einzelnen Programmteile, da man fast alle Register nicht mehr
ver&auml;ndern darf.
<br>
</p>
<p>Die Routine setzt als erstes den Kontroller zur&uuml;ck und
l&auml;dt dann den Bootsektor in die zweite H&auml;lfte des 1 KByte
gro&szlig;en Diskbuffer des TOS, dessen Adresse in der Systemvariable
_DSKBUFP ($4c6) zu finden ist. Die erste H&auml;lfte des Diskbuffer
sollte &uuml;brigens nicht benutzt werden, da er sp&auml;ter
w&auml;hrend der Initialisierungsphase des Festplattentreibers HDBIOS
[3] belegt wird. Nach dem Ladevorgang wird noch die Pr&uuml;fsumme des
Bootsektors errechnet und bei &Uuml;bereinstimmung mit einer
&quot;magischen Zahl&quot; wird das erste Byte des Bootsektors
angesprungen.
<br>
</p>
<p>Es d&uuml;rfte hoffentlich jedem klar sein, da&szlig; die neue
DMABOOT-Routine ein ROM-Patch ist. Somit ist der Besuch bei dem
hilfsbereiten Bekannten mit dem EPROMmer nat&uuml;rlich mal wieder
unerl&auml;&szlig;lich ! Wie man sich die EPROM-Dateien erstellt
bleibt dem findigen Leser anheimgestellt (Tip: wenn man in [2] sucht,
wird man &uuml;brigens auch f&uuml;ndig).
<br>
</p>
<p>Wenn die ROMs sowieso ge&auml;ndert werden, kann man eigentlich
noch die sechzehn Bytes f&uuml;r das Bitmuster der &quot;Bomben&quot;
&auml;ndern (die Dinger geh&ouml;ren weder auf den Bildschirm, noch
woanders hin). Wie w&auml;r es denn mal mit einem
&quot;Keep-Smiling-Face&quot;- Muster ?
<br>
</p>
<p>... f&uuml;hrt in den Bootsektor
<br>
<br>
</p>
<p>Eigentlich k&ouml;nnte das Ladeprogramm im Bootsektor doch bis auf
die Leseroutine mit dem aus Heft 8/87 &uuml;bereinstimmen, oder ?
Leider hat der OMTI- Kontroller zwei kleine, aber Programmplatz
fressende Unterschiede zum Atari-Kontroller: Erstens m&uuml;ssen die
logischen Sektornummern in physikalische Zylinder-, Kopf- und
Sektornummer umgerechnet werden, was nun nicht allzuviel Platz
ben&ouml;tigt. St&ouml;render ist dagegen, da&szlig; der Kontroller
noch nicht &quot;wei&szlig;&quot; wie gro&szlig; denn die Platte ist
und deshalb vorsichtshalber von nur zwei K&ouml;pfen ausgeht. Ohne
eine Initialisierung ist somit die Festplatte nicht ohne
Einschr&auml;nkung nutzbar. Doch pa&szlig;t eine zus&auml;tzliche
Kontrollerinitialisierung leider nicht mehr in den schon gerammelt
vollen Bootsektor hinein.
<br>
</p>
<p>Somit scheidet die M&ouml;glichkeit den Treiber als ein normales
Programm in eine Partition zu schreiben und von dort laden zu lassen
aus. Reserviert man sich allerdings den ersten (= nullten) Zylinder
von der Festplatte f&uuml;r die Bootprogramme ist das Platzproblem
auch schon gel&ouml;st. Ein Pluspunkt liegt &uuml;brigens in dem schon
vorgestellten Treiber HDBIOS: Er ist frei verschiebbar, wodurch man
sich das Relozieren auch noch schenken kann.
<br>
</p>
<p>BOOTLOAD ist der erw&auml;hnte Bootlader und startet eigentlich
nur den Festplattentreiber. Da ja ein direktes Laden und Starten noch
nicht mit einem Betriebssystemaufruf zu erledigen ist, mu&szlig; dem
TOS die Arbeit des Ladens abgenommen werden. Dazu wird erst eine
Basepage erzeugt, ein Programm (i.A. HDBIOS) ohne den Programmkopf aus
der ersten Spur hinter die Basepage geladen und dann ausgef&uuml;hrt.
Das zu ladende Programm mu&szlig; sich dazu ab dem Sektor eins in der
ersten Spur befinden. Die L&auml;nge des Treiberprogramms in Sektoren
wird &uuml;brigens in BOOTLOAD bei dem Label PRG_LEN angegeben.
Hierbei kann auch eine zu gro&szlig;e L&auml;nge angegeben werden, da
die wirkliche L&auml;nge aus dem Programmkopf entnommen wird.
<br>
</p>
<p>Zum Abschlu&szlig; wird noch Laufwerk c: als Bootlaufwerk
angemeldet. Gegebenenfalls kann aber bei dem Label BOOTDRV eine andere
Laufwerksnummer gegeben werden. M&ouml;chte man f&uuml;r die weiteren
Warmstarts einen Diskboot ausschlie&szlig;en, der generell noch vor
der Routine DMABOOT ausgef&uuml;hrt wird, kann die Systemvariable
_BOOTDEV ($446) auch auf das eigentliche Bootlaufwerk gesetzt werden.
<br>
</p>
<p>In dem Listing ist die betreffende Zeile allerdings
auskommentiert, weswegen nach einem Reset weiterhin versucht wird von
Diskette zu booten. Gerade in der Experimentierphase sollte man sich
diesen Noteinstieg freilassen. So hat man die M&ouml;glichkeit mit
einem gebooteten RAM-TOS und nachgeladenem Festplattentreiber einen
defekten Bootlader doch noch durch ein funktionierendes(!) Programm zu
ersetzen.
<br>
</p>
<p>Ein einfacher Generator
<br>
<br>
</p>
<p>Nachdem man sich schon selbst um die Aufteilung und Erstellung der
Dateien f&uuml;r den EPROM-Brenner k&uuml;mmern mu&szlig; stellt sich
dann auch die bange Frage &quot;Wie bekomme ich denn nun Bootlader und
Festplattentreiber an ihre vorgesehenen Pl&auml;tze ?&quot;. Die
Antwort lautet (nein, diesmal nicht 42 sondern): BOOTGEN.
<br>
</p>
<p>Dies pfiffige Progr&auml;mmchen kann beim Aufruf mit zwei
Parametern versorgt werden: mit &quot;b Dateiname.erw&quot; wird das
angegebene Programm in den Bootsektor geschrieben. Das Bootprogramm
mu&szlig; &uuml;brigens frei verschieblich (PC-relativ) sein und darf
nur das TEXT-Segment enthalten.
<br>
</p>
<p>Der andere Aufruf betrifft, richtig geraten, den
Festplattentreiber. Mit &quot;t dateiname.erw&quot; wird das
gew&uuml;nschte Programm ab Sektor eins in die erste Spur kopiert. Es
darf maximal sechzehn Sektoren (= 8 KByte) lang sein. Die ganz
hastigen Benutzer k&ouml;nnen auch beide Parameter auf einmal angeben
und mit einem Aufruf Bootlader und Treiberprogramm auf der Platte
versenken. Danach darf nat&uuml;rlich keine Partition mehr auf
Zylinder null anfangen.
<br>
</p>
<p>Getreu dem Motto &quot;Was schon geschrieben wurde kann weiterhin
benutzt werden!&quot; ist BOOTGEN.C ebenfalls mit den Programmen CBIND
und HDBIOS aus [3] zu linken.
<br>
</p>
<p>Zum Schlu&szlig; einen Tip f&uuml;r die Softwarebastler: Tauscht
man in den Funktionen RD_SECT und WR_SECT die drei Funktionsaufrufe
durch einen passenden BIOS-Aufruf RWABS (Sektoren lesen/schreiben
von/auf Disk) aus, lassen sich recht einfach auch nette Bootprogramme
auf die Diskette schreiben. Dann werden nat&uuml;rlich auch die ersten
drei Funktionsaufrufe in der main-Funktion zum Initialisieren der
Leseroutinen in HDBIOS nicht mehr ben&ouml;tigt.
<br>
</p>
<p>
<br>!!! Listing 1 (dmaboot.s): Neu gegen alt; ein ROM- Patch der
DMABOOT-Routine bedient den jetzt den OMTI-Kontroller.
<br>
<br>!!! Listing 2 (bootload.s): Dem TOS mu&szlig; beim Laden des
Harddisktreibers kr&auml;ftig auf die Spr&uuml;nge geholfen werden.
<br>
<br>!!! Listing 3 (bootgen.c): Bootlader und Festplattentreiber werden
mit BOOTGEN in einem Startzylinder versteckt.
<br>
</p>
<pre>
               B I O S - D R I V E   T A B L E   F O R   O M T I

               - -     5 5 2 0  / 5 5 2 7  M O D E L S      - -

 ---------------------------------------------------------------------------

                  BIOS# 1002570  / #1002571  10/R10
 ---------------------------------------------------------------------------
        W1  W2  W3  W4     Drive/Model      #Cylinder  #Heads    Write
                                                                 Precomp.
        ................................................................
        1   1   1   1      Maxtor XT1140     918        15         -
        1   1   1   0      CMI 6426          640        4         256
        1   1   0   1      Rodime 352        306        4          -
        1   1   0   1      Microsience HH312 306        4          -
        1   1   0   0      Seagate ST 4026   615        4         300
        1   0   1   1      Cynthia 570       987        7          -
                           Vertex V170                             -
        1   0   1   0      DMA/RICOH         612        2         400
                           Remov. 10Mb                             -
        1   0   0   1      Seagate ST 4038   733        5         300
        1   0   0   0      Seagate ST 213    612        2         256
        0   1   0   0      Miniscribe 3425   612        4         128
        0   1   1   0      Quantum Q540      512        8         256
        0   1   0   1      Seagate ST 4051   977        5         300
        0   1   0   0      CMI 342           612        4         256
                           Seagate ST 255                          -
        0   0   1   1      CDC 9415-36       697        5         256
        0   0   1   0      CMI 3212          612        2         128
                           Miniscr.3012/3212
        0   0   0   1      CMI 6640          640        6         256
                           Tulin 240
        0   0   0   0      CMI 5412          306        4         128
                           Lapine 3522
                           Otari 514
                           Seagate ST 412/ST212
                           Shugart 712
        1   1   1   1      Atasi 3085        1024       8          -
        0   1   1   1      Miniscribe 8438   612        4          -
                           Microscie. HH330
                           Microscie. HH738
        1   0   1   1      Peripheral 357R   615        4          -
        0   0   1   1      Lapine LT 300     616        4          -
        1   1   0   0      Piram V170        987        7          -
        0   1   0   1      Piram V185        1166       7          -
        1   0   0   1      Piram 514         1224       11         -
        0   0   0   1      Piram 519         1224       15         -
        1   1   1   0      Seagate ST251R    820        4          -
        0   1   1   0      Seagate ST277R    820        6          -
        1   0   1   0      Seagate ST4077R   1024       5          -
        0   0   1   0      Seagate ST4144R   1024       9          -
        1   1   0   0      Toshiba MK 53FB   830        5          -
        0   1   0   0      Toshiba MK 54FB   830        7          -
        1   0   0   0      Toshiba MK 56FB   830        10         -
        0   0   0   0      Seagate ST 238R   615        4          -
                           Miniscribe 3438
                           Tandon  364       615        4          -
............................................................................

                          O M T I - E R R O R  C O D E S
 ---------------------------------------------------------------------------
 Error
 Code   ----------------------      Description

 #1701-A       Failed RAM Diagnostic command.This command performs a pattern
               test on the internal controller buffer.

 #1701-B       Failed Controller Internal Diagnosics command. This command
               causes the controller to perform some internal diagnostics
               including ROM checksum and sequencer self test.

 #1701-C       Failed Test Drive Ready command. This command selects the
               logical units and returns a zero status during the status
               state to indicate that the unit is selectet, ready and seek
               or seek/command is complete.In the case of a cartridge unit,
               a zero status also indicates that a cartridge is installed.
               For fixed drives,the controller wait up to 50 seconds for the
               drive to come ready.

 #1701-D       Failed Recalibrate command. The drive is stepped toward the
               outside cylinder until either: (1) track zero is detectet,
               or (2) more steps have been issued than available cylinders
               for the device type.

 #1701-E       Failed Initialize Drive Characteristics command. This command
               sends a parameter list of all characteristics of the drive
               to the controller. There is no access to the drive during
               execution of this command.

 #1701-F       Failed Ready Capacity command. This command returns to the
               host ESDI drive physical parameters as available directly
               from the drive interface.

 ---------------------------------------------------------------------------

           O M T I - C O N T R O L L E R    I N S T A L L A T I O N

                                 M A N U A L

  1. Cabling Requirements: One 34-pin straight through cable. One 20-pin
     straight through cable.
  2. On winchester hard disk: Install drive select jumpers to lowest Drive
     Select DS0 or DS1
  3. On controller: If your drive is listet in the BIOS-Drive Table ,install
     jumpers W1 to W4 accordingly.
  4. Install the 34-pin drive interface cable to the J1 connector and the
     20-pin drive interface cable to the J2 or the J3 connector. Pin 1 is
     on the left side of the connector in both cases.
  5. Install the controller in any available slot, exept the one nearst the
     power supply ,on the motherboard. CAUTION: Power must be off !!
  6. Insert DOS diskette in Drive A: and turn on power
  7. Execute BIOS Low/High-level format routine in BIOS by executing
     DEBUG utility, then entering: g=c800:6
  8. Answer all questions properly. If your Drive is not listed in the BIOS
     drive table answer &quot;N&quot; to &quot;Use defaults (Y/N?) prompt.
     See BIOS Format Routine Instructions flowchart.
  9. Create DOS Partitions by executing FDISK utility.
 10. Initialize the Drive by executing the command: Format C:/S
     (or Format D:)
 11. Your hard disk should now be bootable drive C: (or D:).
 ---------------------------------------------------------------------------

  1989 MRT

</pre>
<p>
<br>
<br>
</p>
<p>Alles &uuml;ber die OMTI-L&ouml;sung ?
<br>Das <a href="11.htm" target="UDOcon">Verbindungskabel</a> zwischen ST und dem OMTI-Adapter
<br>
<br>
</p>
<p>Am besten dient uns hierbei ein 20 poliges Flachbandkabel,das es
in jedem Elektronik-Shop zu kaufen gibt,besser noch man arbeitet in
einer Firma die das als meterware verarbeitet. Ebenfalls in einem
Elektronik-Shop ist der 20 polige Pfostenstecker und der 19 polige
D-Sub <a href="0f0b.htm" target="UDOcon">Stecker</a> zu besorgen,ihn in Schneid-Klemmtechnik zu bekommen
d&uuml;rfte allerdings sehr schwer fallen. Das Kabel sollte nicht
l&auml;nger als ca.50cm werden,da es ansonsten zu St&ouml;rungen
kommen kann, die sp&auml;ter schwer &auml;rger machen. Auf der einen
Seite des Kabels wird der Pfostenstecker so angequetscht das der
farbig markierte Draht auf pin Nr.1 zu liegen kommt. Mit Pin Nr. 1-8
fangen die Datenleitungen des Kabels an,man sollte hier sehr
sorgf&auml;ltig arbeiten. Man steckt dann am besten den Pfostenstecker
auf die fertige Platine des Omti-Adapter's,und zwar so das der Pin
Nr.1 des Flachbandkabels mit Pin Nr.1 des Omti-Adapters
&uuml;bereinstimmt. Dieser Pin ist an dem Pfostenstecker meist mit
einem Pfeil gezeichnet. Dann wird mit einem Ohmmeter Leitung f&uuml;r
Leitung durchprobiert und am anderen ende des Kabels sofort mit dem 19
poligen D-Sub verl&ouml;tet. Es wird somit sichergestellt das keine
verwechselung der Adern auftritt, was dann schnell zu unliebsamen
&Uuml;berraschungen f&uuml;hrt.
<br>
</p>
<pre>
 DMA-Port                                   Omti-Adapter
 --------------------------------------------------------
  1- data 0.................................. 1- D0
  2- data 1.................................. 2- D1
  3- data 2.................................. 3- D2
  4- data 3.................................. 4- D3
  5- data 4.................................. 5- D4
  6- data 5.................................. 6- D5
  7- data 6.................................. 7- D6
  8- data 7.................................. 8- D7
  9- select.................................. 9- CS
 10- IR int..................................10- INT
 11- masse ..................................11/13/15/17- Masse
 12- r&uuml;cksetzen..............................12- Frei
 13- masse ..................................11/13/15/17- Masse
 14- ACK   ..................................14- ACK
 15- masse ..................................11/13/15/17- Masse
 16- CA    ..................................16- CA 1
 17- masse ..................................11/13/15/17- Masse
 18- R/W   ..................................18- R/W
 19- DR    ..................................19- DRQ

</pre>
<p>Man kann auch Abgeschirmtes Rundkabel verwenden,was dann auch
etwas l&auml;nger sein kann,nur besteht dann die schwierigkeit diese
Aderen richtig im Pfostenstecker zu quetschen. Zum Schlu&szlig; kann
man dann das ganze zur Sicherheit noch mal mit einem Ohmmeter
durchmessen,damit hier nicht's anbrennt. Der Adapter ist ja
hoffentlich best&uuml;ckt ?
<br>
<br>
</p>
<p>PS:
<br>Es gibt einige Omti-Adapter-Platinen bei denen versehentlich die
beiden Br&uuml;cken BR1 + BR2 mit Durchkontaktiert wurden. Man bohrt
das am besten mit einem PASSENDEM Bohrer aus und verl&ouml;tet dann
die BR1
<br>Ansonsten sind Fehlfunktionen vorprogrammiert.
<br>
</p>
<p>OMTI-Adapter f&uuml;r <a href="0305.htm" target="UDOcon">Atari ST</a> (8802126dBE,S8802126)
<br>
<br>
</p>
<p>Bitte beachten Sie die folgenden Hinweise, um eine einwandfreie
Funktion der &quot; Billigl&ouml;sung&quot; (c't 2/88 S.126) zu
gew&auml;hrleisten:
<br>
</p>
<p>- der Adapter arbeitet einwandfrei mit den OMTI-Controllern 5510,
5520 (A,B) und 5527, nicht jedoch mit Controllern anderer Typenreihen
oder von anderen Herstellern.
<br>
</p>
<p>- die ver&ouml;ffentliche Schaltung wurde in c't 3/88 korrigiert:
+5V liegen bei IC1 und IC3 an Pin 20, an Pin 10 liegt Masse. Im
Platinenlayout ist diese Korrektur ber&uuml;cksichtigt.
<br>
</p>
<p>- f&uuml;r IC5 mu&szlig; ein 74HCT04 eingesetzt werden (nicht LS
oder andere Typenreihen) ! Es ist empfehlenswert, auch IC3 in HCT zu
best&uuml;cken.
<br>
</p>
<p>- an den Verbindungsstecker X1 des Adapters sind Masse,+5V und
+12V anzuschlie&szlig;en. Der Controller wird dann &uuml;ber die
Slot-Buchse mit Strom versorgt. Strombedarf: ca. 500mA an 5V f&uuml;r
Controller und Adapter, wenige mA an 12V. Die Anforderung an das
<a href="10.htm" target="UDOcon">Netzteil</a> werden also im wesentlichen duch den Bedarf der Festplatte
bestimmt /typisch 1,5 bis 3A Anlaufstrom an 12V, 0,5A bis 1A nach dem
Hochlaufen).
<br>
</p>
<p>- bei einigen Rechnern treten Timing-Probleme an der
DMA-Schnittstelle auf, die sich in Schreib-Lesefehlern
&auml;u&szlig;ern (typisches <a href="030d.htm" target="UDOcon">Symtom</a>: unsinnige Werte f&uuml;r
Zylinderzahl etc. beim Partitionieren). Abhilfevorschlag (aus c't 5/88
): Pins 2 und 3 von IC4 (74LS08) aus der Fassung biegen, Pin 2 des ICs
mit Pin 1 verbinden, die Anschl&uuml;sse 2 und 3 der Fassung
verbinden. Damit wird das Gatter aus der /ACK-Leitung entfernt und die
Signallaufzeit entsprechend verk&uuml;rzt. In einigen F&auml;llen
mu&szlig; dar&uuml;ber hinaus IC4 gegen den schnelleren 74ALS08
ausgetauscht werden (c't 4/88, S.12)
<br>
</p>
<p>- der Adapter darf nicht ohne Stromversorgung an den DMA-Port
angeschlossen sein, sonst funktioniert die Floppy nicht.
<br>
</p>
<p>- verschiedene Parameter, die beim Formatieren gefragt werden,
sind den Spezifikationen der Harddisk zu entnehmen (Anzahl der
Zylinder, evtl. verringerter Schreibstrom, Prekompensation, defekte
Spuren, Parkspur). Wenn verringerter Schreibstrom und / oder
Prekompensation nicht eingestellt werden m&uuml;ssen, ist hier die
Nummer des h&ouml;chsten Zylinders +1 anzugeben. Anzahl der Sektoren:
17 bei MFM-Verfahren (OMTI 5510,5520), 26 bei RLL-Verfahren (5527).
Empfohlener Sektorversatz :2.
<br>
</p>
<p>- auf der Diskette S8802126 befinden sich weitere
Erl&auml;uterungen. Bitte unbedingt lesen.
<br>
</p>
<p>F&uuml;r weitere technische Fragen steht die Hotline der
c't-Redaktion (&uuml;ber CosmoNet-Mailbox oder telefonisch von montags
bis freitags zwischen 13 und 14 <a href="1413.htm" target="UDOcon">Uhr</a>) zur Verf&uuml;gung.
<br>
</p>
<p>Die Alternative zum OMTI-Problem ?
<br>
<br>
</p>
<p>Nachdem es mittlerweile keine OMTI-Controller mehr zu kaufen gibt
mu&szlig; man sich nach einer Alternative umsehen,die genauso billig
und einigerma&szlig;en gut ist.
<br>Gemeint ist als Ersatz f&uuml;r die Typen 5510/5520/5527 der
Seagate- Controller ST11R ,der einem vorschlag aus der c't entspricht.
Nat&uuml;rlich geht das ganze nicht ohne die entsprechenden
&auml;nderungen an der Hard bzw. Software,die wichtigste
&auml;ndererung ist wohl die Zeit- anpassung der Treiberroutine. Der
neue Controller arbeitet auch mit ganz neuen Festplatten zusammen
(niedrigere Drehzahl),um unterscheiden zu k&ouml;nnen welches Laufwerk
angeschlossen ist wird etwas Zeit gebraucht. Auch die
Arbeitsgeschwindigkeit ist etwas geringer ,und selbst die Formatierung
der Platte mu&szlig; mit einem Interleave von 2-4 durchgef&uuml;hrt
werden,da der Controller sonst aus dem Gleichgewicht kommmt. Auf der
Adapterplatine sind einige kleine Modifikationen notwendig.... Das in
der ACK Leitung liegende Oder-Gatter sollte Entfernt werden... (Pin
2+3 &Uuml;berbr&uuml;cken sowie von Pin 3 einen Kondensator mit 22pF
gegen Masse l&ouml;ten) Das Timing der DMA-Handshake Signale mu&szlig;
etwas verz&ouml;gert werden.... dazu werden die 4 noch freien Inverter
des 74HCT04 benutzt. Sie werden alle hintereinander in die DRQ-Leitung
eingeschleift,bei geschickter Ausf&uuml;hrung braucht man nicht mal
die Platine zu zerkratzen. Die Anschlu&szlig;pin's des Chips werden
einfach hochgebogen,soda&szlig; sie nicht mehr in der Fassung stecken
und dann in der gew&uuml;nschten Reihenfolge mit einander Verbunden.
<br>
</p>
<p>Das bei diesen Arbeiten eine gewisse &quot;Sauberkeit&quot;
herrschen sollte d&uuml;rfte eigentlich Selbstverst&auml;ndlich sein
..... Auch das Treiberprogramm unterliegt einigen &Auml;nderungen was
das Timeout in manchen Unterroutinen angeht. Man sollte die
Zeitkonstanten in folgenden Routinen auf mindestens 2 Sec.
verl&auml;ngern. WAIT_REQ / WAIT_DMA / das trifft nat&uuml;rlich auf
das HDBIOS und auf das BOOTLOAD.PRG zu. Man braucht an dieser Stelle
nur die Anweisung hinter dem Label zu ver&auml;ndern in: move.l #
2*200,d1 Dann sind die Zusatzprogramme (Formatier,Partitionier) mit
dem neuen ge&auml;nderten HDBIOS zu Linken. In dem Programm
DISKBOOT/eventuell DMABOOT ist auch eine l&auml;ngere Wartezeit
einzubauen,die den ersten Zugriff etwas verl&auml;ngert. Die Zeile
hinter dem Label WAIT_REQ wird dazu von: moveq #$7f,d1 auf: move.l
#30*200,d1 ver&auml;ndert.
<br>
</p>
<p>Den <a href="190d.htm" target="UDOcon">Schaltplan</a> des Adapters kann ich wieder als .PIC-File
hochladen so da&szlig; man die &Auml;nderungen schnell erkennen
kann.(Bei Nachfrage)
<br>
</p>
<p>Aus einem Brief der eMedia an die OMTI-Adapter Kunden
<br>
<br>
</p>
<p>ACHTUNG Platinenfehler
<br>
</p>
<p>Sehr geehrte Kundin / sehr geehrter Kunde
<br>
</p>
<p>nach unseren Unterlagen haben Sie k&uuml;rzlich die Leerplatine
&quot;OMTI- Adapter f&uuml;r <a href="0305.htm" target="UDOcon">Atari ST</a>&quot;, Best.-Nr.8802126dBE,von
uns bezogen.
<br>
</p>
<p>Wie uns nach Auslieferung bekannt wurde, sind bei einer
Pruduktionscharge dieses Platinentyps durch ein Versehen des
Herstellers die Br&uuml;cken BR1 und BR2 durchkontaktiert worden - ein
Fehler der durch die elektronische Pr&uuml;fung nicht endeckt werden
konnte.
<br>
</p>
<p>Wir m&ouml;chten Sie vorsorglich informieren und bitten, die an
Sie gelieferte Platine zu &uuml;berpr&uuml;fen.Die falschen
Durchkontaktierungen lassen sich leicht durch Aufbohren
(Bohrerdurchmesser 1.3mm) entfernen. Bitte beachten Sie, da&szlig; die
Br&uuml;cke BR2 laut <a href="190d.htm" target="UDOcon">Schaltplan</a> geschlossen werden mu&szlig;. Wenn Sie
diese Korrektur nicht selbst vornehmen m&ouml;chten,k&ouml;nnen Sie
selbstverst&auml;ndlich die fehlerhafte Platine zum Umtausch
zur&uuml;cksenden.
<br>
</p>
<p>Wir bedauern das Versehen und bitten um Ihr Verst&auml;ndniss.
<br>
</p>
<div align=center>Mit der Datenschleuder durch die Galaxis
<br>oder ein Reisef&uuml;hrer durch den Festplattenbetrieb
</div>
<div align=center>
<br>
<br>
</div>
<div align=center>( f&uuml;r Marvin, die langen N&auml;chte und
<br>meine st&auml;ndig volle Teekanne )
</div>
<p>Eine ernstgemeinte (aber nicht immer ernste) Anleitung zu den
Programmen f&uuml;r die Benutzung von OMTI-Festplattenkontrollern an
<a href="0305.htm" target="UDOcon">Atari ST</a> Rechnern und noch einige Tips.
<br>
</p>
<p>Auch wenn es mit dem Nach-/Aufbau oder der Inbetriebnahme nicht
auf Anhieb klappt, immer daran denken [9]:
<br>
</p>
<div align=center>KEINE PANIK !
<br>
</div>
<pre>
                    Inhalt                        Seite


      Die Hardware                                2
      Die Software                                2 - 4
      Das Booten                                  4
      Der Bootsektor                              5
      Partitionen                                 6
      Liste defekter Sektoren                     6
      Geschwindigkeitsvergleich                   7
      Das Nachwort                                7
      Die <a href="0208.htm" target="UDOcon">Literatur</a>                               8









      Die Hard- &amp; Software                                             2

</pre>
<div align=center>Wettstreit zweier Adapter
</div>
<p>
<br>
</p>
<p>Nun buhlen zwei Adapter um die Gunst eines Festplattenkontrollers,
damit preiswerter Festplattenbetrieb am Atari m&ouml;glich wird. Als
erstes gibt es die Variante am DMA-Port [2] und dann noch den
PC/ECB-Busadapter [5]. Beide M&ouml;glichkeiten haben ihre Vor- und
Nachteile einerseits ist die DMA-Variante schneller als der PC-
Adapter, andererseits wird aber der DMA-Port vollst&auml;ndig benutzt,
womit Laserdrucker und &auml;hnliches 'Ged&ouml;ns' keinen Zutritt
haben (wenn man daf&uuml;r das Geld hat, kann man f&uuml;r eine
'richtige' Festplatte auch etwas tiefer in die Tasche greifen).
<br>
<br>
</p>
<div align=center>Nicht immer nur OMTI
</div>
<p>
<br>
</p>
<p>Da das Thema 'harte Sachen' angeschnitten ist noch folgende
Hinweise:
<br>Auch andere Firmen bauen Kontroller f&uuml;r Festplatten, wobei
Western Digital der klassische Hersteller ist. Im Prinzip kann (!!!!)
man auch Gl&uuml;ck mit den guten St&uuml;cken aus jennem Hause haben,
wobei das Augenmerk auf die Befehlskompatibilit&auml;t zum OMTI [1]
(diesmal nicht IBM) gerichtet werden sollte. Zwei verschiedene
Testmuster haben sich bei mir geweigert defekte Spuren auf der Platte
selbst&auml;ndig zu verwalten. Desweiteren wollten sie auch nicht am
DMA-Port mitspielen, was vermutlich an dem etwas zu schnellen Timing
des Atari liegt. Deshalb: Ich wei&szlig; nicht was Ihnen der nette
Herr empfiehlt; mein Tip zielt auf den OMTI 5520a. Dazu wurde halt
manches ma&szlig;ge- schneidert.
<br>
</p>
<p>
<br>
</p>
<div align=center>Etwas &uuml;ber die weiche Ware
</div>
<p>
<br>
</p>
<pre>&auml;
      Auf der Disk sind (hoffentlich) folgende Programme und Dateien:

      Name         | Sinn                            | Adapter (Dma/Pc)
      -------------+---------------------------------+-----------------
          park.s   | Parkprogramm (Quelltext)        |     D/P
        hdpart.c   | Partitionierer (Quelltext)      |     D/P
      hdformat.c   | Formatierer (Quelltext)         |     D/P
                   |                                 |
        hdbios.s   | Treiber (Quelltext)             |     D
         cbind.s   | Bindeprogramm f&uuml;r C-Programme   |     D
       hdbiosc.prg | Treiber f&uuml;r Laufwerk c: - f:    |     D
       hdbiosf.prg |    &quot;     &quot;     &quot;     f: - i:    |     D
       hdbiosh.prg |    &quot;     &quot;     &quot;     h: - k:    |     D
        hdpart.tos | Partitionierer                  |     D
      hdformat.tos | Formatierer                     |     D
          park.tos | Parkprogramm                    |     D
                   |                                 |
      ifhdbios.s   | Treiber (Quelltext)             |     P
       ifcbind.s   | Bindeprogramm f&uuml;r C-Programme   |     P
       ifbiosc.prg | Treiber f&uuml;r Laufwerk c: - f:    |     P
       ifbiosf.prg |    &quot;     &quot;     &quot;     f: - i:    |     P
       ifbiosh.prg |    &quot;     &quot;     &quot;     h: - k:    |     P
      ifhdpart.tos | Partitionierer                  |     P
      ifhdform.tos | Formatierer                     |     P
        ifpark.tos | Parkprogramm                    |     P


</pre>
<p>
<br>Die Software 3
<br>
</p>
<p>
<br>Der Umfang der Software ist gegen&uuml;ber der aus [2] etwas
angewachsen. Die Assemblertexte sind, bis auf das Parkprogramm, vom
Adapter abh&auml;ngig und deshalb sind alle Programme quasi doppelt
vorhanden. Die Dateinamen der Programme f&uuml;r den PC/ECB-Busadapter
gl&auml;nzen (sofern m&ouml;glich) durch ein vorangestelltes 'if' (wie
InterFace). Im folgenden verwende ich nur noch die 'Original-
dateinamen', wobei auch immer die Programme f&uuml;r das PC-Interface
gemeint sind.
<br>
</p>
<p>&Uuml;brigens: Die Programme sind von mir mit (der etwas
ungew&ouml;hnlichen Kombination von) Lattice C V3.03.04, as68 und
link68 entwickelt und &uuml;bersetzt worden.
<br>
<br>
</p>
<pre>                           Alles der Reihe nach
</pre>
<p>
<br>
</p>
<p>Jeder sollte eigentlich den Sinn und Zweck der ganzen Programme
noch aus dem Artikel 'Billigl&ouml;sung' [2] kennen. Trotzdem folgt
jetzt eine kleine Beschreibung, die vor allem die Erg&auml;nzungen
beinhaltet.
<br>
</p>
<pre>
      hdbios
          Ist  der  eigentliche Festplattentreiber und  wird  aus  einem
          AUTO-Ordner oder vom <a href="0903.htm" target="UDOcon">Desktop</a> aus gestartet.
          &Uuml;bersetzen:  Ist u.a.  ein selbst&auml;ndiges Programm; der Objekt-
          code wird aber noch &ouml;fters ben&ouml;tigt.

          Neu: + Gibt nun eine Startmeldung aus
               + Kann  jetzt  Platten  mit bis zu  16  K&ouml;pfen  und  1024
                 Zylindern verkraften (Vorher max. 32 Mbyte)
               + Dadurch ge&auml;nderter Aufruf der Lese- &amp; Schreibroutinen
               + Andere  Laufwerksnummern  k&ouml;nnen  durch  um&auml;ndern   des
                 Labels drv_num im Definitionsteil erreicht werden.
               - Das Label 'dev' im Modulkopf von der Funktion  bpb_calc
                 bekommt den richtigen Wert (20 statt 8) zugewiesen.
                 (Merke: In Programmen die relativ zum Stack adressieren
                 NICHT nachtr&auml;glich noch einige Register retten !!!)

      hdformat
          Hiermit  wird die Platte vor dem ersten Gebrauch geb&uuml;gelt  und
          in Tortenst&uuml;ckchen unterteilt.
          &Uuml;bersetzen:  Es  mu&szlig; noch der Objektcode von cbind und  hdbios
          f&uuml;r den entsprechenden Adapter dazu gebunden werden.

          Neu: + Es wird zus&auml;tzlich nach einer Parkspur gefragt, die von
                 dem  PARKprogramm  angefahren wird.  Manche  Hersteller
                 reservieren  hierf&uuml;r extra eine Spur.  Ansonsten sollte
                 der  h&ouml;chste  Zylinder  oder  einer  dahinter   benutzt
                 werden.

      hdpart
          Mit  dem  Partitionierer wird die Platte in  mehrere  logische
          Laufwerke  unterteilt.  Er  hat  die  augenf&auml;lligste  &Auml;nderung
          erlitten (Ich geb's ja zu: man mu&szlig;te die Zahleneingaben selbst
          aus- und umrechnen,  damit der Rechenknecht sie schluckt.  Die
          Listings waren aber eh schon sehr lang.).
          &Uuml;bersetzen:  Es  mu&szlig; noch der Objektcode von cbind und  hdbios
          f&uuml;r den entsprechenden Adapter dazu gebunden werden.

          Neu: + Es werden Zylindernummern in dezimal ein- &amp; ausgegeben
               + Statt L&auml;nge der Partition wird der Endzylinder erfragt
               + Nun gibt es auch eine Plausibilit&auml;ts&uuml;berpr&uuml;fung bei den
                 Eingaben der Zylindernummern





      Die Software und das Booten                                      4



      cbind
          ist  das Bindeglied zwischen den  hardwareunabh&auml;ngigen  C-Pro-
          grammen und den Unterprogrammen aus hdbios.  Ferner enth&auml;lt es
          die hardwarenahen Teile des Formatierers.
          &Uuml;bersetzen: nur der Objektcode wird gebraucht; s.o.

          Neu: + die  Schreib-  &amp; Lesefunktionen  (h_read,h_write)  sind
                 nat&uuml;rlich an den ge&auml;nderten Aufruf von hd_read/hd_write
                 in hdbios angepa&szlig;t.
               + Ein  Timeoutfall beim Formatieren wird  abgefangen  und
                 gibt die M&ouml;glichkeit zum Fortsetzen oder Abbrechen. Nur
                 mit  (A)bbrechen wird das Formatierprogramm (NICHT  der
                 Formatiervorgang im Kontroller) beendet.

          Der  Chef-Koch  empfiehlt:  sollte ein Timeout  auftreten  nur
          KEINE PANIK,  bevor man ewig &gt;F&lt; wie Fortsetzung dr&uuml;ckt,  kann
          auch ruhig gewartet werden bis der Kontroller endg&uuml;ltig fertig
          ist.  Es  spielt  halt keine Rolle,  ob sich der Rechner  beim
          Abfragen des Kontrollers oder der Tastatur langweilt.


      park
          Hierbei handelt es sich nicht um ein Programm nur f&uuml;r  Garten-
          bauingenieure.  Es  positioniert eigentlich nur die K&ouml;pfe  auf
          einer  geeigneten Parkspur,  damit beim Abschalten der  Platte
          keine  wichtigen Datenbits plattgehauen werden.  Der Wert  des
          Parkzylinders  stammt  aus  dem Bootsektor (s.u.)  wo  er  vom
          Formatierer   hineingeschrieben  wurde  (s.o.).   Dort  sollte
          &uuml;brigens  schon ein sinnvoller Wert gew&auml;hlt werden  und  nicht
          nach   dem  Motto   je-weiter-von-den-Datenzylindern-entfernt-
          desto-besser.  Somit  wird  sich  den K&ouml;pfen  dann  auch  kein
          Hindernis  in den Weg stellen,  falls sie zu ihren Ruhepl&auml;tzen
          eilen.  Einige neuere Laufwerke brauchen solch eine Extrawurst
          allerdings  nicht  mehr;  sie heben die K&ouml;pfe ab oder  hecheln
          noch mit letzter Kraft auf eine Sonderspur [0].
          &Uuml;bersetzen: Hierzu geh&ouml;rt ebenfalls der Objektcode von hdbios

          Neu: + Alles

          (Die Vermutung trifft zu:  Das Programm ist in der Tat am Ende
          eines langen Tages entstanden ! )

</pre>
<p>
<br>
</p>
<div align=center>M&ouml;glichkeiten von der Platte zu booten
</div>
<p>
<br>
</p>
<p>Jetzt kommen keine konkreten Programme, sondern nur Tips wie man
ohne Diskette direkt von der Platte booten k&ouml;nnte. Leider
unterst&uuml;tzt die dma_boot-Routine des ROM nicht den OMTI-
Kontroller am DMA-Port (w&auml;re auch merkw&uuml;rdig), weswegen man
auf eigene L&ouml;sungen angewiesen ist.
<br>
</p>
<p>Die einfachste Methode ist die Benutzung einer selbststartenden
ROM-Disk (f&uuml;r die Benutzer des PC-Adapters eigentlich
naheliegend) oder durch Ver&auml;ndern der dma_boot-Routine. Von einer
(EP)ROM-Disk k&ouml;nnte man den gesamten Treiber aus einem
AUTO-Ordner starten lassen [3,4,5]. Mit einem ge&auml;nderten dma_boot
sollte dagegen nur der Bootsektor gelesen werden, wie es ohnehin
vorgesehen ist. Danach kann an ein kleines Programm im Bootsektor
(Adresse $01e - $1b7) die Kontrolle &uuml;bergeben werden, das den
Treiber aus den ersten Datensektoren liest [6]. Hierbei kann dann der
Joker ausgespielt werden: Das Treiberprogramm ist
unzuf&auml;lligerweise frei verschiebbar.
<br>
</p>
<p>
<br>
</p>
<p>Der Bootsektor 5
<br>
<br>
</p>
<div align=center>Das Geheimnis des Bootsektors
</div>
<p>
<br>
</p>
<p>Die Informationen zu dem Bootsektor auf der Festplatte waren
bislang etwas sp&auml;rlich. Nun soll der Vorhang gel&uuml;ftet
werden.
<br>
</p>
<p>Der erste logische Sektor (Zylinder 0, Kopf 0, Sektor 0) auf der
Festplatte enth&auml;lt den Bootsektor, den das Treiberprogramm
f&uuml;r sich auswertet. Dort stehen, wie in dem Bootsektor einer
Diskette, wichtige Informationen &uuml;ber den physikalischen Aufbau
der Platte. Im gro&szlig;en und ganzen sind die beiden Bootsektoren
gleich, jedoch sind in dem von der Festplatte noch
Partitionsinformationen enthalten.
<br>Aber auch die Partitionen (0-3) erhalten, falls sie &uuml;berhaupt
angelegt wurden, einen Bootsektor mit den entsprechenden Ein-
tragungen. F&auml;ngt eine Partition auf Zylinder 0 an, erh&auml;lt
sie den Bootsektor der die Informationen &uuml;ber die Platte und die
Partitionen beinhaltet (s.o.).
<br>
<br>
</p>
<pre>
      Doch nun direkt in's Volle: (Adressangaben in hex !)

       von | bis | K&uuml;rzel |      Bedeutung                    | Anmerk.
      -----+-----+--------+-----------------------------------+--------
         0 |   1 | branch | Sprung zum Bootprg.               | +
         2 |   7 | filler | f&uuml;r evtl. Kennung                 |
         8 |   a | serial | Seriennr.                         |
         b |   c | bps    | #Bytes/Sektore (l,h)              | +
         d |   d | spc    | #Sektoren/Cluster                 | +
         e |   f | res    | #reservierte Sektoren (l,h)       | +
        10 |  10 | nfats  | #FATs                             | +
        11 |  12 | ndirs  | #Directoryeintr&auml;ge (l,h)          | +
        13 |  14 | nsects | #Sektoren des Mediums (l,h)       | +
        15 |  15 | media  | Media-descriptor (MS/IBM Pfusch !)| +
        16 |  17 | spf    | #Sektoren/FAT (l,h)               | +
        18 |  19 | spt    | #Sektoren/Spur (l,h)              | +
        1a |  1b | nsides | #Seiten auf Medium (l,h) !!       | +
        1c |  1d | nhid   | #versteckter Sektoren (l,h)       |
        1e | 1b7 | code   | Platz f&uuml;r Bootprg.                | ?
       1b8 | 1b9 | parkcyl| #Parkzylinder                     | * &amp;
       1ba | 1c1 | hdparam| Plattenparameter f&uuml;r Kontroller   | * &amp;
       1c2 | 1c5 | hd_siz | #Gesamtzahl der Sektoren          | *
       1c6 | 1f5 | p*_info| Partitionsinfo                    | * ?
       1f6 | 1f9 | bsl_st | Startsektor der BadSectorList     | * ?
       1fa | 1fd | bsl_cnt| Anzahl der defekten Sektoren      | * ?
       1fe | 1ff | chk_sum| Pr&uuml;fsumme                         |


      Ein '(l,h)' bedeutet einen Eintrag mit vertauschten Low- und High-
      Byte,  wie es die von MS/IBM benutzten intel(ligenten) Prozessoren
      halt machen. Das ist das Tribut der (ziemlich) gleichen <a href="0b04.htm" target="UDOcon">Disketten</a>-
      formate.

      *) Zus&auml;tzliche Informationen im Bootsektor der Partition 0 (erster
         logischer Sektor auf der ganzen Platte).  So ist's auch auf der
         Atari-Platte gemacht.

      &amp;) Diese  Eintragungen sind auf meinem Mist gewachsen,  und d&uuml;rfen
         nicht  ver&auml;ndert  werden!  Ansonsten k&ouml;nnen Treiber  und  Park-
         programm Mist bauen!

      ?) N&auml;here Erl&auml;uterungen sind noch woanders zu finden.

      +) Hier   wird  definitif  etwas  hineingeschrieben.   Die   nicht
         benutzten Eintr&auml;ge werden mit Nullen initialisiert.

</pre>
<p>
<br>
</p>
<p>Partitionen, Liste defekter Sektoren 6
<br>
<br>
</p>
<div align=center>Das Wesen der Partitionseintr&auml;ge
</div>
<p>
<br>
</p>
<p>Durch die Partitionen l&auml;&szlig;t sich eine Festplatte in
mehrere kleine logische Laufwerke unterteilen. Dies ist n&ouml;tig
falls die Platte mehr Sektoren bereitstellt, als mit einer 16-Bit Zahl
&uuml;berhaupt adressiert werden k&ouml;nnen, da die BIOS-Funktion
rwabs() nur mit einem 16-Bit-Argument f&uuml;r die logische
Sektornummer arbeitet. Somit k&ouml;nnte eine Partition bis zu 32
MByte gro&szlig; sein, wobei zu beachten ist, da&szlig; das TOS
(Ausnahme: <a href="080104.htm" target="UDOcon">Blitter</a>-TOS) wegen einem Fehler im DOS nur 16 MByte
verwalten kann [7]. Falls man andere Betriebssysteme (mit einem
selbstgeschriebenen Treiberprogramm) benutzen m&ouml;chte, kann man
sich hierf&uuml;r eigene Partitionen auf derselben Platte anlegen, die
von dem Treiber 'hdbios' nicht erkannt werden.
<br>
</p>
<pre>
      Nachfolgend der Aufbau des Eintrags p*_info aus dem Bootsektor:

       von  | bis  | K&uuml;rzel |      Bedeutung
      ------+------+--------+-----------------------------------------
       $1c6 | $1d1 | p0_info| Eintrag f&uuml;r Partition 0
       $1d2 | $1dd | p1_info|    &quot;     &quot;      &quot;     1
       $1de | $1e9 | p2_info|    &quot;     &quot;      &quot;     2
       $1ea | $1f5 | p3_info|    &quot;     &quot;      &quot;     3


      Struktur eines Partitionseintrags:

       Offset | K&uuml;rzel |      Bedeutung
      --------+--------+----------------------------------------------
         + 0  | p*_flg | Partitions-Flag
         + 1  | p*_id  | Partitions-Identifikation
         + 4  | p*_st  | #erster physkalischer Sektor der Partition
         + 8  | p*_siz | #logische Sektoren der Partition

      Anmerkung:
      Das  Partitionsflag hat folgende Bedeutung:  $0 -&gt; Partition nicht
      vorhanden;  &lt;&gt;  $0  -&gt;  Partition vorhanden mit $80  -&gt;  Partition
      bootf&auml;hig (das soll nicht hei&szlig;en,  da&szlig; das ROM mit dem OMTI booten
      kann!!).
      Die Partitionsidentifikation enth&auml;lt drei (ASCII-) Bytes,  die das
      Treiberprogramm  auswertet um eventuell zwischen  Partitionen  von
      verschiedenen Betriebssystemen unterscheiden zu k&ouml;nnen.

</pre>
<p>
<br>
</p>
<div align=center>Die Liste mit den defekten Sektoren
</div>
<p>
<br>
</p>
<p>Gibt es nicht !
<br>
</p>
<p>Die Eintr&auml;ge bsl_st und bsl_cnt im Bootsektor sind eigetlich
daf&uuml;r vorgesehen um die (unvermeidlichen ?) fehlerhaften Spuren
auf der Platte zu verwalten. bsl_st (BadSectorList STart) gibt den
Sektor an, wo die Tabelle der defekten Sektoren zu finden ist. Diese
Tabelle enth&auml;lt soviel Eintr&auml;ge, wie in bsl_cnt
(BadSectorList CouNT) vermerkt sind. Da der OMTI-Kontroller defekte
Spuren selbst verwalten kann (immer helle, immer schnelle; gelle !),
habe ich keine gesonderte Behand- lung im Treiberprogramm vorgesehen.
<br>
</p>
<p>
<br>
</p>
<p>Geschwindigkeitsvergleich und das Nachwort 7
<br>
</p>
<div align=center>Von DMA, Busadapter und Geschwindigkeit
</div>
<p>
<br>
</p>
<p>Nun werde ich noch kurz die Performance (ein Hoch auf's Neu-
deutsch) von DMA-Port und PC-Adaptern abhandeln. Es d&uuml;rfte jedem
klar sein, da&szlig; der Busadapter bei einem Geschwin-
digkeitsvergleich mit dem DMA-Port etwas im Schatten steht. Bei der
&Uuml;bertragung von gro&szlig;en Datenmengen (Kopieren) macht sich
ein langsamer Zugriff auf den Kontroller nat&uuml;rlich negativ
bemerkbar, wobei Positioniervorg&auml;nge nat&uuml;rlich bei beiden
Varianten gleich schnell sind. Leider sind fast alle Programme bei den
Zugriffen auf die Massenspeicher &auml;u&szlig;erst ineffektiv. Sie
lesen und schreiben nur kleine Bl&ouml;cke (z.T. nur Byteweise !)
statt den &uuml;ppigen Speicher auszunutzen. Auch werden teilweise
etliche Zwischendateien gleichzeitig ge&ouml;ffnet (as68 hat
beispielsweise neben der Ein- und Ausgabedatei noch mindestens sechs
weitere Zwischendateien im Zugriff !!), wobei durch die gemixten
Zugriffe viel positioniert werden mu&szlig;. Hier kann die
PC-Adaptervariante dann auch einiges wieder wettmachen. Eine
Leistungssteigerung von 30% bis 35% erh&auml;lt sie aber durch einen
anderen 'Trick': wenn man sicher ist, da&szlig; die <a href="080108.htm" target="UDOcon">CPU</a> dem Kontroller
bei der &Uuml;bertragung einzelner Sektoren nicht davon l&auml;uft,
kann man auf eine Abfrage des Statusports im Kontroller verzichten.
Dies ist der Grund f&uuml;r einige auskommentierte Befehle in den
Funktionen hd_read() und hd_write() in dem Quelltext von ifhdbios. Wer
lieber auf Nummer sicher gehen m&ouml;chte, sollte die Befehle wieder
hineinnehmen und sich mit langsameren Zugriffen herumschlagen.
Datenaussetzer konnte ich deswegen jedoch w&auml;hrend der
mehrt&auml;gigen Testphase nicht verbuchen.
<br>
<br>
<br>
</p>
<div align=center>Nachwort
</div>
<p>
<br>
</p>
<p>Auch wenn diese Anleitung nicht alles oder manches garnicht zu dem
gro&szlig;en Thema &uuml;ber Festplatten behandelt hat, hoffe ich
da&szlig; doch etwas brauchbares dabei war. Zu den unterschlagenen
Informationen nur soviel: ich wu&szlig;te nicht da&szlig; etwas fehlt
und jemand genau daran interessiert ist. So wird es aber jedem
ergehen, der eine Dokumentation macht. F&uuml;r ihn w&uuml;rde der
Satz 'Alles klar!' ausreichen ! Eine Einf&uuml;hrung &uuml;ber die
Programmierung von DMA-Chip und PC/ECB- Busadapter habe ich aber
absichtlich nicht mit aufgenommen. Notfalls kann man sich ja einige
interessante Sachen aus den Listings herauspicken.
<br>
</p>
<p>Allen stolzen Besitzern einer (hoffentlich funktionierenden)
'Datenschleuder' kann ich noch die Lekt&uuml;re von [8,7] empfehlen,
damit der Rechner nicht durch zuviele Ordner ins Schleudern
ger&auml;t. Funktioniert dennoch etwas nicht, sollte man nicht
vergessen da&szlig; eine Kiste mit flitzenden Elektronen nun wirklich
nicht das wichtigste in der Welt ist.
<br>
</p>
<p>Achim Freimann
<br>Hannover, den 23. J&auml;nner 1988(!nl)
</p>
<p>
<br>
</p>
<p>P.S.:
<br>F&uuml;r unvorherbare Ereignisse und Sch&auml;den, die durch den
<br>unsachgem&auml;&szlig;en Gebrauch von diesem Text oder der
Programm-
<br>kommentare ausgeht &uuml;bernehme ich keine Haftung.
<br>
</p>
<p>
<br>
</p>
<p>Die <a href="0208.htm" target="UDOcon">Literatur</a> 8
<br>
</p>
<div align=center>Etwas zum Schm&ouml;kern
</div>
<p>
<br>
</p>
<p>0.) Das (nicht) mitgelieferte Handbuch zur Festplatte
<br>1.) Scientific Micro Systems, Inc: IBM PC/XT Controller Series
Reference Manual
<br>2.) Achim Freimann/Hans Werschner: Billigl&ouml;sung (c't 2/88
S.126)
<br>3.) Manfred Friese: Solid-State-Floppy mit Vollautomatik (c't
12/86 S.124)
<br>4.) Klaus Koerth: EPROM-Bank f&uuml;r den Atarti 520 ST (c't 1/86
S.58)
<br>5.) Eberhard Meyer: Hochzeit zu dritt (c't 7/87 S.138)
<br>6.) Jens Abraham: Blitzstart (c't 8/87 S.138)
<br>7.) Alfons Kramer: GEMDOS - viel besser als sein Ruf (c't 1/88
S.90)
<br>8.) Martin Schulz: Abenteuerreise durchs TOS (c't 9/87 S.122)
<br>9.) Douglas Adams: Per Anhalter durch die Galaxis (Trilogie in
<br>vier B&auml;nden, erschienen bei Zweitausendeins) (nl)
</p>
<p>
<br>Erg&auml;nzung und Nachtrag 19.4.88
<br>
</p>
<p>Die neue Version von Festplattentreiber und Hilfsprogrammen
f&uuml;r das Universalinterface bietet nun die Unterst&uuml;tzung des
Romport- expanders (RPEX). Aber auch der alleinige Betrieb des
Interfaces ist noch m&ouml;glich, da es nicht auf die
Umschaltsequenzen f&uuml;r den Expander reagiert. Bei dem Betrieb mit
dem Expander MU&szlig; sich das Interface im ersten Steckplatz auf der
ersten Platine befinden (ist also der Slot mit der Nummer Null !). Bei
Zugriffen auf die Festplatte wird als erstes die Nummer des momentan
aktiven Steckplatzes ermittelt und danach das Interface
ausgew&auml;hlt. Zum Abschlu&szlig; wird dann wieder der alte
Steckplatz selektiert. Mit dieser Methode kann neben einer 'dummen'
Steck- karte (z.B. Kopierschutzmodul) das Universalinterface mit Fest-
platte betrieben werden. Solange immer nur ein Programm den Romport
adressiert, kann es zu keinen Konflikten kommen (das TOS ist ja
(leider) nicht Multitasking f&auml;hig). Sollten Sie jedoch
beispielsweise mittels einer (System-)Interruptroutine st&auml;ndig
eine (serielle, parallele, o.&auml;. ) Schnittstelle abfragen, sind
nat&uuml;rlich Synchronisationsmechanismen vorzusehen.
<br>
</p>
<p>Aber auch die DMA-Variante hat eine kleine Revision &uuml;ber sich
ergehen lassen m&uuml;ssen. Der Treiber HDBIOS kann nun auch die
seltenen &Uuml;bertragungen auf ungerade Adressen durchf&uuml;hren.
Somit k&ouml;nnen die Fans von WORDPLUS auch das (&uuml;brigens recht
schlappe) Korrekturprogramm benutzen.
<br>
</p>
<p>Die (Telefon-) Erfahrung hat mittlerweile gezeigt, da&szlig;
einige Anwender Probleme mit dem Formatierer haben. Die Frage
&quot;Sektoren pro Spur&quot; scheint dabei eine gr&ouml;&szlig;ere
H&uuml;rde zu sein. Deshalb hier noch ein Tip: MFM-Kontroller (z.B.:
OMTI 5520a) benutzen in der Regel 17 Sektoren pro Spur, RLL-Kontroller
(z.B.: OMTI 5527a) hingegen 26 !
<br>Die anderen Fragen lassen sich nicht pauschal beantworten, aber
eigentlich sollte bei jeder Festplatte zumindest ein Testprotokoll
dabei sein, das auch die 'technischen Daten' der Platte verr&auml;t.
Ist dies nicht der Fall mu&szlig; man wohl 'den Dealer kontaktieren'
um an die notwendigen Informationen heranzukommen. Ist der dazu nicht
in der Lage handelt es sich bei ihm wohl mehr um einen Dealer im
negativen deutschen Sinne als um einen seri&ouml;sen <a href="1907.htm" target="UDOcon">H&auml;ndler</a>.
<br>
</p>
<p>Auch wenn das gesamte Projekt Festplatte ziemlich nachbausicher
ist, haben Sie ruhig etwas Geduld bei (den vermutlich selbst ver-
ursachten) Fehlern und greifen Sie deshalb nicht sofort zum
Telefonh&ouml;rer. Testen Sie lieber noch einmal die Platine, Kabel,
Steckbr&uuml;cken, Spannungsversorgung usw.
<br>
</p>
<p>Die Kombination von sehr utopischen Ger&auml;ten (ESDI-Kontroller
von ABC mit 350 MByte Platte von XYZ) sollten Sie besser nur
ausprobieren, wenn Sie sich mit der Materie auskennen und eigene
&Auml;nderungen vornehmen k&ouml;nnen (oder eine R&uuml;ckgabegarantie
auch f&uuml;r evtl. defekte Ger&auml;te haben). Wenn Sie nicht so
virtuos mit Hard-, Software und (unvollst&auml;ndigen) englischen
Handb&uuml;chern umgehen k&ouml;nnen, sollten Sie doch besser zu
bew&auml;hrten Kombinationen greifen (OMTI 5520a mit Segate ST225, ist
gut und preiswert!).
<br>
</p>
<p>
<br>
</p>
<p>Achim Freimann
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de/">Robert Schaffner</a> (<a href="mailto:doit@doitarchive.de">doit@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Mai 2004</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0d.htm" target="UDOcon"><img src="udo_up.gif" alt="Festplatten / Wechselplatten" border=0 width="24" height="24"></a>
<a href="0d0206.htm" target="UDOcon"><img src="udo_lf.gif" alt="IDE Flash Drive" border=0 width="24" height="24"></a>
<a href="0d04.htm" target="UDOcon"><img src="udo_rg.gif" alt="MegaSTe Harddrive" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>

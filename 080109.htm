<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.05.2004 -->
<html>
<head>
<title>
DOIT_ST - Tips u. Tricks zur Atari Serie: Soundchip
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="doit@doitarchive.de">
<link rev=made href="mailto:doit@doitarchive.de" title="E-Mail">
<link rel=home href="doitst1h.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0801.htm" target="UDOcon"><img src="udo_up.gif" alt="Pin ST Serie" border=0 width="24" height="24"></a>
<a href="080108.htm" target="UDOcon"><img src="udo_lf.gif" alt="CPU" border=0 width="24" height="24"></a>
<a href="08010a.htm" target="UDOcon"><img src="udo_rg.gif" alt="ACIA" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="Soundchip">8.1.9 Soundchip</a></h1>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p><tt> Atari YM2149 Soundchip </tt>
<br>
<br>
</p>
<p><img src="image/deutsch.gif" border=0 width="35" height="22"></p><br>
<p><img src="image/english.gif" border=0 width="35" height="22"></p><br>
<div align=center><b> ST Serie PSG Soundchip YM 2149 / AY-3-9810 40 Pin DIL</b>
</div>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<pre>

 Pin          Signal       Typ      Beschreibung
 ____________________________________________________________________________

 1            Vss          Input    GND, Masse
 2,5          NC                    Not used
 3            ANL B        Output   Analog B Kanal
 4            ANL C        Output     &quot;    C  &quot;
 6-13         IOB7-IOB0    I/O      Port B I/O 7-0
 14-21        IOA7-IOA0    I/O      Port A I/O 7-0
 22           CLK          Input    2 Mhz Takt / Clock
 23           RESET-
 24           A9-
 25           A8
 26           TEST2
 27           BDIR
 28,29        BC2,BC1
 30-37        DA7-DA0      I/O      Digital I/O 7-0
 38           ANL A        I/O      Analog A Kanal
 39           TEST1
 40           Vcc          Input    +5 Volt Versorgungsspannung

 _____________________________________________________________________________

</pre>
<p>
<br>
<br>
</p>
<p align=center><img src="image/ym2149.gif" border=0 width="175" height="320"></p><br>
<div align=center><tt> Abbildung 1 - Atari Soundchip </tt>
<br>
</div>
<p>
<br>
<br>
</p>
<p>Custom Chips (c) Atari Corp.
<br>Technical Data: ST ServiceGuides
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> Yamaha YM2149 </b>
<br>
</p>
<p>Software-Controlled Sound Generator (SSG)
<br>
</p>
<p><b> Overview </b>
<br>
</p>
<p>The SSG (Software-Controlled Sound Generator) is an NMOS-LSI
device designed to be capable of music generation. It only requires
the microprocessor or microcomputer (<a href="080108.htm" target="UDOcon">CPU</a>) to initialize its register
array, thus reducing the load on the <a href="080108.htm" target="UDOcon">CPU</a>. Music generation is carried
out by the three sequence square wave generator, noise generator, and
envelope generator according to the set parameters. This allows for
the generation of music, special effects, warnings, and various other
types of sounds.
<br>
</p>
<p>
<br>
</p>
<p><b> Features </b>
<br>
</p>
<p>* 5V single power supply
<br>
</p>
<p>* Easy connection to 8 bit or 16 bit <a href="080108.htm" target="UDOcon">CPU</a>
<br>
</p>
<p>* Simple connection to external system through 2 sequence 8 bit
I/O port
<br>
</p>
<p>* Wide voicing range of 8 octaves
<br>
</p>
<p>* Smooth attenuation by 5 bit envelope generator
<br>
</p>
<p>* Built-in 5 bit D/A convertor
<br>
</p>
<p>* Input of double frequency clock can be handled by built-in clock
frequency divider
<br>
</p>
<p>* TTL compatible level
<br>
</p>
<p>* Low power consumption (typical 125mW)
<br>
</p>
<p>* 40 pin plastic DIL package
<br>
</p>
<p>* Pin compatible with AY-3-8910 manufactured by GI
<br>
</p>
<p>
<br>
<br>
</p>
<p><b> Pin Layout </b>
<br>
</p>
<p>
<br>
</p>
<pre>
        Vss(GND) 1          40 Vcc(+5V)
             N.C 2          39 Test1
Analog Channel B 3          38 Analog Channel C
Analog Channel A 4          37 DA0
             N.C 5          36 DA1
            IOB7 6          35 DA2
            IOB6 7          34 DA3
            IOB5 8          33 DA4
            IOB4 9          32 DA5
           IOB3 10          31 DA6
           IOB2 11          30 DA7
           IOB1 12          29 BC1
           IOB0 13          28 BC2
           IOA7 14          27 BDIR
           IOA6 15          26 SEL
           IOA5 16          25 A8
           IOA4 17          24 A9
           IOA3 18          23 RESET
           IOA2 19          22 CLOCK
           IOA1 20          21 IOA0

</pre>
<p>
<br>
<br>
</p>
<p><b> Block diagram </b>
<br>
<br>
</p>
<pre>


  A9 A8     BDIR BC2 BC1          DA7~DA0
   o o        o   o   o             |
   | |        |   |   |             |
   | |        |   |   |             |
   | |   --- Bus Control ---o  Bidirectional      -----o I/O Port A &lt;=&gt; IOA7~IOA0
   | |   |    Decoder    o---     buffer          |
   | |   |                          o             |
   | |   |                          |             |
   | |   o                          o             |
   Register Addr --o Address --o Register o-------|
      Latch          Decoder      Array           -----o I/O Port B &lt;=&gt; IOB7~IOB0
                                    o
                                    |
       --------------------------------------
       |          |     |     |             |
       o          o     |     o             o
     Noise      Music   |  Envelope       Level         Frequency
   Generator  Generator |  Generator --o Control o-----  divider  ---o CLOCK
       |          |     |                   |   master      |
       |          o     |                   |    clock      |
       -------o Mixer o--                   |               ---------o SEL
                  |                         |
                  |                         |
                  o                         |
           D/A Convertor o------------------
             |    |    |
             |    |    |
            Analog Channel
             o    o    o
             A    B    C

</pre>
<p>
<br>
<br>
</p>
<p><b> Description of pins </b>
<br>
</p>
<dl>
<dt><b>1. DA7 &nbsp; DA0</b></dt><dd> This is an 8 bit bidirectional data bus which is used for moving
data and addresses between the SSG and <a href="080108.htm" target="UDOcon">CPU</a>. In the read and write
modes, DA7 &nbsp; DA0 corresponds to B7 &nbsp; B0 of the register array. In the
address mode, DA3 &nbsp; DA0 is used for the register address, and DA7 &nbsp;
DA4 is used together with A9 and A8 for the upper address.
<br>&nbsp;
<dt><b>2. A8 and A9</b></dt><dd> These are the upper address input pins. A8 has pullup resistance
while A9 has pulldown resistance. When the voltage level at A8 while
the level at A9 and DA7 &nbsp; DA4 is low, the address mode is selected
allowing for the fetching of a register address. Connect A8 and A9 to
+5V and ground respectively when not in use.
<br>&nbsp;
<dt><b>3. RESET</b></dt><dd> Reset is effective when the voltage level is low, and the
contents of all registers in the array are reset to '0'. This pin has
pullup resistance.
<br>&nbsp;
<dt><b>4. CLOCK</b></dt><dd> Supplies the master clock to the sound generator and envelope
generator. This is equipped with a 1/2 frequency divider which allows
for the use of a frequency which is 1/2 of the input clock, as the
master clock.
<br>&nbsp;
<dt><b>5. SEL</b></dt><dd> When SEL is driven to the high level, the input clock is taken as
the master clock. When the voltage level of SEL is low, the input
clock is divided by 2 to obtain the master clock. This pin has pullup
resistance, allowing for full pin compatibility with the AY-3-8910
manufactured by AI, when this pin is not connected to anything.
<br>&nbsp;
<dt><b>6. BDIR, BC1 and BC2</b></dt><dd> Controls the external bus (DA7 &nbsp; DA0) and internal bus of the
SSG. The following four modes can be set by the bus control decoder.
The bus control is redundant, control is possible even when BC5 is
connected to +5V.
<br>BDIR BC2 BC1 Mode
<br>0 0 0 Inactive
<br>0 0 1 Address
<br>0 1 0 Inactive
<br>0 1 1 Read
<br>1 0 0 Address
<br>1 0 1 Inactive
<br>1 1 0 Write
<br>1 1 1 Address
<br>
<br>Inactive mode DA7 &nbsp; DA0 has high impedance.
<br>
<br>&nbsp;
<br>Address mode DA7 &nbsp; DA0 set to input mode, and address is fetched
from register array.
<br>Write mode DA7 &nbsp; DA0 set to input mode, and data is written to
register currently being addressed.
<br>Read mode DA7 &nbsp; DA0 set to output mode, and contents of register
currently being addressed are output.
<br>
<br>&nbsp;
<dt><b>7. ANALOG CHANNEL A,B,C</b></dt><dd> Each of the three channels is equipped with a D/A convertor which
converts the calculated digital values to analog signals for output.
<br>&nbsp;
<dt><b>8. IOA7 &nbsp; IOA0, IOB7 &nbsp; IOB0</b></dt><dd> These are two 8 bit I/O ports. These ports allow the SSG to be
placed between an external system and the <a href="080108.htm" target="UDOcon">CPU</a> for the transfer of
data. These pins have pullup resistance.
<br>&nbsp;
<dt><b>9. TEST1</b></dt><dd> Output pin for testing the device. Do not connect to anything.
<br>&nbsp;
<dt><b>10. Vcc</b></dt><dd> +5V power pin.
<br>&nbsp;
<dt><b>11. Vss</b></dt><dd> Ground pin.
<br>&nbsp;
</dl>
<p>
<br>
<br>
</p>
<p><b> Description of funtions </b>
<br>
</p>
<p>All functions of the SSG are controlled by the 16 internal
registers. The <a href="080108.htm" target="UDOcon">CPU</a> need only write data to the internal registers of
the SSG. The SSG itself generates the sound. Sound is generated by the
following blocks:
<br>
</p>
<p>Music generator
<br>Square waves having a different frequency are generated for each
channel (A,B and C)
<br>
</p>
<p>Noise generator
<br>Pseudo-random waveforms are generated (variable frequency)
<br>Mixer Music and noise output are mixed for the three channels (A,B
and C)
<br>
</p>
<p>Level control
<br>Constant level or variable level is given for each of the three
channels (A,B and C). Constant levels are controlled by the <a href="080108.htm" target="UDOcon">CPU</a>, and
variable levels by the envelope generator.
<br>
</p>
<p>Envelope generator
<br>Generates various types of attenuation (single burst attenuated
and repeated attenuation)
<br>
</p>
<p>D/A convertor
<br>Sound is output on each of the three channels (A,B and C) at the
level determined by the level control. The <a href="080108.htm" target="UDOcon">CPU</a> can read the contents
of the internal registers with no effect on sound.
<br>
<br>
</p>
<pre>
    Register Array

     A9  A8 DA7 DA6 DA5 DA4 DA3 DA2 DA1 DA0
     0   1   0   0   0   0   0   0   0   0
     0   1   0   0   0   0   1   1   1   1
    \______________________/\_____________/
         Upper addresses    Lower addresses
          (chip select)    (register select)

</pre>
<p>
<br>
</p>
<p>Of the ten bit address, the lower addresses DA3 &nbsp; DA0 are used to
select the 16 internal registers(register array). The upper addresses
are used for chip selection. A9 and A8 is programmed to 01 while DA7
through DA4 are set to 0000. When the upper addresses match this
program in the address mode, a register address (lower four bits DA3
through DA0) is fetched from the register address latch. When the
value set is in the upper addresses is different from the program
value, the bidirectional bus formed from DA7 through DA0 is driven to
high impedance. A register address which has been fetched is retained
until the next address is fetched, and is not affected by the read,
write, or inactive mode.
<br>
<br>
</p>
<p><b> Register Array </b>
<br>
</p>
<p>
<br>
</p>
<pre>
                            B7....B0
R0 Frequency of Channel A   00000000   8 bit fine tone adjustment
R1                          ----0000   4 bit rough tone adjustment
R2 Frequency of Channel B   00000000   8 bit fine tone adjustment
R3                          ----0000   4 bit rough tone adjustment
R4 Frequency of Channel C   00000000   8 bit fine tone adjustment
R5                          ----0000   4 bit rough tone adjustment
R6 Frequency of Noise       ---00000   5 bit noise frequency
R7 I/O port and mixer       iinnnttt   i-I/O, n-Noise, t-Tone
   settings                 bacbacba
R8 Level of channel A       ---mllll   m-Mode, l-Level
R9 Level of channel B       ---mllll   m-Mode, l-Level
RA Level of channel C       ---mllll   m-Mode, l-Level
RB Frequency of envelope    00000000   8 bit fine adjustment
RC                          00000000   8 bit rough adjustment
RD Shape of envelope        ----cath   c-Cont, a-Att, t-Alt, h-Hold
RE Data of I/O port A       00000000   8 bit data
RF Data of I/O port B       00000000   8 bit data

</pre>
<p>
<br>
</p>
<p>(1)
<br>Setting of music frequency (controlled by registers R0 &nbsp; R5)
<br>The frequencies of the square wave generated by the music
generators for the three channels (A,B and C) are controlled by
registers R0 through R5. R0 and R1 control channel A, R2 and R3 are
used for channel B, and R4 and R5 control channel C. The oscillation
frequency fT is obtained in the following manner from the value of the
register TP(decimal).
<br>
<br>
</p>
<pre>
       fT = fMaster
            -------
             16TP

</pre>
<p>
<br>
</p>
<p>fMaster is the frequency of the master clock (this is the input
click frequency when SEL is high, and 1/2 of this frequency when low).
<br>
<br>
</p>
<pre>
    Rough tone adjustment                 Fine tone adjustment
          register           Channel           register
             R1                 A                 R0
             R3                 B                 R2
             R5                 C                 R4

    B7 B6 B5 B4 B3 B2 B1 B0           B7 B6 B5 B4 B3 B2 B1 B0
    \---------/|            \       /
     Not used  |              \   /
               |                |
               TP11 TP10 TP9 TP8 TP7 TP6 TP5 TP4 TP3 TP2 TP1 TP0
                12 bit oscillation frequency setting value (TP)

</pre>
<p>
<br>
</p>
<p>(2)
<br>Setting of noise generator (controlled by register R6) The noise
frequency fN is obtained from the register value NP(decimal) in the
following manner.
</p>
<p>!(!nl)
</p>
<pre>
       fN = fMaster        (fMaster if the frequency of the master clock)
            -------
             16NP

  Noise frequency register R6
    B7 B6 B5 B4 B3 B2 B1 B0
    \------/|               \
    Not used|                \
            |                 |
            NP4 NP3 NP2 NP1 NP0
     5 bit noise frequency setting value (NP)

</pre>
<p>
<br>
</p>
<p>(3)
<br>Settings of mixer and I/O ports (controlled by register R7) The
mixer is used to combine music and noise components. The combination
is determined by bits B5 &nbsp; B0 of register R7. Sound is output when a
'0' is written to the register. Thus, when both the noise and tone are
'0', the output is combined by the mixer. When the noise is '0' and
the tone is '1', only the noise signal is output. When the noise is
'1' and the tone is '0', music (square wave) is output. Nothing is
output when both the noise and tone are '1'. Selection of input/output
for the I/O ports is determined by bits B7 and B6 of register R7.
Input is selected when '0' is written to the register bits.
<br>
</p>
<p>
<br>
</p>
<pre>
  I/O port and mixer setting register R7
        B7 B6 B5 B4 B3 B2 B1 B0
      /     /|        |\        \
    /     /  |        |  \        \
     I/O       Noise        Tone
    B   A     C   B   A    C   B   A

(Input is selected for I/O port when '0', and noise or tone can be output when '0')

</pre>
<p>
<br>
</p>
<p>(4)
<br>Level control (controlled by R8 &nbsp; RA) The audio level output from
the D/A convertors for the three channels (A,B and C) is adjusted by
registers R8, R9 and RA.
</p>
<p>
<br>
</p>
<pre>
    Level setting registers  Channel
             R8                 A
             R9                 B
             RA                 C

        B7 B6 B5 B4 B3 B2 B1 B0
        \------/|  |\          \
        Not used|  |  \          \
                |  |    \          \
                 M        L3 L2 L1 L0
                Mode   4 bit level selection
</pre>
<p>
<br>
</p>
<p>Mode M selects whether the level is fixed (when M=0) or variable
(M=1). When M=0, level is determined from one of 16 by level selection
signals L3,L2,L1 and L0 which compromise the lower four bits. When
M=1, the level is determined by the 5 bit output of E4,E3,E2,E1 and E0
of the envelope generator of the SSG. (This level is variable as E4 &nbsp;
E0 change over time)
<br>
<br>
</p>
<p>(5)
<br>Setting of envelope frequency (controlled by R8 and RC) Thus, the
envelope repetition frequency fE is obtained as follows from the
envelope setting period value EP (decimal):
<br>
<br>
</p>
<pre>
       fE = fMaster        (fMaster if the frequency of the master clock)
            -------
             256EP

Envelope rough adjustment register RC  Envelope fine adjustment register RB
        B7 B6 B5 B4 B3 B2 B1 B0           B7 B6 B5 B4 B3 B2 B1 B0
      /                         \       /                         \
    /                             \   /                             \
  /                                 |                                \
  EP15 EP14 EP13 EP12 EP11 EP10 EP9 EP8 EP7 EP6 EP5 EP4 EP3 EP2 EP1 EP0
                16 bit envelope period setting value (EP)

</pre>
<p>
<br>
</p>
<p>The period of the actual frequency fEA used for the envelope
generated is 1/32 of the envelope repetition period (1/fE).
</p>
<p>
<br>
</p>
<p>(6)
<br>Envelope shape control (controlled by RD) The envelope generator
counts the envelope clock fEA 32 times for each envelope pattern
cycle. The envelope level is determined by the 5 bit output (E4 &nbsp; E0)
of the counter. The shape of the envelope is created by increasing,
decreasing, stopping, or repeating this counter. The shape is
controlled by bits B3 &nbsp; B0 of the register RD.
<br>
</p>
<p>
<br>
</p>
<pre>
  Envelope shape control register RD
        B7 B6 B5 B4 B3 B2 B1 B0
        \----------/ |  |  |  |
          Not used   |  |  |  --- Hold
                     |  |  ------ Alt
                     |  --------- Att
                     ------------ Cont
                Envelope shape control signals

</pre>
<p>
<br>
</p>
<p>The envelope can take the shapes shown below according to
combinations of the CONT, ATT, ALT and HOLD signals.
<br>
</p>
<pre>
           B3  B2  B1   B0
          CONT ATT ALT HOLD
            0   0   x   x  \
                            \---------------------

            0   1   x   x   /|
                           / |--------------------

            1   0   0   0  \ |\ |\ |\ |\ |\ |\ |\
                            \| \| \| \| \| \| \| \

            1   0   0   1  \
                            \---------------------

            1   0   1   0  \  /\  /\  /\  /\  /\  /
                            \/  \/  \/  \/  \/  \/

            1   0   1   1  \ |--------------------
                            \|

            1   1   0   0   /| /| /| /| /| /| /| /
                           / |/ |/ |/ |/ |/ |/ |/

            1   1   0   1   /---------------------
                           /

            1   1   1   0   /\  /\  /\  /\  /\  /\
                           /  \/  \/  \/  \/  \/  \

            1   1   1   1   /|
                           / |--------------------

</pre>
<p>NOTE - The writing to register RD will reset the envelope
frequency clock
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de/">Robert Schaffner</a> (<a href="mailto:doit@doitarchive.de">doit@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Mai 2004</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0801.htm" target="UDOcon"><img src="udo_up.gif" alt="Pin ST Serie" border=0 width="24" height="24"></a>
<a href="080108.htm" target="UDOcon"><img src="udo_lf.gif" alt="CPU" border=0 width="24" height="24"></a>
<a href="08010a.htm" target="UDOcon"><img src="udo_rg.gif" alt="ACIA" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>

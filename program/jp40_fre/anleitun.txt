                       Junior Prommer              der Prommer fªr alle ATARI-ST Rechner 1. EinleitungWir dªrfen Sie zum Kauf des Junior Prommers beglªckwªnschen.  Mit dem Junior Prommer besitzen Sie ein Programmiersystem, mit dem es mäglich ist,  Daten bzw.  Programme aus Speicher-Chips oder  auch von Diskette einzulesen,  diese ggf.  im integrierten Monitor  zu manipulieren  und  wieder  auf  Diskette  zu  speichern  oder  in programmierbare Speicher-Chips (z.B.  EPROMs)  einzubrennen.  Die vielf³ltigen Mäglichkeiten,  die Ihnen dabei geboten werden, sind erst  durch die vollst³ndig menªgesteuerte Software  kinderleicht realisierbar geworden.Selbstverst³ndlich wird der Junior Prommer vollst³ndig durch  die Software  gesteuert,  d.h.  man braucht sich nicht um die  unter-schiedlichen  Programmierspannungen bzw.  Chip-Typen zu  kªmmern. Alle g³ngigen Speicher-Chips (EPROM,  EEPROM oder CMOS-RAM)  sind in der Software berªcksichtigt. Denkbar ist sogar das Programmie-ren von sogenannten Single-Chip-Rechnern,  da der Junior  Prommer samt  Schaltbild und Source-Code der Ansteuer-Routinen  ausgelie-fert wird.  Die Hardware wird in Industrie-Qualit³t gefertigt und ist  so  universell  ausgelegt,  daõ  bei  der  Einfªhrung  neuer wichtiger Speicher-Chips nur ein Update der Software (gegen einen geringen  Kostenbeitrag)  bestellt werden muõ.  Ferner  kann  die Hardware  an vielen anderen Rechner betrieben werden,  die  einen Centronics-Port zur Verfªgung stellen (z.B.  dem Amiga von Commo-dore).Aufgrund  des Erfahrungsschatzes beim Bau von  Programmierger³ten an  den  verschiedensten  Rechnern  haben  die  Entwickler   alle abdeckbaren Fehler eleminiert. Jedoch gibt es Unzul³nglichkeiten, die  nie  oder  nur mit einem unzumutbar  hohen  technischen  und mechanischen Aufwand zu beseitigen sind und das w³ren folgende:- Keinerlei Beachtung der Kerbe (Pin Nr. 1 der Chips) des zu      bearbeitenden EPROMs.- Falsches Einsetzen der Bausteine, besonders bei denjenigen,   die weniger als 28 Anschluõbeine haben.- Menschliche Fehleingaben diesbezªglich Typ und somit auch der   Programmierspannung.Lassen Sie sich trotzalledem von diesen Dingen auch als  Einstei-ger  nicht  abhalten,  sondern  machen Sie  sich  diese  modernen Speicherbausteine zu Ihren Untertanen,  denn es ist  nachweislich leichter,  als Sie es sich vielleicht vorstellen.  Doch lesen Sie zuvor diese Anleitung!Wir wªnschen Ihnen bei der Arbeit mit dem Junior Prommer viel Erfolg!1.2. RechtslageAlle Rechte am Junior Prommer (Hard- und Software) liegen bei:MAXON Computer GmbHIndustriestraõe 26D-6236 EschbornDie Verwendung des Junior Prommers zu gewerblichen Zwecken bedarf der  schriftlichen Genehmigung durch die 'MERLIN' Computer  GmbH. Hierzu gehärt insbesondere die Reproduktion der  Hardware,  Soft-ware und dieser Anleitung in irgendeiner Form.1.3. HaftungFªr   die  einwandfreie Funktion des Junior Prommers  sind   alle Anstrengungen unternommen worden.  Es werden nur Bauteile  bester Qualit³t verwendet.  Jedes Fertigger³t wird genauen  Testroutinen unterzogen,  um eine einwandfreie Funktion des Junior Prommers zu gew³hrleisten. Sollte das Ger³t trotzdem nicht einwandfrei arbei-ten,  so wenden Sie sich bitte umgehend an die 'MERLIN'  Computer GmbH.Fªr  Sch³den,  die  am Junior Prommer oder am Rechner  durch  un-sachgem³õen Gebrauch entstehen,  lehnen wir jegliche Haftung  ab. Generell  wird  keine  Haftung fªr  Sch³den  an  den  verwendeten Speicher-Chips (EPROMs, EEPROMs, ROMs etc.) ªbernommen.1.4. LieferumfangFertigger³t:                     Teilesatz:- Junior Prommer (Hardware)      Leerplatine Junior Prommer  Platine vollst³ndig bestªckt     und geprªft anschluõfertig  in Geh³use montiertFerner sind enthalten beim Fertigger³t und Teilesatz:- Junior Prommer (Software)  3,5 Zoll Diskette mit folgenden Programmen: * JPROMMER PRG   das eigentliche Treiberprogramm * JPROMMER RSC   Resourcefile dazu * INSTALL  TOS   RAM-Disk (Erstellen einer EPROM-Bank) * SAVE     PRG   verwandelt Programme in eine fªr EPROMs                   verst³ndliche Form um (ATARI ROM-Port) * SAVE     RSC   Resourcefile dazu * ANLEITUN TXT   Diese Anleitung im ASCII-Format- Junior Prommer Anleitungs-Handbuch Bitte prªfen Sie, ob alle aufgefªhrten Artikel enthalten sind.2. InbetriebnahmeSchalten Sie bitte zuerst Ihren ATARI ST aus! Stecken Sie nun den Junior  Prommer  mit  dem 25-poligen Stecker  in  den  parallelen Druckerport  und  anschlieõend  das  einadrige  Kabel  (+5  Volt) entweder  in  den  Mausport  (Port 2) oder  noch  besser  in  den Joystickport  (Port 1).  Bei einigen Ger³ten ist nur eine  Buchse fªr externe Spannungsversorgung vorgesehen.  In diesem Fall  ver-wenden  Sie  bitte ein seperates Netzteil mit +5  Volt  Spannung. Achtung: Beim Anschlieõen des Junior Prommers darf kein Speicher-Chip (z.B.  EPROM) im Programmiersockel sitzen!  Jetzt kännen Sie Ihren Rechner einschalten.2.1. Das richtige Einsetzen der EPROMsAuf  der Rªckseite der Platine (Geh³useoberseite)  befindet  sich der  28-polige  Nullkraftsockel  zum  Aufnehmen   der   Speicher-Chips.  Setzen Sie grunds³tzlich erst dann einen Speicher-Chip in den  Sockel ein,  wenn die Treibersoftware gestartet  worden  ist (siehe Kap.3)! Beim  Einsetzen  der  Chips (EPROMs, ROMs ...) ist unbedingt darauf zu achten, daõ die Kerbe der Chips (manchmal ist es auch nur ein kleiner Punkt) immer zum Geh³userand zeigt,  d.h. die Kerbe muõ sich auf der Seite befinden,  an der sich auch  der kleine  Hebel zum Festklemmen der Chips befindet.  Hat  ein  Chip weniger als 28 Anschluõbeine,  wie z.B.  EPROMs des Typs 2716 und 2732,  die  nur 24 Pins besitzen,  so sind diese immer so in  den Sockel  einzusetzen,  daõ  sie zur gegenªberliegenden  Seite  des Hebels bªndig sitzen.  Zum Einsetzen der Chips ist der Sockel mit dem  kleinen  Hebel,  der ªbrigens immer Pin  Nr.1  markiert,  zu äffnen.  Nach  dem  richtigen einsetzen des Chips ist  der  Hebel wieder zu schlieõen; dadurch sitzt der Chip fest im Sockel.2.1.1. Die LeuchtdiodeAuf  der  Junior Prommer-Platine befindet sich eine  Leuchtdiode. Leuchtet  diese,  so  darf  der  Sockelzustand  nicht   ver³ndert werden,  da in diesem Fall auf den Speicherchip zugegriffen wird. Speicher-Chips  nur  einsetzen bzw.  entnehmen solange  die  rote Leuchtdiode (LED) nicht leuchtet.3. Die SoftwareFertigen Sie sich zuallererst eine Sicherheitskopie der mitgelie-ferten  Treibersoftware  an.  Diese  ist  nicht  kopiergeschªtzt! Arbeiten Sie mäglichst nur mit der Sicherheitskopie der Programm-diskette  zum  Junior  Prommer und  starten  das  Treiberprogramm "JPROMMER PRG" mittels Doppelklick.  Nach kurzer Zeit meldet sich Ihr ATARI ST wieder, und das sieht dann so aus:Am  oberen  Rand  des Bildschirms befindet  sich  die  sogenannte Menªleiste.  Fahren Sie eines der sieben Menªs an (Desk, File ... Extras),  so "rollt" ein Fenster herunter,  in dem weitere  Menª-punkte durch Anklicken anw³hlbar sind.  Diese Menªs werden  daher auch Drop-Down-Menªs genannt.  Die einzelnen Drop-Down-Menªs wer-den sp³ter ausfªhrlich besprochen.3.1. Der eingebaute MonitorIn der Mitte des Bildschirms ist ein groões GEM-Fenster zu sehen, welches dem Ausgabebildschirm des eingebauten Hex/ASCII  Monitors entspricht.  Am  oberen  Fensterrand ist  eine  Informationszeile eingeblendet, die Ihnen ªber den momentan eingestellten EPROM-Typ n³here Informationen gibt. So wird der Typ und dessen Speicherka-pazit³t  st³ndig angezeigt.  Ferner gibt diese  Informationszeile Auskunft  ªber die Anzahl der Anschluõbeine und die  Programmier-spannung sowie ªber den aktuellen Status (ok,  lesen, programmie-ren...).Unterhalb dieser Informationszeile erhalten Sie Informationen zum Puffer. In diesem Puffer-Speicher wird der Inhalt eines Speicher-Chips  in  hexadezimaler und rechts davon im  ASCII-Format  ange-zeigt.   Auõerdem  wird  die  Adresse,  der  Offset  des  Puffers (Startpunkt  des Pufferspeichers) und eventuelle  Fehlermeldungen (Status) ausgegeben.   Der integrierte Monitor erlaubt es  Ihnen, Únderungen des Speicherinhaltes direkt einzugeben.  - Dem absolu-ten Computer-Neuling sei an dieser Stelle gesagt,  daõ Únderungen in den Daten eines EPROMs etc. nicht jedermanns Sache ist, da ein wenig Programmiererfahrung vorausgesetzt wird -.Ein 16 * 16 groões Feld zeigt die Daten des EPROMs in hexadezima-ler Schreibweise an. Rechts davon befindet sich ein ebenso groões Feld (16 * 16),  welches Texte im ASCII-Code sichtbar  macht.  Um Únderungen  vorzunehmen,  plazieren Sie den Cursor mit  der  Maus oder  den Cursortasten (Pfeil-Tasten) auf die  Adresse,  die  Sie ³ndern  wollen  und ªberschreiben einfach den  vorhandenen  Wert. Ebenso lassen sich Texte oder ³hnliches auf der rechten Seite des Fensters (punktiertes Feld) direkt eingeben.  Diese Texte  werden sofort in den ASCII-Code,  d.h.  in hexadezimale Zahlen, umgewan-delt.  ûbrigens erfolgen alle Angaben,  so auch die Adressen ganz links im Fenster,  in der bei Computer gebr³uchlichen hexadezima-len Schreibweise. Ganz rechts befindet sich ein Balken, der durch zwei Pfeile (nach oben bzw. unten) begrenzt wird. Durch Anklicken der  Pfeile  oder des Balkens l³õt sich der  Inhalt  des  Puffers (entspricht  dem Inhalt des Speicher-Chips)  bequem  durchsuchen. Das weiõe Viereck entspricht dabei immer dem angezeigten  Puffer- (Speicher-)  bereich.  Die graue Fl³che ist der nicht  angezeigte Speicherbereich  hinter bzw.  vor dem sichtbaren  Bereich.  Durch Verschieben des Vierecks nach oben oder unten (mit der Maus) kann man  sehr  schnell  jeden Bereich  des  zur  Verfªgung  stehenden Speichers einsehen.  Diese Funktion sollte Ihnen von gewähnlichen GEM-Fenstern bekannt sein (z.B.  Inhaltsverzeichnis einer Floppy-station). 3.2. Die Drop-Down-MenªsWir  wollen Ihnen nun anhand der schon oben erw³hnten  Drop-Down-Menªs  von links nach rechts alle Funktionen des Junior  Prommers erkl³ren. Die Drop-Down-Menªs "fallen" herunter, wenn das betref-fende Menªwort mit dem Mauszeiger berªhrt wird.  Alle Menªpunkte, die  mit  folgendem Zeichen "  " und  einem  Buchstaben  dahinter versehen  sind,  lassen sich auch durch Drªcken  der  'Alternate' Taste und dem entsprechenden Buchstaben direkt ªber die  Tastatur anw³hlen. 3.2.1. DeskDieses   Menª   ermäglicht  den  Zugriff  auf   die   im   System installierten Programme mit der Extension .ACC (Accessories), wie z.B. das Kontrollfeld, die Druckeranpassung usw..3.2.2. FileHiermit sind folgende Diskettenoperationen mäglich:- Laden:          Eine  Datei  kann von  der  Diskette,  RAM-Disk                             oder   einer  Festplatte  (Harddisk)  in    den                             Speicher (Puffer) geladen werden.- Anh³ngen:       Eine  Datei wird von der Diskette  gelesen  und                             an die bereits geladene Datei angeh³ngt.                   - Speichern:      Speichert  den Pufferinhalt auf  Diskette  etc.                             ab.- Speichern als:  Speichert  den  Pufferinhalt  unter  einem  von                             Ihnen einzugebenen Namen auf Diskette ab.                   - Läschen:        Dateien oder Programme kännen von der  Diskette                             geläscht werden.  Vorsicht,  dieser Befehl kann                             nicht rªckg³ngig gemacht werden!          - Ende:           Durch  Anklicken dieses Menªpunktes kännen  Sie                             das Programm verlassen.          3.2.3. TypHier kann unter den verschiedenen EPROM-,  ROM- und  EEPROM-Typen der  gewªnschte  bzw.  verwendete  Typ  ausgew³hlt  werden.  Dies geschieht durch Anklicken mit der Maus.  Der ausgew³hlte Typ wird durch einen Haken vor der Typenbezeichnung gekennzeichnet.  Eben-falls  wird  der  ausgew³hlte Typ  in  der  Informationszeile  im Monitorfenster  eingeblendet.  Alle  typspezifischen  Daten,  wie Speicherkapazit³t und Programmierspannung, werden daraufhin auto-matisch eingestellt und ebenfalls angezeigt.3.2.4. ModusIn diesem Menª wird von Ihnen ein geeigneter Programmieralgorith-mus  gew³hlt.  Die verschiedenen Algorithmen  unterscheiden  sich haupts³chlich in der L³nge des Programmierimpulses mit dem  jedes Byte im EPROM eingebrannt wird.- Auto      W³hlt  automatisch fªr den unter "Typ"  eingestellten             Speicher-Chip den am besten  geeigneten,  typenspezi-            fischen  Algorithmus aus (laut den  einprogrammierten             Herstellerangaben).  EPROMs, die diesen Komfort nicht             bieten, werden nicht zerstärt.- 50 ms     Dieser "normale" Algorithmus hat einen Programmierim-            puls  von 50 Millisekunden Dauer.  Er ist  der  Lang-            samste, aber auch der Sicherste. Verwenden mªssen Sie             jedoch diese Programmiergeschwindigkeit lediglich bei             den Typen 2716 und 2732 bzw. 2732A.- 1ms/4*    Dies  ist der "intelligente"   Algorithmus.  Intelli-            gent  bedeutet hier,  daõ solange mit einem  Program-            mierimpuls von einer Millisekunde gebrannt wird,  bis             die Information gespeichert ist. Anschlieõend erfolgt             eine  Sicherheitszugabe vom Vierfachen der bis  dahin             vergangenen Programmierzeit.  Er kann und sollte  auf             alle  EPROMs ab 2764 angewendet werden.- 1ms/3*    Auch ein intelligenter Algorithmus,  nur daõ hier die             Sicherheitszugabe das Dreifache des gesamten Program-            mierimpulses  betr³gt.  Er kann auf  folgende  EPROMs             angewendet werden: 2764, 2764A, 27128A, 27256, 27512,             27513 und 27011.- 1ms/1*    Wie oben, jedoch noch schneller. Die Langzeitstabili-            t³t  der  eingebrannten Daten kann  nicht  garantiert             werden.  Dieser  Algorithmus ist besonders  zum  Aus-            testen  von Programmen,  die sich in der  Entwicklung             befinden, geeignet.           - QUICK     Hierbei handelt es sich um den Schnellsten von allen,             da  er  mit sehr kurzen  Programmierzeiten  arbeitet.             Dieser Algorithmus sollte nur auf die modernen  Typen             27512  und 27513 angewendet werden.                    3.2.5. PufferDiese Befehle stehen dem Benutzer zur Verfªgung, wenn er Daten im Speicher  mit  dem eingebauten Hex/ASCII-Monitor  ver³ndern  will (siehe auch 3.1.).- Neu:            Nach einer Sicherheitsabfrage wird der  Puffer-                  speicher geläscht,  d.h. mit $FF gefªllt. Dabei                   ist  zu  beachten,  das der  Puffer  in  seiner                   wahren L³nge mit Offset geläscht  wird.  Dieser                   Befehl kann nicht rªckg³ngig gemacht werden!- Anfang:         Der Pufferanfang wird gezeigt,  also ab Adresse                             $000000.- Ende:           Es wird zum Ende des Puffers gesprungen.          - Fªllen:         Ein einzugebender oder auch der gesamte Puffer-                  bereich   kann  mit  einem  Byte   bzw.   einem                   Muster von 1 bis 8 Bytes L³nge gefªllt  werden.                             Dazu erscheint eine Dialogbox,  in der Sie  mit                             Hilfe  der "Backspace-Taste" die  Anfangs-  und                             Endadresse  sowie  das  Byte,  mit  dem  dieser                             Bereich gefªllt werden soll,  eingeben  mªssen.                             Alle  Eingaben  mªssen  natªrlich   hexadezimal                             erfolgen.  Es gibt aber auch noch eine  weitere                             Mäglichkeit den Bereich zu markieren:  Positio-                  nieren  Sie  den Cursor an den  Anfang  des  zu                             fªllenden  Bereiches  und  drªcken  die  Tasten                             'Control'+'S'-  wie Start.  Gehen Sie  nun  mit                             dem  Cursor  an  das  Ende  und  drªcken  'Con-                            trol'+'E'-  wie Ende.  Anschlieõend mªssen  Sie                             in  der Dialogbox nur noch den Wert  des  Bytes                             eingeben,  mit dem dieser Bereich gefªllt  wer-                            den soll.- Suchen:         Ein  bestimmter Pufferbereich kann  nach  einem                             Byte  oder  einer  Bytefolge  (max.   8  Bytes)                             durchsucht  werden.  Die Eingabe  des  Bereichs                             erfolgt analog dem "Fªllen".  Ist die  gesuchte                             Bytefolge  vorhanden,   so  befindet  sich  der                             Cursor auf dieser Adresse,  falls  nicht,  wird                             eine Meldung ausgegeben.- Verschieben:    Ein  definierter Speicherbereich wird  verscho-                            ben.  Definiert wird der Speicherbereich analog                             wie beim "Fªllen".  Die Zieladresse kann  durch                             Drªcken  von  'Control'+'D'  oder  einer   ent-                            sprechenden  Eingabe in der  Dialogbox  festge-                            legt werden.          - Gehe Adresse:   Der  Cursor  springt auf die in  der  Dialogbox                   eingegebene Adresse.          - Offset:         Hiermit  kann man den Anfang des Puffers  (also                   0)  auf jede Adresse des verfªgbaren  Speichers                             des  ATARI ST setzen.  In einer Dialogbox  wird                             Ihnen  angezeigt  in welchem Bereich  Sie  sich                             bewegen  kännen.    Sie  kännen  daraufhin  den                             gewªnschten  Offset (Verschiebung der  Anfangs-                            adresse  des  Puffers)  eingeben.   Der  einge-                            stellte  Offset gilt fªr alle  Funktionen.  Man                             hat damit z.B.  die Mäglichkeit,  vier 8  KByte                             EPROMs  hintereinander  in  den  Speicher    zu                             laden,  in  dem man jeweils den Offset  um  die                             Kapazit³t  des EPROMs erhäht,  um  anschlieõend                             den gesamten Puffer auf einmal in ein 32  KByte                             EPROM zu brennen.- Setze Marken:   Die  aktuelle Cursorposition wird  als  Start-,                             End-  oder Ziel-Adresse  (Bestimmung)  ªbernom-                            men.  Die  Adresse der Cursorposition  wird  in                             die  Dialogbox  der oben  genannten  Funktionen                             geschrieben,  so daõ z.B. das Verschieben eines                             Speicherbereiches  vollst³ndig  mit  der   Maus                             durchgefªhrt werden kann.3.2.6. Optionen- Lesen:          Der  eingesetzte Speicherchip  (EPROM,  EEPROM,                             ROM oder CMOS-RAM) wird  ausgelesen,  d.h.  die                             Daten,  die  im  Chip  stehen,  werden  in  den                   Arbeitsspeicher des ATARI ST geladen.- Vergleichen:    Der  Inhalt eines Speicher-Chips wird  mit  den                             Daten im Arbeitsspeicher verglichen.  Falls ein                             Unterschied besteht, wird dieser angezeigt.- Leertest:       Es wird geprªft,  ob der Speicherchip  geläscht                             ist,  d.h.  alle  Speicherzellen den  Wert  $FF                             haben.- Bit-Test:       ûberprªft,  ob ein bereits programmierter  Chip                             (z.B.  EPROM) mit den Daten im Puffer  program-                            miert werden kann,  ohne daõ er vorher geläscht                             werden  muõ.  Generell ist ein ûberbrennen  nur                             mäglich,  wenn eine Speicherzelle von logisch 1                             zu logisch 0 werden soll.- Prªfsumme:      Es  wird die Prªfsumme des  eingesetzten  Spei-                            cherchips  berechnet  und  angezeigt.  Es  wird                             eine  16- und eine 32-Bit Addition aller  Spei-                            cherzellen durchgefªhrt,  sowie eine 8-Bit  EX-                            KLUSIV-ODER-Verknªpfung  aller   Speicherzellen                             des Chips.  Alle drei Werte werden  ausgegeben.                             Notiert man sich die Prªfsumme,  so erh³lt  man                             einen fªr den Inhalt repr³sentativen  Wert,  so                             daõ  eine  sp³tere  Verwechslung   mathematisch                             gesehen kaum mehr mäglich ist.- Programm:       Der  Speicherchip  wird  mit  dem  Pufferinhalt                             programmiert,  dabei  wird  der  unter  "Modus"                             eingestellte  Algorithmus verwendet.  Die  Pro-                            grammierung wird durch einen wachsenden  Balken                             auf dem Bildschirm angezeigt.  Nach jeder  Pro-                            grammierung  erfolgt automatisch ein  Vergleich                             des  Puffers  mit  dem  Inhalt  des  Speichers.                             Eventuelle Fehler werden mit der Adresse  ange-                  zeigt.- Fastprog.:      Programmiert CMOS-RAMs (auch  EPROM-Simulatoren                             genannt).  Diese  Funktion darf nie auf  EPROMs                             etc.  angewendet werden,  da diese sonst ernst-                            haften  Schaden nehmen kännen.  CMOS-RAMs  sind                             "normale"  RAM-Speicher,    die  jedoch  extrem                             wenig  Strom benätigen,  so daõ sie durch  eine                             kleine  Batterie gepuffert werden  kännen.  Sie                             mªssen  w³hrend  der Programmierung  immer  mit                             einer  externen Spannung  versorgt  werden,  da                             sonst  beim  Entnehmen aus  dem  Sockel  sofort                             ihre  Daten geläscht wªrden.  Sie mªssen  daher                             auf  einer  separaten Platine  aufgebaut  sein,                             die ªber eine Kabelverbindung mit dem  Program-                            miersockel des Junior Prommers verbunden ist.- Einzelbyte:     Einzelne   Bytes   kännen   in   Speicher-Chips                   gebrannt  werden.  In einer Dialogbox  muõ  die                   Start-  und Endadresse des Puffers,  sowie  die                   Adresse im EPROM angegeben werden.                   3.2.7. Extras- Adressen:       Hier  kännen Sie bestimmen,  ob Sie  mit  allen                   oder  nur mit den geraden  bzw.  den  ungeraden                             Adressen arbeiten mächten.  Dieser 68000er spe-                            zifische Adressierungsmodus gilt fªr alle Funk-                  tionen  und  ist  gerade  beim  ATARI  ST  sehr                             wichtig.  Haben Sie z.B. die ungeraden Adressen                             ausgew³hlt, so werden beim Abspeichern ("File")                   auch nur die ungeraden Adressen  abgespeichert.                   Beim ATARI ST sind alle Speicherb³nke,  egal ob                   ROM (TOS),  RAM bzw.  EPROM,  in eine Low-  und                   eine High-Bank unterteilt. Ein 16-Bit Datenwort                   des  Prozessors ist also immer in  zwei  EPROMs                   abgelegt,  die unteren 8-Bit im EPROM der  Low-                  Bank und die oberen acht entsprechend im  EPROM                   der  High-Bank.  Alle  geraden  Adressen  eines                   Programmes  entsprechen der  High-Bank  (upper)                   und die ungeraden befinden sich in der Low-Bank                   (lower).                            Beispiel:  Ein 16-Bit Datenwort wird folgender-                  maõen zerlegt:                                           1 1 1 1 1 1             Bit: |  0 1 2 3 4 5 6 7 | 8 9 0 1 2 3 4 5 |                  |                  |                 |                  |   EPROM 1 (1L)   |   EPROM 2 (1U)  |                  |                  |                 |                  -------------------|------------------                        ungerade Adressen  |  gerade Adressen                     unteren 8-Bit      |  oberen 8-Bit                  Low-Bank           |  High-Bank                  lower              |  upper- Drucken:        Der  angegebene  Pufferbereich wird  auf  einem                             angeschlossenen  Drucker ausgegeben.  Dies  ist                   jedoch  nur  ªber  die  serielle   (Modem-Port)                   Schnittstelle  mäglich,  da der Junior  Prommer                   die parallele Schnittstelle belegt. - EEPROM Einst.:  Noch nicht implementiert (evt.  fªr  zukªnftige                   Anwendungen).- Juniortest:     Hier  stehen dem Anwender 24  Testroutinen  zum                   Abgleichen  des Junior Prommers zur  Verfªgung.                   Mit  Hilfe  eines Voltmeters werden  die  Span-                  nungen  am Programmiersockel  abgeglichen  bzw.                   ªberprªft.  Vor  dem durchfªhren der  einzelnen                   Tests sollte ein noch im Sockel steckender Chip                   unbedingt entnommen werden.  Ist nur fªr K³ufer                   des Junior Prommers als Teilesatz interessant.- Leertest 2:     Noch nicht implementiert (evt.  fªr  zukªnftige                   Anwendungen).           4. Aufbereiten von Programmen fªr eine EPROM-Bank4.1. Das INSTALL Programm (RAM-Disk)Mit  dem  Programm INSTALL TOS ist  eine  RAM-Disk  einzurichten. W³hlen  Sie unter den 10 Menªpunkten den fªr  Sie  entsprechenden aus  (abh³ngig von der Gräõe des zu  brennenden  Programms).  Die Menªpunkte  0 und 1 sind fªr eine "normale"  EPROM-Karte  (EPROM-Bank) gedacht,  mit der sich max. 128 KByte speichern lassen. Die Menªpunkte  2  bis  9 sind fªr  eine  "gebankte"  EPROM-Karte  zu verwenden, mit der es mäglich ist, gräõere Speicherkapazit³ten in EPROMs  "parat" zu haben.  Anschlieõend teilt Ihnen das  Programm mit, unter welcher Laufwerkskennung (Buchstaben) Sie die RAM-Disk ansprechen  kännen.  Nach  Drªcken  von  RETURN  kehren  Sie  zum gewohnten Desktop zurªck,  in dem Sie nun eine Floppystation  mit der ensprechenden Kennung einrichten mªssen.  Diese Floppystation entspricht nun Ihrer RAM-Disk.          4.1.1. Ein BeispielKopieren  Sie  das oder die Programme,  die Sie  sp³ter  von  der EPROM-Karte starten wollen in diese RAM-Disk. Vergessen Sie dabei nicht eventuelle Resourcedateien.  Mächten Sie z.B.  die  gesamte Treibersoftware zum Junior Prommer in EPROMs brennen,  so  mªssen Sie folgende Dateien in die RAM-Disk kopieren:  JPROMMER PRG  JPROMMER RSC  INSTALL  TOS  SAVE     PRG  SAVE     RSC    4.2. Das SAVE ProgrammStarten Sie das Programm SAVE PRG.  Dieses Programm wandelt  alle in  der  RAM-Disk  befindlichen  Programme  in  eine  fªr  EPROMs verst³ndliche Form um und sorgt dafªr,  daõ sich die  EPROM-Karte sp³ter  wie  eine Floppystation verh³lt (von  der  natªrlich  nur gelesen  werden kann).  Dieses Programm fragt Sie nun nach  einem Buchstaben,  n³mlich dem "Drive ID:". Zum Setzen des Cursors bzw. zum Läschen eines Buchstabens benutzen Sie bitte die Cursor- bzw. Backspace-  Taste/n.  Der  Buchstabe fªr die  "Drive  ID:"  dient sp³ter  als  Kennung fªr die  EPROM-Karte.  Geben  Sie  z.B.  den Buchstaben  H  ein,  so mªssen Sie Ihre  EPROM-Karte  sp³ter  als "Floppystation"  H  anmelden.  Mächten  Sie  Accessories  -  also Programme  die  beim Booten automatisch eingeladen  werden  -  in EPROMs brennen, so ist das Feld "Drive ist Bootdisk" anzuklicken. Dieses  Feld  erscheint  dann  invers,  d.h.  weiõe  Schrift  auf schwarzem Hintergrund.Was sind Accessories?Programme,  die  unmittelbar  nach dem Einschalten  des  Rechners automatisch geladen werden,  nennt man Accessories.  Solche  Pro-gramme  lassen sich aus jeder  GEM-Anwendung  aufrufen.  Bekannte Accessories sind z.B.  das Kontrollfeld oder der VT-52  Emulator. Wollen Sie solche Programme auch von Ihrer EPROM-Karte booten, so ist neben dem Buchstaben fªr die EPROM-Karte das Feld "Drive  ist Bootdisk"  anzuklicken.  Schalten  Sie nun,  nachdem  die  EPROMs gebrannt sind,  den Rechner mit einer entsprechenden  EPROM-Karte ein,   so   werden   alle  Programme  mit  der   Extension   .ACC (Accessories) von der EPROM-Karte gebootet. Befinden sich auf der EPROM-Karte  auõer  den Accessories noch  weitere  Programme,  so kännen  Sie sich diese unter der Laufwerkskennung,  die  Sie  als Drive ID gew³hlt haben, ansehen und starten.  Das SichernNach  dem Anklicken von "Sichern" erscheint eine  Objekt-Auswahl-Box, die dazu dient, dem oder den umgewandelten Programm/en einen Namen  zu geben und eventuell ein Laufwerk  anzugeben.  Voreinge-stellt  ist  der Name ROMMODUL EP1.  Belassen Sie es  bei  diesem Namen,  so  befindet sich nach dem "Sichern" auf der  angegebenen Diskette mindestens ein File mit dem Namen  ROMMODUL EP1.  Dieses neu  erzeugte File enth³lt das/die Programm/e,  das/die  Sie  an-schlieõend brennen kännen.        4.3. Einladen eines ROM-Moduls  Starten  Sie  nun  das  eigentliche  Treiberprogramm  zum  Junior Prommer JPROMMER PRG. Stellen Sie den verwendeten EPROM-Typ (Typ) und den Programmier-Modus (Modus) ein. Vergewissern Sie sich, daõ unter dem Menªpunkt "Extras" alle Adressen eingestellt ist. Jetzt w³hlen Sie unter dem Menªpunkt "File" Laden an und klicken in der Fileselect-Box den Namen an,  den sie beim SAVE Programm vergeben haben,  z.B. ROMMODUL EP1. Da beim 68000er Prozessor des ATARI ST jedes  Programm  in gerade und ungerade Adressen  geteilt  werden muõ,  mªssen  Sie  nun unter dem Menªpunkt  "Extras"  auf  gerade Adressen  umstellen.  Jetzt kännen Sie Ihr erstes  EPROM  brennen (programmieren),  indem  Sie unter dem Menªpunkt "Optionen"  Pro-gramm anklicken (zuvor natªrlich richtigen EPROM-Typ  ausw³hlen). Nach  dem  Programmieren erfolgt automatisch  ein  Vergleich  des Puffers  im Rechner mit dem des EPROMs.  Ist dieser Test  erfolg-reich abgeschlossen (O.K.- Meldung) dªrfen Sie das EPROM  entneh-men. Dieses soeben gebrannte EPROM beschriften Sie bitte mit "4U" (upper),  um  es  anschlieõend an der richtigen  Stelle  auf  der EPROM-Karte einsetzen zu kännen.Nachdem Sie die geraden Adressen gebrannt haben (4U),  mªssen Sie natªrlich auch noch die ungeraden Adressen in ein weiteres  neues EPROM brennen. Dazu setzen Sie ein leeres EPROM in den Sockel ein und stellen im Menªpunt "Extras" auf ungerade Adressen um.  Jetzt kännen Sie wie gewohnt programmieren. Das fertige EPROM beschrif-ten Sie bitte mit "4L" (lower).Hat das SAVE Programm (siehe 4.2) auõer dem File ROMMODUL EP1 auch noch ein weiteres File mit der Extension EP2 erzeugt, weil Ihr/e Programm/e zu groõ war/en, so mªssen Sie dieses File in zwei weitere EPROMs brennen. Dies geschieht analog wie unter 4.3. beschrieben, nur daõ Sie die fertigen EPROMs nun bitte mit 3U bzw. 3L beschriften. Achtung: Upper- (U) und Lower- (L) EPROM sowie Positions-Nummer nicht vertauschen! SchluõbemerkungDie Erfahrung hat uns gezeigt, daõ so komplexe Projekte, wie z.B. der   Junior Prommer äfters mit  gewissen   Anlaufschwierigkeiten verbunden  sind.  Trotz gewissenhafter und  langwieriger  Prªfung bzw.  Entwicklung, kann sich im Laufe der Zeit noch die eine oder andere  Verbesserung  an  der  Software  sowie  dieser  Anleitung ergeben.Wir sind Ihnen daher fªr jede Anregung bzw.  konstruktive  Kritik dankbar.  Viele  gute Ideen und Verbesserungen sind  letztendlich auf  Anregungen unserer Kunden entstanden.  Dashalb ist auch  der Anleitungstext  auf der  mitgelieferten  Junior  Prommer-Diskette enthalten.Anhang A          Bestªckungsplan  (Maõstab 1:1)Anhang B          Schaltbild des Junior PrommersAnhang C          Stªckliste zum Junior PrommerWiderst³nde:                     Kondensatoren:alle 1/4 Watt Kohleschicht       C1 : 220¾ / 16V Elko, stehend              R1,R13 : 1K8                     C3 : 100p keramischR2 : 47                         C4 : 100¾ / 35V Elko, stehend R3,R5,R27 : 1K                   C5,C6 : 100n vielschichtR4,R6,R19,R20,R25 : 22KR7 : 910 1% Metallschicht          Halbleiter:R8 : 10K  1% Metallschicht       R9 : 390  1% Metallschicht      D1-D3 : 1N4148 R10 : 16K  1% Metallschicht      T1,T3 : BC547BR11 : 330  1% Metallschicht     T2 : BC328-25R12 : 3K9  1% Metallschicht      T4-T6 : BC557BR14 : 5K1                        IC1 : 4021R15,R16 : 15                    IC2,IC4,IC5 : 4094 R17,R21,R23 : 10K                IC3 : 28 pol. NullkraftsockelR18,R22 : 6K8                    IC6 : 4040R26 : 180                       IC7 : TL497                                 IC8 : 7406                                 D4 : LED 3mm rot                                      D5 : Zenerdiode 33V / 400mW                                 Sonstiges:ST1 : Doppelpfostenleiste, 26 poligST2 : Stromversorgungsbuchse (Printmontage)TR1 : Trimmer klein, stehend 1KA1 : Single-Inline-Array 8*22KA2 : Single-Inline-Array 8*1K8J1-J3 : je nach RechnertypL1,L2 : Miniaturdrossel 100¾H (Conrad)        oder Netzentstärdrossel mit 50¾Hevtl. IC-Fassungen : 4*DIL 14, 5*DIL 1625 poliger Sub-D Quetschstecker26 poliger, doppelreihiger Pfostenverbinder, Quetschausfªhrungca. 50cm 26 adriges FlachbandkabelGeh³use : 123L * 79B * 27Tdoppelseitige durchkontaktierte Platine3,5" Diskette mit Treibersoftware
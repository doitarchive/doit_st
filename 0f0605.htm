<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.05.2004 -->
<html>
<head>
<title>
DOIT_ST - Tips u. Tricks zur Atari Serie: Cardridge Port Interface
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="doit@doitarchive.de">
<link rev=made href="mailto:doit@doitarchive.de" title="E-Mail">
<link rel=home href="doitst1h.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0f06.htm" target="UDOcon"><img src="udo_up.gif" alt="Der Romport" border=0 width="24" height="24"></a>
<a href="0f0604.htm" target="UDOcon"><img src="udo_lf.gif" alt="Easybank" border=0 width="24" height="24"></a>
<a href="0f0606.htm" target="UDOcon"><img src="udo_rg.gif" alt="Ultimate Rip Cardridge" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="Cardridge_20Port_20Interface">15.6.5 Cardridge Port Interface</a></h1>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p><tt> Cartridge Port Interface </tt>
<br>
<br>April 14, 1987
<br>
</p>
<p><img src="image/english.gif" border=0 width="35" height="22"></p><br>
<p>
<br>
</p>
<p><tt> Abstract </tt>
<br>
<br>
</p>
<p>The <a href="0305.htm" target="UDOcon">Atari ST</a>'s 128 Kbyte read-only cartridge port can be
transformed into a 64 Kbyte read/write port by using this circuit.
Writing to this port is slower than reading it by a factor of two,
approximately. It can be written to at a speed of 76 Kilowords per
second.
<br>
</p>
<p>This interface can be built by using only three chips, two AS-TTLs
and a PAL - a total parts cost of less than $15.
<br>
</p>
<p>
<br>
</p>
<p><tt> How It works </tt>
<br>
<br>
</p>
<p><b> 1. Background <a href="0205.htm" target="UDOcon">Information</a> </b>
<br>
</p>
<p>The ST brings out 15 address lines (A1-A15), 16 data lines
(d0-D15) /LDS, [*] /UDS, /AS, /ROM4 and /ROM3.
<br>
</p>
<p>Of these signals, /UDS, /LDS, and /AS have the same meaning as
they do for a 68000 <a href="080108.htm" target="UDOcon">CPU</a>. A1-A15 are the least significant 15 address
lines. D0-D15 are connected internally to the ST's data-bus. /ROM3 and
/ROM4 are generated by the <a href="080105.htm" target="UDOcon">MMU</a>, and are output signals, which tell the
external hardware which of the two banks is being addressed. /ROM4 is
activated when the 68000 tries to read address 0xfa0000-0xfaffff.
/ROM3 is activated when the 68000 tries to read address
0xfb0000-0xfbffff (note that the names of these signals are
counterintuitive; ie. they have been correctly written above).
<br>
</p>
<p>
<br><b> 2. Caveats </b>
<br>
</p>
<p>Any and all hardware connected to this modified port must be fast
- fast enough to run with no wait-states and fast enough to tolerate
the decoding delays introduced by this circuit. I've used 200ns static
RAM chips without any trouble.
<br>
</p>
<p>It is advisable to use /ROM4 to time any external hardware you
build (in preference to /AS), since /ROM4 contains the necessary delay
to ensure the addresses are stable when it is activated. (At least
this is what I assumed, and it worked.)
<br>
</p>
<p>The data for write operations is produced by the two AS-TTL
latches[*] used in the circuit (see below.)
<br>
</p>
<p>
<br>[*] A preceeding slash indicates an active-low signal
<br>
<br>
</p>
<p><b> 3. Operating Principle </b>
<br>
<br>
</p>
<dl>
<dt><b>3.1.</b></dt><dd> The PAL contains an asynchronous finite state machine. When the
upper bank (address 0xfbxxxx) is read, the PAL manufactures an A0
(based on the state of /UDS and /LDS) and supplies this to U1. At the
end of the read cycle, U1 and U2 are clocked to latch the least
significant 16 address bits into the PAL.
<br>&nbsp;
<dt><b>3.2.</b></dt><dd> Subsequently, when the lower bank is read (address 0xfaxxxx), the
latched address (which was latched in step 1) is supplied as data and
/PWE (the write-enable signal) is activated (it goes low). /ROM4
active should tell the external hardware that it is being addressed
and /PWE active should tell it that this is a write-cycle. As an
interesting side-effect of this design, the data word written out is
read back by the 68000 (you can use this fact to debug the
interface!).
<br>&nbsp;
<dt><b>3.3.</b></dt><dd> Reads to the upper bank will return garbage, unless some ROM is
present there. Multiple successive reads to this bank will not be
harmful (ie. they will not confuse the state-machine) and the latest
adress will be latched preparation for a read to the lower bank.
<br>&nbsp;
<br>Note that if you put RAM in the upper-bank, you will not be able
to write to it. Connecting the /PWE line to such RAM will have no
effect Putting a ROM in this address space should not create any
problems (although I haven't tried this).
<br>&nbsp;
<dt><b>Example:</b></dt><dd>
<br>&nbsp;
<br>To write data 0xcd01 to address 0x3bc0 in the lower bank, the
following steps are performed.
<br>
<br>&nbsp;
<br>step1. read byte at address 0xfbcd01 (0xfb0000+data)
<br>step2. read word to address 0xfa3bc0 (0xfa0000+addr)
<br>
<br>&nbsp;
<br>[*] I used AS374s, you can use AS or FAST. High speed chips are
necessary so that delays from /OE (latch output-enable) to valid data
are not critical. You could possibly get away with ALSTTL, but I
haven't tried this.
<br>
<br>&nbsp;
</dl>
<p>
<br>
<br>
</p>
<p><tt> Construction </tt>
<br>
<br>
</p>
<p>The schematic should help in this department. Constructing this
gadget is easy and cheap. The hardest part might be trying to find a
connector for this port. You can get one from:
<br>
</p>
<p>Douglas Electronics,
<br>718 Marina Blvd.,
<br>SAN LEANDRO, Calif. 94577
<br>
</p>
<p>1-415-483-8770
<br>
</p>
<p>(part number 33-DE-40. $10.00 per piece)
<br>
<br>
</p>
<p>[*] Another problem you might face is getting the PAL programmed.
If you don't know of a way to get the PAL programmed, you could use
discrete logic chips to build the state machine.
<br>
</p>
<p><b> 4. Building it </b>
<br>
</p>
<p>The pin-outs given in the User's guide are CORRECT. The pin-outs
given in the &quot;Internals&quot; book are WRONG. Follow the
schematic. You can get the pinouts for the '374s from an ASTTL or FAST
databook. The PAL16L8's pinouts are given below.
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/cart.gif" border=0 width="640" height="400"></p><br>
<p>
<br>
<br>
</p>
<p>[*] You guessed it - I'm not connected with D.E. although I and a
number of others have purchased these connectors from them.
<br>
</p>
<p>PAL Pinouts in the external &quot;Program&quot; Folder
<br>
</p>
<p>
<br>Legend:
<br>
</p>
<p>A preceding slash implies an active-low signal.
<br>NC implies no-contact (nothing should be connected to these pins.)
<br>(i) indicates that the signal is an input.
<br>(o) indicates that the signal is an output.
<br>(A) implies that the signal comes from/goes to the Atari cart.
port.
<br>(u1) implies that the signal goes to U1, the least-significant
latch.
<br>(u2) implies that the signal goes to U2, the most-significant
latch.
<br>(ex) implies that the signal goes to any external hardware
connected, such as a ram-disk.
<br>
</p>
<p>
<br>
</p>
<p>
<br>
</p>
<p>
<br>
</p>
<div align=center><table border=1 frame=box>
<caption align=bottom>Tabelle 91: PAL Pinout</caption>
<tr>
  <td align=left valign=top>pin #</td>
  <td align=left valign=top>signal</td>
  <td align=left valign=top>pin #</td>
  <td align=left valign=top>signal</td>
</tr>
<tr>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
</tr>
<tr>
  <td align=left valign=top>1</td>
  <td align=left valign=top>/UDS  (i, A)</td>
  <td align=left valign=top>11</td>
  <td align=left valign=top>NC (no contact)</td>
</tr>
<tr>
  <td align=left valign=top>2</td>
  <td align=left valign=top>/LDS  (i, A)</td>
  <td align=left valign=top>12</td>
  <td align=left valign=top>/OE (o, U1, U2)</td>
</tr>
<tr>
  <td align=left valign=top>3</td>
  <td align=left valign=top>/ROM4 (i, A)</td>
  <td align=left valign=top>13</td>
  <td align=left valign=top>A0 (o, U1)</td>
</tr>
<tr>
  <td align=left valign=top>4</td>
  <td align=left valign=top>/ROM3 (i, A)</td>
  <td align=left valign=top>14</td>
  <td align=left valign=top>/PWE (o, ex)</td>
</tr>
<tr>
  <td align=left valign=top>5</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>15</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>6</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>16</td>
  <td align=left valign=top>/dclk (o, U1,U2)</td>
</tr>
<tr>
  <td align=left valign=top>7</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>17</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>8</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>18</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>9</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>19</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>10</td>
  <td align=left valign=top>gnd    (A)</td>
  <td align=left valign=top>20</td>
  <td align=left valign=top>Vcc (A)</td>
</tr>
</table></div>

<p>
<br>
</p>
<p>Note that the line called &quot;help&quot; is shown as
&quot;NC&quot; since it is to be left unconnected.
<br>
</p>
<p>Anees Munshi.
<br>ARPA asm%csri.toronto.edu@csnet-relay.arpa
<br>BitNet asm@utcsri.UTORONTO
<br>CSNet asm@csri.toronto.edu
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de/">Robert Schaffner</a> (<a href="mailto:doit@doitarchive.de">doit@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Mai 2004</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0f06.htm" target="UDOcon"><img src="udo_up.gif" alt="Der Romport" border=0 width="24" height="24"></a>
<a href="0f0604.htm" target="UDOcon"><img src="udo_lf.gif" alt="Easybank" border=0 width="24" height="24"></a>
<a href="0f0606.htm" target="UDOcon"><img src="udo_rg.gif" alt="Ultimate Rip Cardridge" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>

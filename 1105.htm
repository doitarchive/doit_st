<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.05.2004 -->
<html>
<head>
<title>
DOIT_ST - Tips u. Tricks zur Atari Serie: PARCOPY Cable
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="doit@doitarchive.de">
<link rev=made href="mailto:doit@doitarchive.de" title="E-Mail">
<link rel=home href="doitst1h.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="11.htm" target="UDOcon"><img src="udo_up.gif" alt="Verbindungskabel" border=0 width="24" height="24"></a>
<a href="1104.htm" target="UDOcon"><img src="udo_lf.gif" alt="ST to PC" border=0 width="24" height="24"></a>
<a href="1106.htm" target="UDOcon"><img src="udo_rg.gif" alt="Atari &lt;&gt; Portofolio" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="PARCOPY_20Cable">17.5 PARCOPY Cable</a></h1>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p><tt> PARCOPY - Das Kabel im Klartext </tt>
<br>
<br>
</p>
<p><img src="image/deutsch.gif" border=0 width="35" height="22"></p><br>
<p>Wie Sie sicherlich wissen existiert seit langer Zeit ein
Kopierprogramm das es erlaubt Daten zwischen einem PC und einem
Atari-Computer hin- und her zu kopieren. PARCP von Petr Stehlik
erledigt diese Arbeiten schnell und sauber. F&uuml;r den PC
ben&ouml;tigen Sie eine kleine Hardware die aus zwei DB 25 Steckern
und zwei 74HC Chips bestehet. Das Interface ist schnell gebaut und
sollte Problemlos funktionieren.
<br>
</p>
<p>In der Abbildung 1 sehen Sie das PC-Printerport Interface und
Abbildung 2 zeigt das eigentliche PARCP-Kabel das Sie ebenfalls selbst
herstellen m&uuml;ssen.
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/parc.gif" border=0 width="640" height="400"></p><br>
<div align=center>
<br>
<br>
</div>
<p align=center><img src="image/parc1.gif" border=0 width="305" height="310"></p><br>
<p>
<br>
<br>
</p>
<p>Idee und (c) Petr Stehlik
<br>Email: pstehlik@zln.cz
<br>Email: stehlik@cyberstrider.org
<br>
</p>
<p>Petr Stehlik
<br>Pod Tlustou 5083
<br>76001 Zlin
<br>Czech Republic
<br>
</p>
<p>
<br>
<br>
</p>
<p>PARCP stands for PARallel CoPier. It does copy files between two
computers. It acts as a file network running over parallel (=printer)
ports of those computers. This allows you to copy many and large files
very quickly from one machine to another, either by simple drag
&amp;amp; drop, or automated in batch mode or you can choose from two
different user interfaces (command line like in a FTP client and
fullscreen windows just like Norton Commander).
<br>
</p>
<p>It's cheap, it's fast, it's available everywhere, and it's easy to
setup and use.
<br>
</p>
<p>The PARCP cable is all that's needed to connect two computers, and
it can be build for very few bucks. You can even look around and if
you find parallel LapLink cable, you need nothing but PARCP!
Connecting two computers takes only a seconds decision and a few
minutes work, no need to search for a netcard. This might even be
especially important in the case of notebooks, where netcard are not
easily available.
<br>
</p>
<p>Not requiring a netcard also means that apart from connecting the
cables, everything else is software configuration (which in principle
could be made very easy). PARCP can connect two computers running
different operating systems. No need to search for a common network
protocol, PARCP itself is a 'common protocol'.
<br>
</p>
<p>PARCP needs not to be 'installed' in the way you know it from
Microsoft operating systems - complicated procedure, several reboots,
no ability to uninstall. No! PARCP can be just unpacked and started -
and it works! Without reboots, without conflicts with other hardware
or software components, without headaches...
<br>
</p>
<p>PARCP can even connect two different platforms, like is IBM PC or
clone and <a href="0305.htm" target="UDOcon">Atari ST</a> (or compatible). For Atari computers it's even more
important, because there are nearly no network cards. Sometimes a ZIP
disk is used to transfer files from one computer to another - first
copy files from one computer to ZIP, then copy files from ZIP to
another computer.
<br>
</p>
<p>Is that easy? Fast? No!
<br>
</p>
<p>PARCP easily outperforms parallel ZIP in reading - so if you
connect those two computers with a PARCP cable, it's more than two
times faster to copy the same amount of data from one computer to
another.
<br>
</p>
<p>PARCP has been designed to work on two different computer
platforms:
<br>
</p>
<dl>
<dt><b>-</b></dt><dd> <a href="0305.htm" target="UDOcon">Atari ST</a>/STE/TT/Falcon and compatible computers (Medusa/Hades).
PARCP is also compatible with all sorts of accelerator cards such as
AfterBurner040 for Falcon etc. Milan is not supported yet because it
lacks the ST-compatible parallel port.
<br>
<br>&nbsp;
<dt><b>-</b></dt><dd> IBM PC 386 and compatible clones (i.e. machines with 32-bit x86
<a href="080108.htm" target="UDOcon">CPU</a>). PARCP has been tested succesfully on AMD 386, Intel 486, Intel
Pentium, Cyrix 6x86 and M2 as well as on AMD K6-2 processors.
<br>
<br>&nbsp;
</dl>
<p>
<br>
</p>
<p>I will use the word <tt>Atari </tt> as a general reference for any
of the computers with Motorola <a href="080108.htm" target="UDOcon">CPU</a> inside and running TOS or
compatible operating system (MiNT/MagiC) and the word
&lt;STRONG&gt;PC&lt;/STRONG&gt; for any computer with Intel or
compatible <a href="080108.htm" target="UDOcon">CPU</a> and running DOS or compatible operating system
(Windows9x/OS/2) or Linux-ix86.
<br>
</p>
<p>The main feature of PARCP is the ability of connecting of any two
supported computers:
<br>
</p>
<p>
<br>Atari &lt;=====&gt; Atari
<br>Atari &lt;=====&gt; PC
<br>PC &lt;=====&gt; PC
<br>
</p>
<p>
<br>
</p>
<p>PARCP comes in three different binary files compiled for three
main operating systems (OS):
<br>
</p>
<dl>
<dt><b>-</b></dt><dd> TOS on Atari (every version from 1.0 up to 4.04) Patched TOS
(e.g. Kaos) and multitasking OS running on top of TOS (e.g. MultiGEM,
Geneva) should be OK for PARCP as well.
<br>
<br>&nbsp;
<dt><b>-</b></dt><dd> DOS on PC (perhaps from version 3.3?) FreeDOS and multitasking OS
running on top of DOS (DESQview, Windows 3.x) should be OK as well.
<br>
<br>&nbsp;
<dt><b>-</b></dt><dd> Linux-ix86 on PC (ELF, from v1.2.13?) I don't mean DOSemu for
Linux, PARCP comes also as a native Linux application!
<br>
<br>&nbsp;
</dl>
<p>All three binary versions of PARCP look and behave exactly the
same way, which is handy for user learning its capabilities.
<br>
<br>
</p>
<p>PARCP runs well under following pre-emptive multitasking OS:
<br>Atari computers:
<br>MiNT
<br>MagiC
<br>
<br>PC computers:
<br>Windows95/Windows98
<br>OS/2
<br>Linux-ix86
<br>
</p>
<p>
<br>
</p>
<p>Please note PARCP can't run under WindowsNT, because this
operating system doesn't allow user programs to program hardware of
parallel port directly. There are two solutions for transferring files
from/to NTFS (WindowsNT native file system). Either use
http://www.sysinternals.com NTFS driver for DOS/Windows9x that will
allow you to read NTFS under plain DOS or Windows, or you can use a
recent version of Linux kernel (2.2.x) that contains NTFS driver.
<br>
</p>
<p>Main PARCP features under these enhanced OS:
<br>
</p>
<p>non-blocking waiting for user action
<br>
<br>PARCP doesn't hog OS nor <a href="080108.htm" target="UDOcon">CPU</a> while waiting for user - the average
load is close to zero when PARCP is idle. Therefore other applications
continue working at full speed when PARCP is waiting. Thus you can
have PARCP Server running all the time in the background, always ready
for transmission.
<br>
<br>support of long file names (LFN) and file attributes
<br>PARCP allows you to copy files from one operating system to
another with original long file names preserved. Some rather unusual
combinations of possible transfers of long file names between
different environments are listed here:
<br>
<br>Windows95's V-FAT / MiNT's minix-fs
<br>Linux's ext2-fs / MagiC's V-FAT
<br>MiNT's ISO9660 / OS/2's HPFS
<br>
<br>
</p>
<pre>*****************************************************************
* note: you need not to build the cable, you can simply buy it! *
*                                                               *
*  please refer to the section 6.3 of this document.            *
*****************************************************************
</pre>
<p>
<br>
</p>
<p>The following diagram shows you how to build your own parallel
cable for use with my PARCP (PARallel CoPy). This cable allows you to
connect your computer with any other computer if both machines have
either bidirectional parallel ports or UNI-BI adapter fitted.
<br>
</p>
<p>The easiest way how to build the cable is to buy a cable for
dataswitch. It's usually marked as 25M-25M. That means there are MALE
Canon-25 connectors on both ends of that cable. The cable has either
18 or 25 wires in itself. The 18-wires one is sufficient for our
needs, because PARCP uses just 18 wires. When you buy that cable, you
just need to exchange wires on pins 1 an 11 at one ends of cable (and
to cut the wires on unused pins such as pin 10,12,13..17).
<br>
</p>
<p>
<br>
</p>
<p>The PARCP cable should consist of just 18 wires. The wiring
diagram is as follows:
<br>
</p>
<p>
<br>
</p>
<pre>
Canon-25 MALE                      Canon-25 MALE
-------------                      -------------
pin         connection             pin
 1 ............................... 11  (Strobe =&gt; Busy)
 2 ...............................  2  (Data 0)
 3 ...............................  3  (Data 1)
 4 ...............................  4  (Data 2)
 5 ...............................  5  (Data 3)
 6 ...............................  6  (Data 4)
 7 ...............................  7  (Data 5)
 8 ...............................  8  (Data 6)
 9 ...............................  9  (Data 7)
11 ...............................  1  (Busy &lt;= Strobe)
18 ............................... 18  (GND of Data 0)
19 ............................... 19  (GND of Data 1)
20 ............................... 20  (GND of Data 2)
21 ............................... 21  (GND of Data 3)
22 ............................... 22  (GND of Data 4)
23 ............................... 23  (GND of Data 5)
24 ............................... 24  (GND of Data 6)
25 ............................... 25  (GND of Data 7)

</pre>
<p>
<br>
</p>
<p>The 'schematics' above wanted to say that all 8 data bits are
straight wires, while the Strobe and Busy signals are crossed in one
connector. The GND is connected in both connectors as well, of course
(please note that some cables do not have enough wires for connecting
pins 18-24. In this case it should be OK to connect just the 25th
Pin).
<br>
</p>
<p>This cable also works with ST-Trans &amp;copy; Atari 1992, with
plip protocol of MiNT-Net &amp;copy; Kay Roemer and with HDD_DMN3 by
MC Soft &amp;amp; Hard.
<br>
</p>
<p>Warning: if the cable length should exceed 5 meters, please get a
cable with proper metal shielding, otherwise random errors may occur
during the transfer.
<br>
<br>
<br>
</p>
<p><b> Resources: </b>
<br>
</p>
<p>
<br>ST-Trans (c) Atari 1992 (Atari-Atari only)
<br>With simple GEM interface full of bugs and rock-solid but slow
routines it's not a competitor for me. However I got inspired by the
handshake method used there...
<br>
<br>
</p>
<p>MiNT-Net (PLIP driver) (c) Kay Roemer (MiNT-MiNT only)
<br>PLIP driver is a modified SLIP driver for parallel port. Can
connect two Atari computers running MiNT and MiNT-Net. It's interrupt
driven, so it's slower than PARCP. It's a real NET, though.
<br>
<br>
</p>
<p>HDD_DMN3 (c) MC Soft &amp;amp; Hard 1997 (Atari-PC only)
<br>HDD Daemon is a complete solution for people with <a href="0305.htm" target="UDOcon">Atari ST</a> without
harddisk and with an PC computer. HDD_DMN will connect those computers
so Atari is able to read PC's harddisk. Interesting piece of software,
but a bit complicated for me.
<br>
<br>
</p>
<p>PC2Am (c) Michal Kara AKA Lemming (Amiga-PC only)
<br>PC &lt;=&gt; Amiga parallel network software. Powerful and fast
(100% assembler). Helped me in the beginning with bidirectional
parallel ports programming.
<br>
</p>
<p>PARCP Home Site:
<br>http://joy.atari.org/
<br>Official Joy WWW site, home of PARCP. Up-to-date versions, on-line
history file.
<br>
</p>
<p>http://cas3.zlin.vutbr.cz/&nbsp;stehlik/
<br>Backup WWW site.
<br>RST BBS in Pilsen, Czech Republic, tel. +420-19-227944
<br>Official PARCP BBS.
<br>Kockens BBS in Sweden, tel. +4646250256
<br>Another great Atari BBS supporting PARCP.
<br>PARCP Support Site in UK:
<br>http://www.cyberstrider.org
<br>CyberSTrider site with latest releases of the shareware and demo
software.
<br>
<br>
<br>Getting the PARCP cable
<br>
</p>
<p>You can easily get the PARCP cable directly from me. Just send me
15 DM, 9 US$ or 5 UKP in a (registered) letter and I'll send you back
the 2 metres (6 feets) long PARCP cable.
<br>
</p>
<p>Feel free to send any bugreports, suggestions, remarks,
registrations...
<br>E-mail:
<br>joy@sophics.cz
<br>stehlik@cyberstrider.org
<br>Snail mail:
<br>Petr Stehlik
<br>Pod Tlustou 5083
<br>76001 Zlin
<br>Czech Republic
<br>
</p>
<p>
<br>
<br>
</p>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de/">Robert Schaffner</a> (<a href="mailto:doit@doitarchive.de">doit@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Mai 2004</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="11.htm" target="UDOcon"><img src="udo_up.gif" alt="Verbindungskabel" border=0 width="24" height="24"></a>
<a href="1104.htm" target="UDOcon"><img src="udo_lf.gif" alt="ST to PC" border=0 width="24" height="24"></a>
<a href="1106.htm" target="UDOcon"><img src="udo_rg.gif" alt="Atari &lt;&gt; Portofolio" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>
